/*! For license information please see admin.min.js.LICENSE.txt */
(()=>{var e={8478:(e,t,n)=>{e.exports=n(6570)},3819:(e,t,n)=>{"use strict";var r=n(4243),a=n(3402),o=n(8998),i=n(9774),l=n(9627),u=n(1842),s=n(5548),c=n(7641),f=n(3145),d=n(9041),p=n(3059);e.exports=function(e){return new Promise((function(t,n){var h,m=e.data,v=e.headers,g=e.responseType;function y(){e.cancelToken&&e.cancelToken.unsubscribe(h),e.signal&&e.signal.removeEventListener("abort",h)}r.isFormData(m)&&r.isStandardBrowserEnv()&&delete v["Content-Type"];var b=new XMLHttpRequest;if(e.auth){var w=e.auth.username||"",k=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";v.Authorization="Basic "+btoa(w+":"+k)}var E=l(e.baseURL,e.url);function x(){if(b){var r="getAllResponseHeaders"in b?u(b.getAllResponseHeaders()):null,o={data:g&&"text"!==g&&"json"!==g?b.response:b.responseText,status:b.status,statusText:b.statusText,headers:r,config:e,request:b};a((function(e){t(e),y()}),(function(e){n(e),y()}),o),b=null}}if(b.open(e.method.toUpperCase(),i(E,e.params,e.paramsSerializer),!0),b.timeout=e.timeout,"onloadend"in b?b.onloadend=x:b.onreadystatechange=function(){b&&4===b.readyState&&(0!==b.status||b.responseURL&&0===b.responseURL.indexOf("file:"))&&setTimeout(x)},b.onabort=function(){b&&(n(new f("Request aborted",f.ECONNABORTED,e,b)),b=null)},b.onerror=function(){n(new f("Network Error",f.ERR_NETWORK,e,b,b)),b=null},b.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",r=e.transitional||c;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(new f(t,r.clarifyTimeoutError?f.ETIMEDOUT:f.ECONNABORTED,e,b)),b=null},r.isStandardBrowserEnv()){var S=(e.withCredentials||s(E))&&e.xsrfCookieName?o.read(e.xsrfCookieName):void 0;S&&(v[e.xsrfHeaderName]=S)}"setRequestHeader"in b&&r.forEach(v,(function(e,t){void 0===m&&"content-type"===t.toLowerCase()?delete v[t]:b.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(b.withCredentials=!!e.withCredentials),g&&"json"!==g&&(b.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&b.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&b.upload&&b.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(h=function(e){b&&(n(!e||e&&e.type?new d:e),b.abort(),b=null)},e.cancelToken&&e.cancelToken.subscribe(h),e.signal&&(e.signal.aborted?h():e.signal.addEventListener("abort",h))),m||(m=null);var C=p(E);C&&-1===["http","https","file"].indexOf(C)?n(new f("Unsupported protocol "+C+":",f.ERR_BAD_REQUEST,e)):b.send(m)}))}},6570:(e,t,n)=>{"use strict";var r=n(4243),a=n(7342),o=n(372),i=n(719),l=function e(t){var n=new o(t),l=a(o.prototype.request,n);return r.extend(l,o.prototype,n),r.extend(l,n),l.create=function(n){return e(i(t,n))},l}(n(6687));l.Axios=o,l.CanceledError=n(9041),l.CancelToken=n(6028),l.isCancel=n(4429),l.VERSION=n(4482).version,l.toFormData=n(1261),l.AxiosError=n(3145),l.Cancel=l.CanceledError,l.all=function(e){return Promise.all(e)},l.spread=n(2497),l.isAxiosError=n(4256),e.exports=l,e.exports.default=l},6028:(e,t,n)=>{"use strict";var r=n(9041);function a(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;this.promise.then((function(e){if(n._listeners){var t,r=n._listeners.length;for(t=0;t<r;t++)n._listeners[t](e);n._listeners=null}})),this.promise.then=function(e){var t,r=new Promise((function(e){n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}a.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},a.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},a.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},a.source=function(){var e;return{token:new a((function(t){e=t})),cancel:e}},e.exports=a},9041:(e,t,n)=>{"use strict";var r=n(3145);function a(e){r.call(this,null==e?"canceled":e,r.ERR_CANCELED),this.name="CanceledError"}n(4243).inherits(a,r,{__CANCEL__:!0}),e.exports=a},4429:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},372:(e,t,n)=>{"use strict";var r=n(4243),a=n(9774),o=n(3919),i=n(9547),l=n(719),u=n(9627),s=n(7518),c=s.validators;function f(e){this.defaults=e,this.interceptors={request:new o,response:new o}}f.prototype.request=function(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},(t=l(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var n=t.transitional;void 0!==n&&s.assertOptions(n,{silentJSONParsing:c.transitional(c.boolean),forcedJSONParsing:c.transitional(c.boolean),clarifyTimeoutError:c.transitional(c.boolean)},!1);var r=[],a=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(a=a&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var o,u=[];if(this.interceptors.response.forEach((function(e){u.push(e.fulfilled,e.rejected)})),!a){var f=[i,void 0];for(Array.prototype.unshift.apply(f,r),f=f.concat(u),o=Promise.resolve(t);f.length;)o=o.then(f.shift(),f.shift());return o}for(var d=t;r.length;){var p=r.shift(),h=r.shift();try{d=p(d)}catch(e){h(e);break}}try{o=i(d)}catch(e){return Promise.reject(e)}for(;u.length;)o=o.then(u.shift(),u.shift());return o},f.prototype.getUri=function(e){e=l(this.defaults,e);var t=u(e.baseURL,e.url);return a(t,e.params,e.paramsSerializer)},r.forEach(["delete","get","head","options"],(function(e){f.prototype[e]=function(t,n){return this.request(l(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){function t(t){return function(n,r,a){return this.request(l(a||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:r}))}}f.prototype[e]=t(),f.prototype[e+"Form"]=t(!0)})),e.exports=f},3145:(e,t,n)=>{"use strict";var r=n(4243);function a(e,t,n,r,a){Error.call(this),this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),r&&(this.request=r),a&&(this.response=a)}r.inherits(a,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}}});var o=a.prototype,i={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED"].forEach((function(e){i[e]={value:e}})),Object.defineProperties(a,i),Object.defineProperty(o,"isAxiosError",{value:!0}),a.from=function(e,t,n,i,l,u){var s=Object.create(o);return r.toFlatObject(e,s,(function(e){return e!==Error.prototype})),a.call(s,e.message,t,n,i,l),s.name=e.name,u&&Object.assign(s,u),s},e.exports=a},3919:(e,t,n)=>{"use strict";var r=n(4243);function a(){this.handlers=[]}a.prototype.use=function(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1},a.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},a.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=a},9627:(e,t,n)=>{"use strict";var r=n(6991),a=n(2293);e.exports=function(e,t){return e&&!r(t)?a(e,t):t}},9547:(e,t,n)=>{"use strict";var r=n(4243),a=n(2653),o=n(4429),i=n(6687),l=n(9041);function u(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new l}e.exports=function(e){return u(e),e.headers=e.headers||{},e.data=a.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||i.adapter)(e).then((function(t){return u(e),t.data=a.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return o(t)||(u(e),t&&t.response&&(t.response.data=a.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},719:(e,t,n)=>{"use strict";var r=n(4243);e.exports=function(e,t){t=t||{};var n={};function a(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function o(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:a(void 0,e[n]):a(e[n],t[n])}function i(e){if(!r.isUndefined(t[e]))return a(void 0,t[e])}function l(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:a(void 0,e[n]):a(void 0,t[n])}function u(n){return n in t?a(e[n],t[n]):n in e?a(void 0,e[n]):void 0}var s={url:i,method:i,data:i,baseURL:l,transformRequest:l,transformResponse:l,paramsSerializer:l,timeout:l,timeoutMessage:l,withCredentials:l,adapter:l,responseType:l,xsrfCookieName:l,xsrfHeaderName:l,onUploadProgress:l,onDownloadProgress:l,decompress:l,maxContentLength:l,maxBodyLength:l,beforeRedirect:l,transport:l,httpAgent:l,httpsAgent:l,cancelToken:l,socketPath:l,responseEncoding:l,validateStatus:u};return r.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=s[e]||o,a=t(e);r.isUndefined(a)&&t!==u||(n[e]=a)})),n}},3402:(e,t,n)=>{"use strict";var r=n(3145);e.exports=function(e,t,n){var a=n.config.validateStatus;n.status&&a&&!a(n.status)?t(new r("Request failed with status code "+n.status,[r.ERR_BAD_REQUEST,r.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}},2653:(e,t,n)=>{"use strict";var r=n(4243),a=n(6687);e.exports=function(e,t,n){var o=this||a;return r.forEach(n,(function(n){e=n.call(o,e,t)})),e}},6687:(e,t,n)=>{"use strict";var r=n(4243),a=n(2586),o=n(3145),i=n(7641),l=n(1261),u={"Content-Type":"application/x-www-form-urlencoded"};function s(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var c,f={transitional:i,adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=n(3819)),c),transformRequest:[function(e,t){if(a(t,"Accept"),a(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e))return e;if(r.isArrayBufferView(e))return e.buffer;if(r.isURLSearchParams(e))return s(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString();var n,o=r.isObject(e),i=t&&t["Content-Type"];if((n=r.isFileList(e))||o&&"multipart/form-data"===i){var u=this.env&&this.env.FormData;return l(n?{"files[]":e}:e,u&&new u)}return o||"application/json"===i?(s(t,"application/json"),function(e,t,n){if(r.isString(e))try{return(0,JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||f.transitional,n=t&&t.silentJSONParsing,a=t&&t.forcedJSONParsing,i=!n&&"json"===this.responseType;if(i||a&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(i){if("SyntaxError"===e.name)throw o.from(e,o.ERR_BAD_RESPONSE,this,null,this.response);throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:n(8715)},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){f.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){f.headers[e]=r.merge(u)})),e.exports=f},7641:e=>{"use strict";e.exports={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1}},4482:e=>{e.exports={version:"0.27.2"}},7342:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},9774:(e,t,n)=>{"use strict";var r=n(4243);function a(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var o;if(n)o=n(t);else if(r.isURLSearchParams(t))o=t.toString();else{var i=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),i.push(a(t)+"="+a(e))})))})),o=i.join("&")}if(o){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+o}return e}},2293:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},8998:(e,t,n)=>{"use strict";var r=n(4243);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,a,o,i){var l=[];l.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&l.push("expires="+new Date(n).toGMTString()),r.isString(a)&&l.push("path="+a),r.isString(o)&&l.push("domain="+o),!0===i&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},6991:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}},4256:(e,t,n)=>{"use strict";var r=n(4243);e.exports=function(e){return r.isObject(e)&&!0===e.isAxiosError}},5548:(e,t,n)=>{"use strict";var r=n(4243);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function a(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=a(window.location.href),function(t){var n=r.isString(t)?a(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},2586:(e,t,n)=>{"use strict";var r=n(4243);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},8715:e=>{e.exports=null},1842:(e,t,n)=>{"use strict";var r=n(4243),a=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,o,i={};return e?(r.forEach(e.split("\n"),(function(e){if(o=e.indexOf(":"),t=r.trim(e.substr(0,o)).toLowerCase(),n=r.trim(e.substr(o+1)),t){if(i[t]&&a.indexOf(t)>=0)return;i[t]="set-cookie"===t?(i[t]?i[t]:[]).concat([n]):i[t]?i[t]+", "+n:n}})),i):i}},3059:e=>{"use strict";e.exports=function(e){var t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}},2497:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},1261:(e,t,n)=>{"use strict";var r=n(7537),a=n(4243);e.exports=function(e,t){t=t||new FormData;var n=[];function o(e){return null===e?"":a.isDate(e)?e.toISOString():a.isArrayBuffer(e)||a.isTypedArray(e)?"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}return function e(i,l){if(a.isPlainObject(i)||a.isArray(i)){if(-1!==n.indexOf(i))throw Error("Circular reference detected in "+l);n.push(i),a.forEach(i,(function(n,i){if(!a.isUndefined(n)){var u,s=l?l+"."+i:i;if(n&&!l&&"object"===r(n))if(a.endsWith(i,"{}"))n=JSON.stringify(n);else if(a.endsWith(i,"[]")&&(u=a.toArray(n)))return void u.forEach((function(e){!a.isUndefined(e)&&t.append(s,o(e))}));e(n,s)}})),n.pop()}else t.append(l,o(i))}(e),t}},7518:(e,t,n)=>{"use strict";var r=n(7537),a=n(4482).version,o=n(3145),i={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){i[e]=function(n){return r(n)===e||"a"+(t<1?"n ":" ")+e}}));var l={};i.transitional=function(e,t,n){function r(e,t){return"[Axios v"+a+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(n,a,i){if(!1===e)throw new o(r(a," has been removed"+(t?" in "+t:"")),o.ERR_DEPRECATED);return t&&!l[a]&&(l[a]=!0,console.warn(r(a," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,a,i)}},e.exports={assertOptions:function(e,t,n){if("object"!==r(e))throw new o("options must be an object",o.ERR_BAD_OPTION_VALUE);for(var a=Object.keys(e),i=a.length;i-- >0;){var l=a[i],u=t[l];if(u){var s=e[l],c=void 0===s||u(s,l,e);if(!0!==c)throw new o("option "+l+" must be "+c,o.ERR_BAD_OPTION_VALUE)}else if(!0!==n)throw new o("Unknown option "+l,o.ERR_BAD_OPTION)}},validators:i}},4243:(e,t,n)=>{"use strict";var r,a=n(7537),o=n(7342),i=Object.prototype.toString,l=(r=Object.create(null),function(e){var t=i.call(e);return r[t]||(r[t]=t.slice(8,-1).toLowerCase())});function u(e){return e=e.toLowerCase(),function(t){return l(t)===e}}function s(e){return Array.isArray(e)}function c(e){return void 0===e}var f=u("ArrayBuffer");function d(e){return null!==e&&"object"===a(e)}function p(e){if("object"!==l(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}var h=u("Date"),m=u("File"),v=u("Blob"),g=u("FileList");function y(e){return"[object Function]"===i.call(e)}var b=u("URLSearchParams");function w(e,t){if(null!=e)if("object"!==a(e)&&(e=[e]),s(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}var k,E=(k="undefined"!=typeof Uint8Array&&Object.getPrototypeOf(Uint8Array),function(e){return k&&e instanceof k});e.exports={isArray:s,isArrayBuffer:f,isBuffer:function(e){return null!==e&&!c(e)&&null!==e.constructor&&!c(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){var t="[object FormData]";return e&&("function"==typeof FormData&&e instanceof FormData||i.call(e)===t||y(e.toString)&&e.toString()===t)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&f(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:d,isPlainObject:p,isUndefined:c,isDate:h,isFile:m,isBlob:v,isFunction:y,isStream:function(e){return d(e)&&y(e.pipe)},isURLSearchParams:b,isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:w,merge:function e(){var t={};function n(n,r){p(t[r])&&p(n)?t[r]=e(t[r],n):p(n)?t[r]=e({},n):s(n)?t[r]=n.slice():t[r]=n}for(var r=0,a=arguments.length;r<a;r++)w(arguments[r],n);return t},extend:function(e,t,n){return w(t,(function(t,r){e[r]=n&&"function"==typeof t?o(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e},inherits:function(e,t,n,r){e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,n&&Object.assign(e.prototype,n)},toFlatObject:function(e,t,n){var r,a,o,i={};t=t||{};do{for(a=(r=Object.getOwnPropertyNames(e)).length;a-- >0;)i[o=r[a]]||(t[o]=e[o],i[o]=!0);e=Object.getPrototypeOf(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},kindOf:l,kindOfTest:u,endsWith:function(e,t,n){e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;var r=e.indexOf(t,n);return-1!==r&&r===n},toArray:function(e){if(!e)return null;var t=e.length;if(c(t))return null;for(var n=new Array(t);t-- >0;)n[t]=e[t];return n},isTypedArray:E,isFileList:g}},9569:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.Doctype=t.CDATA=t.Tag=t.Style=t.Script=t.Comment=t.Directive=t.Text=t.Root=t.isTag=t.ElementType=void 0,function(e){e.Root="root",e.Text="text",e.Directive="directive",e.Comment="comment",e.Script="script",e.Style="style",e.Tag="tag",e.CDATA="cdata",e.Doctype="doctype"}(n=t.ElementType||(t.ElementType={})),t.isTag=function(e){return e.type===n.Tag||e.type===n.Script||e.type===n.Style},t.Root=n.Root,t.Text=n.Text,t.Directive=n.Directive,t.Comment=n.Comment,t.Script=n.Script,t.Style=n.Style,t.Tag=n.Tag,t.CDATA=n.CDATA,t.Doctype=n.Doctype},7115:(e,t)=>{t.CASE_SENSITIVE_TAG_NAMES=["animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussainBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","linearGradient","radialGradient","textPath"]},9395:(e,t,n)=>{var r=n(7537),a="html",o="head",i="body",l=/<([a-zA-Z]+[0-9]?)/,u=/<head[^]*>/i,s=/<body[^]*>/i,c=function(){throw new Error("This browser does not support `document.implementation.createHTMLDocument`")},f=function(){throw new Error("This browser does not support `DOMParser.prototype.parseFromString`")},d="object"===("undefined"==typeof window?"undefined":r(window))&&window.DOMParser;if("function"==typeof d){var p=new d;c=f=function(e,t){return t&&(e="<"+t+">"+e+"</"+t+">"),p.parseFromString(e,"text/html")}}if("object"===("undefined"==typeof document?"undefined":r(document))&&document.implementation){var h=document.implementation.createHTMLDocument();c=function(e,t){return t?(h.documentElement.querySelector(t).innerHTML=e,h):(h.documentElement.innerHTML=e,h)}}var m,v="object"===("undefined"==typeof document?"undefined":r(document))?document.createElement("template"):{};v.content&&(m=function(e){return v.innerHTML=e,v.content.childNodes}),e.exports=function(e){var t,n,r,d,p=e.match(l);switch(p&&p[1]&&(t=p[1].toLowerCase()),t){case a:return n=f(e),u.test(e)||(r=n.querySelector(o))&&r.parentNode.removeChild(r),s.test(e)||(r=n.querySelector(i))&&r.parentNode.removeChild(r),n.querySelectorAll(a);case o:case i:return d=(n=c(e)).querySelectorAll(t),s.test(e)&&u.test(e)?d[0].parentNode.childNodes:d;default:return m?m(e):(r=c(e,i).querySelector(i)).childNodes}}},9537:(e,t,n)=>{var r=n(9395),a=n(7611).formatDOM,o=/<(![a-zA-Z\s]+)>/;e.exports=function(e){if("string"!=typeof e)throw new TypeError("First argument must be a string");if(""===e)return[];var t,n=e.match(o);return n&&n[1]&&(t=n[1]),a(r(e),null,t)}},7611:(e,t,n)=>{for(var r,a=n(2098),o=n(7115).CASE_SENSITIVE_TAG_NAMES,i=a.Comment,l=a.Element,u=a.ProcessingInstruction,s=a.Text,c={},f=0,d=o.length;f<d;f++)r=o[f],c[r.toLowerCase()]=r;function p(e){for(var t,n={},r=0,a=e.length;r<a;r++)n[(t=e[r]).name]=t.value;return n}function h(e){return function(e){return c[e]}(e=e.toLowerCase())||e}t.formatAttributes=p,t.formatDOM=function e(t,n,r){n=n||null;for(var a=[],o=0,c=t.length;o<c;o++){var f,d=t[o];switch(d.nodeType){case 1:(f=new l(h(d.nodeName),p(d.attributes))).children=e(d.content?d.content.childNodes:d.childNodes,f);break;case 3:f=new s(d.nodeValue);break;case 8:f=new i(d.nodeValue);break;default:continue}var m=a[o-1]||null;m&&(m.next=f),f.parent=n,f.prev=m,f.next=null,a.push(f)}return r&&((f=new u(r.substring(0,r.indexOf(" ")).toLowerCase(),r)).next=a[0]||null,f.parent=n,a.unshift(f),a[1]&&(a[1].prev=a[0])),a}},2098:function(e,t,n){"use strict";var r=n(7537),a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.DomHandler=void 0;var i=n(9569),l=n(3973);o(n(3973),t);var u={withStartIndices:!1,withEndIndices:!1,xmlMode:!1},s=function(){function e(e,t,n){this.dom=[],this.root=new l.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null,"function"==typeof t&&(n=t,t=u),"object"===r(e)&&(t=e,e=void 0),this.callback=null!=e?e:null,this.options=null!=t?t:u,this.elementCB=null!=n?n:null}return e.prototype.onparserinit=function(e){this.parser=e},e.prototype.onreset=function(){this.dom=[],this.root=new l.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null},e.prototype.onend=function(){this.done||(this.done=!0,this.parser=null,this.handleCallback(null))},e.prototype.onerror=function(e){this.handleCallback(e)},e.prototype.onclosetag=function(){this.lastNode=null;var e=this.tagStack.pop();this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),this.elementCB&&this.elementCB(e)},e.prototype.onopentag=function(e,t){var n=this.options.xmlMode?i.ElementType.Tag:void 0,r=new l.Element(e,t,void 0,n);this.addNode(r),this.tagStack.push(r)},e.prototype.ontext=function(e){var t=this.lastNode;if(t&&t.type===i.ElementType.Text)t.data+=e,this.options.withEndIndices&&(t.endIndex=this.parser.endIndex);else{var n=new l.Text(e);this.addNode(n),this.lastNode=n}},e.prototype.oncomment=function(e){if(this.lastNode&&this.lastNode.type===i.ElementType.Comment)this.lastNode.data+=e;else{var t=new l.Comment(e);this.addNode(t),this.lastNode=t}},e.prototype.oncommentend=function(){this.lastNode=null},e.prototype.oncdatastart=function(){var e=new l.Text(""),t=new l.CDATA([e]);this.addNode(t),e.parent=t,this.lastNode=e},e.prototype.oncdataend=function(){this.lastNode=null},e.prototype.onprocessinginstruction=function(e,t){var n=new l.ProcessingInstruction(e,t);this.addNode(n)},e.prototype.handleCallback=function(e){if("function"==typeof this.callback)this.callback(e,this.dom);else if(e)throw e},e.prototype.addNode=function(e){var t=this.tagStack[this.tagStack.length-1],n=t.children[t.children.length-1];this.options.withStartIndices&&(e.startIndex=this.parser.startIndex),this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),t.children.push(e),n&&(e.prev=n,n.next=e),e.parent=t,this.lastNode=null},e}();t.DomHandler=s,t.default=s},3973:function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),o=this&&this.__assign||function(){return o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},o.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.cloneNode=t.hasChildren=t.isDocument=t.isDirective=t.isComment=t.isText=t.isCDATA=t.isTag=t.Element=t.Document=t.CDATA=t.NodeWithChildren=t.ProcessingInstruction=t.Comment=t.Text=t.DataNode=t.Node=void 0;var i=n(9569),l=function(){function e(){this.parent=null,this.prev=null,this.next=null,this.startIndex=null,this.endIndex=null}return Object.defineProperty(e.prototype,"parentNode",{get:function(){return this.parent},set:function(e){this.parent=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"previousSibling",{get:function(){return this.prev},set:function(e){this.prev=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"nextSibling",{get:function(){return this.next},set:function(e){this.next=e},enumerable:!1,configurable:!0}),e.prototype.cloneNode=function(e){return void 0===e&&(e=!1),E(this,e)},e}();t.Node=l;var u=function(e){function t(t){var n=e.call(this)||this;return n.data=t,n}return a(t,e),Object.defineProperty(t.prototype,"nodeValue",{get:function(){return this.data},set:function(e){this.data=e},enumerable:!1,configurable:!0}),t}(l);t.DataNode=u;var s=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.Text,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 3},enumerable:!1,configurable:!0}),t}(u);t.Text=s;var c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.Comment,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 8},enumerable:!1,configurable:!0}),t}(u);t.Comment=c;var f=function(e){function t(t,n){var r=e.call(this,n)||this;return r.name=t,r.type=i.ElementType.Directive,r}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),t}(u);t.ProcessingInstruction=f;var d=function(e){function t(t){var n=e.call(this)||this;return n.children=t,n}return a(t,e),Object.defineProperty(t.prototype,"firstChild",{get:function(){var e;return null!==(e=this.children[0])&&void 0!==e?e:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"childNodes",{get:function(){return this.children},set:function(e){this.children=e},enumerable:!1,configurable:!0}),t}(l);t.NodeWithChildren=d;var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.CDATA,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 4},enumerable:!1,configurable:!0}),t}(d);t.CDATA=p;var h=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.Root,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 9},enumerable:!1,configurable:!0}),t}(d);t.Document=h;var m=function(e){function t(t,n,r,a){void 0===r&&(r=[]),void 0===a&&(a="script"===t?i.ElementType.Script:"style"===t?i.ElementType.Style:i.ElementType.Tag);var o=e.call(this,r)||this;return o.name=t,o.attribs=n,o.type=a,o}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"tagName",{get:function(){return this.name},set:function(e){this.name=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"attributes",{get:function(){var e=this;return Object.keys(this.attribs).map((function(t){var n,r;return{name:t,value:e.attribs[t],namespace:null===(n=e["x-attribsNamespace"])||void 0===n?void 0:n[t],prefix:null===(r=e["x-attribsPrefix"])||void 0===r?void 0:r[t]}}))},enumerable:!1,configurable:!0}),t}(d);function v(e){return(0,i.isTag)(e)}function g(e){return e.type===i.ElementType.CDATA}function y(e){return e.type===i.ElementType.Text}function b(e){return e.type===i.ElementType.Comment}function w(e){return e.type===i.ElementType.Directive}function k(e){return e.type===i.ElementType.Root}function E(e,t){var n;if(void 0===t&&(t=!1),y(e))n=new s(e.data);else if(b(e))n=new c(e.data);else if(v(e)){var r=t?x(e.children):[],a=new m(e.name,o({},e.attribs),r);r.forEach((function(e){return e.parent=a})),null!=e.namespace&&(a.namespace=e.namespace),e["x-attribsNamespace"]&&(a["x-attribsNamespace"]=o({},e["x-attribsNamespace"])),e["x-attribsPrefix"]&&(a["x-attribsPrefix"]=o({},e["x-attribsPrefix"])),n=a}else if(g(e)){r=t?x(e.children):[];var i=new p(r);r.forEach((function(e){return e.parent=i})),n=i}else if(k(e)){r=t?x(e.children):[];var l=new h(r);r.forEach((function(e){return e.parent=l})),e["x-mode"]&&(l["x-mode"]=e["x-mode"]),n=l}else{if(!w(e))throw new Error("Not implemented yet: ".concat(e.type));var u=new f(e.name,e.data);null!=e["x-name"]&&(u["x-name"]=e["x-name"],u["x-publicId"]=e["x-publicId"],u["x-systemId"]=e["x-systemId"]),n=u}return n.startIndex=e.startIndex,n.endIndex=e.endIndex,null!=e.sourceCodeLocation&&(n.sourceCodeLocation=e.sourceCodeLocation),n}function x(e){for(var t=e.map((function(e){return E(e,!0)})),n=1;n<t.length;n++)t[n].prev=t[n-1],t[n-1].next=t[n];return t}t.Element=m,t.isTag=v,t.isCDATA=g,t.isText=y,t.isComment=b,t.isDirective=w,t.isDocument=k,t.hasChildren=function(e){return Object.prototype.hasOwnProperty.call(e,"children")},t.cloneNode=E},1653:(e,t,n)=>{var r=n(5671),a=n(9537),o=n(3278),i=n(8927);a="function"==typeof a.default?a.default:a;var l={lowerCaseAttributeNames:!1};function u(e,t){if("string"!=typeof e)throw new TypeError("First argument must be a string");return""===e?[]:i(a(e,(t=t||{}).htmlparser2||l),t)}u.domToReact=i,u.htmlToDOM=a,u.attributesToProps=o,u.Comment=r.Comment,u.Element=r.Element,u.ProcessingInstruction=r.ProcessingInstruction,u.Text=r.Text,e.exports=u,u.default=u},3278:(e,t,n)=>{var r=n(1897),a=n(2934),o=["checked","value"],i=["input","select","textarea"],l={reset:!0,submit:!0};function u(e){return r.possibleStandardNames[e]}e.exports=function(e,t){var n,s,c,f,d,p={},h=(e=e||{}).type&&l[e.type];for(n in e)if(c=e[n],r.isCustomAttribute(n))p[n]=c;else if(f=u(s=n.toLowerCase()))switch(d=r.getPropertyInfo(f),-1===o.indexOf(f)||-1===i.indexOf(t)||h||(f=u("default"+s)),p[f]=c,d&&d.type){case r.BOOLEAN:p[f]=!0;break;case r.OVERLOADED_BOOLEAN:""===c&&(p[f]=!0)}else a.PRESERVE_CUSTOM_ATTRIBUTES&&(p[n]=c);return a.setStyleProp(e.style,p),p}},8927:(e,t,n)=>{var r=n(3745),a=n(3278),o=n(2934),i=o.setStyleProp,l=o.canTextBeChildOfNode;function u(e){return o.PRESERVE_CUSTOM_ATTRIBUTES&&"tag"===e.type&&o.isCustomComponent(e.name,e.attribs)}e.exports=function e(t,n){for(var o,s,c,f,d,p=(n=n||{}).library||r,h=p.cloneElement,m=p.createElement,v=p.isValidElement,g=[],y="function"==typeof n.replace,b=n.trim,w=0,k=t.length;w<k;w++)if(o=t[w],y&&v(c=n.replace(o)))k>1&&(c=h(c,{key:c.key||w})),g.push(c);else if("text"!==o.type){switch(f=o.attribs,u(o)?i(f.style,f):f&&(f=a(f,o.name)),d=null,o.type){case"script":case"style":o.children[0]&&(f.dangerouslySetInnerHTML={__html:o.children[0].data});break;case"tag":"textarea"===o.name&&o.children[0]?f.defaultValue=o.children[0].data:o.children&&o.children.length&&(d=e(o.children,n));break;default:continue}k>1&&(f.key=w),g.push(m(o.name,f,d))}else{if((s=!o.data.trim().length)&&o.parent&&!l(o.parent))continue;if(b&&s)continue;g.push(o.data)}return 1===g.length?g[0]:g}},2934:(e,t,n)=>{var r=n(7537),a=n(3745),o=n(6575).default,i={reactCompat:!0},l=a.version.split(".")[0]>=16,u=new Set(["tr","tbody","thead","tfoot","colgroup","table","head","html","frameset"]);e.exports={PRESERVE_CUSTOM_ATTRIBUTES:l,invertObject:function(e,t){if(!e||"object"!==r(e))throw new TypeError("First argument must be an object");var n,a,o="function"==typeof t,i={},l={};for(n in e)a=e[n],o&&(i=t(n,a))&&2===i.length?l[i[0]]=i[1]:"string"==typeof a&&(l[a]=n);return l},isCustomComponent:function(e,t){if(-1===e.indexOf("-"))return t&&"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}},setStyleProp:function(e,t){if(null!=e)try{t.style=o(e,i)}catch(e){t.style={}}},canTextBeChildOfNode:function(e){return!u.has(e.name)},elementsWithNoTextChildren:u}},5671:function(e,t,n){"use strict";var r=n(7537),a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!("get"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.DomHandler=void 0;var i=n(9569),l=n(6922);o(n(6922),t);var u={withStartIndices:!1,withEndIndices:!1,xmlMode:!1},s=function(){function e(e,t,n){this.dom=[],this.root=new l.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null,"function"==typeof t&&(n=t,t=u),"object"===r(e)&&(t=e,e=void 0),this.callback=null!=e?e:null,this.options=null!=t?t:u,this.elementCB=null!=n?n:null}return e.prototype.onparserinit=function(e){this.parser=e},e.prototype.onreset=function(){this.dom=[],this.root=new l.Document(this.dom),this.done=!1,this.tagStack=[this.root],this.lastNode=null,this.parser=null},e.prototype.onend=function(){this.done||(this.done=!0,this.parser=null,this.handleCallback(null))},e.prototype.onerror=function(e){this.handleCallback(e)},e.prototype.onclosetag=function(){this.lastNode=null;var e=this.tagStack.pop();this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),this.elementCB&&this.elementCB(e)},e.prototype.onopentag=function(e,t){var n=this.options.xmlMode?i.ElementType.Tag:void 0,r=new l.Element(e,t,void 0,n);this.addNode(r),this.tagStack.push(r)},e.prototype.ontext=function(e){var t=this.lastNode;if(t&&t.type===i.ElementType.Text)t.data+=e,this.options.withEndIndices&&(t.endIndex=this.parser.endIndex);else{var n=new l.Text(e);this.addNode(n),this.lastNode=n}},e.prototype.oncomment=function(e){if(this.lastNode&&this.lastNode.type===i.ElementType.Comment)this.lastNode.data+=e;else{var t=new l.Comment(e);this.addNode(t),this.lastNode=t}},e.prototype.oncommentend=function(){this.lastNode=null},e.prototype.oncdatastart=function(){var e=new l.Text(""),t=new l.CDATA([e]);this.addNode(t),e.parent=t,this.lastNode=e},e.prototype.oncdataend=function(){this.lastNode=null},e.prototype.onprocessinginstruction=function(e,t){var n=new l.ProcessingInstruction(e,t);this.addNode(n)},e.prototype.handleCallback=function(e){if("function"==typeof this.callback)this.callback(e,this.dom);else if(e)throw e},e.prototype.addNode=function(e){var t=this.tagStack[this.tagStack.length-1],n=t.children[t.children.length-1];this.options.withStartIndices&&(e.startIndex=this.parser.startIndex),this.options.withEndIndices&&(e.endIndex=this.parser.endIndex),t.children.push(e),n&&(e.prev=n,n.next=e),e.parent=t,this.lastNode=null},e}();t.DomHandler=s,t.default=s},6922:function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},r(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),o=this&&this.__assign||function(){return o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},o.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.cloneNode=t.hasChildren=t.isDocument=t.isDirective=t.isComment=t.isText=t.isCDATA=t.isTag=t.Element=t.Document=t.CDATA=t.NodeWithChildren=t.ProcessingInstruction=t.Comment=t.Text=t.DataNode=t.Node=void 0;var i=n(9569),l=function(){function e(){this.parent=null,this.prev=null,this.next=null,this.startIndex=null,this.endIndex=null}return Object.defineProperty(e.prototype,"parentNode",{get:function(){return this.parent},set:function(e){this.parent=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"previousSibling",{get:function(){return this.prev},set:function(e){this.prev=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"nextSibling",{get:function(){return this.next},set:function(e){this.next=e},enumerable:!1,configurable:!0}),e.prototype.cloneNode=function(e){return void 0===e&&(e=!1),E(this,e)},e}();t.Node=l;var u=function(e){function t(t){var n=e.call(this)||this;return n.data=t,n}return a(t,e),Object.defineProperty(t.prototype,"nodeValue",{get:function(){return this.data},set:function(e){this.data=e},enumerable:!1,configurable:!0}),t}(l);t.DataNode=u;var s=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.Text,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 3},enumerable:!1,configurable:!0}),t}(u);t.Text=s;var c=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.Comment,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 8},enumerable:!1,configurable:!0}),t}(u);t.Comment=c;var f=function(e){function t(t,n){var r=e.call(this,n)||this;return r.name=t,r.type=i.ElementType.Directive,r}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),t}(u);t.ProcessingInstruction=f;var d=function(e){function t(t){var n=e.call(this)||this;return n.children=t,n}return a(t,e),Object.defineProperty(t.prototype,"firstChild",{get:function(){var e;return null!==(e=this.children[0])&&void 0!==e?e:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"childNodes",{get:function(){return this.children},set:function(e){this.children=e},enumerable:!1,configurable:!0}),t}(l);t.NodeWithChildren=d;var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.CDATA,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 4},enumerable:!1,configurable:!0}),t}(d);t.CDATA=p;var h=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.type=i.ElementType.Root,t}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 9},enumerable:!1,configurable:!0}),t}(d);t.Document=h;var m=function(e){function t(t,n,r,a){void 0===r&&(r=[]),void 0===a&&(a="script"===t?i.ElementType.Script:"style"===t?i.ElementType.Style:i.ElementType.Tag);var o=e.call(this,r)||this;return o.name=t,o.attribs=n,o.type=a,o}return a(t,e),Object.defineProperty(t.prototype,"nodeType",{get:function(){return 1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"tagName",{get:function(){return this.name},set:function(e){this.name=e},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"attributes",{get:function(){var e=this;return Object.keys(this.attribs).map((function(t){var n,r;return{name:t,value:e.attribs[t],namespace:null===(n=e["x-attribsNamespace"])||void 0===n?void 0:n[t],prefix:null===(r=e["x-attribsPrefix"])||void 0===r?void 0:r[t]}}))},enumerable:!1,configurable:!0}),t}(d);function v(e){return(0,i.isTag)(e)}function g(e){return e.type===i.ElementType.CDATA}function y(e){return e.type===i.ElementType.Text}function b(e){return e.type===i.ElementType.Comment}function w(e){return e.type===i.ElementType.Directive}function k(e){return e.type===i.ElementType.Root}function E(e,t){var n;if(void 0===t&&(t=!1),y(e))n=new s(e.data);else if(b(e))n=new c(e.data);else if(v(e)){var r=t?x(e.children):[],a=new m(e.name,o({},e.attribs),r);r.forEach((function(e){return e.parent=a})),null!=e.namespace&&(a.namespace=e.namespace),e["x-attribsNamespace"]&&(a["x-attribsNamespace"]=o({},e["x-attribsNamespace"])),e["x-attribsPrefix"]&&(a["x-attribsPrefix"]=o({},e["x-attribsPrefix"])),n=a}else if(g(e)){r=t?x(e.children):[];var i=new p(r);r.forEach((function(e){return e.parent=i})),n=i}else if(k(e)){r=t?x(e.children):[];var l=new h(r);r.forEach((function(e){return e.parent=l})),e["x-mode"]&&(l["x-mode"]=e["x-mode"]),n=l}else{if(!w(e))throw new Error("Not implemented yet: ".concat(e.type));var u=new f(e.name,e.data);null!=e["x-name"]&&(u["x-name"]=e["x-name"],u["x-publicId"]=e["x-publicId"],u["x-systemId"]=e["x-systemId"]),n=u}return n.startIndex=e.startIndex,n.endIndex=e.endIndex,null!=e.sourceCodeLocation&&(n.sourceCodeLocation=e.sourceCodeLocation),n}function x(e){for(var t=e.map((function(e){return E(e,!0)})),n=1;n<t.length;n++)t[n].prev=t[n-1],t[n-1].next=t[n];return t}t.Element=m,t.isTag=v,t.isCDATA=g,t.isText=y,t.isComment=b,t.isDirective=w,t.isDocument=k,t.hasChildren=function(e){return Object.prototype.hasOwnProperty.call(e,"children")},t.cloneNode=E},9624:e=>{var t=/\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,n=/\n/g,r=/^\s*/,a=/^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,o=/^:\s*/,i=/^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,l=/^[;\s]*/,u=/^\s+|\s+$/g,s="";function c(e){return e?e.replace(u,s):s}e.exports=function(e,u){if("string"!=typeof e)throw new TypeError("First argument must be a string");if(!e)return[];u=u||{};var f=1,d=1;function p(e){var t=e.match(n);t&&(f+=t.length);var r=e.lastIndexOf("\n");d=~r?e.length-r:d+e.length}function h(){var e={line:f,column:d};return function(t){return t.position=new m(e),b(),t}}function m(e){this.start=e,this.end={line:f,column:d},this.source=u.source}m.prototype.content=e;var v=[];function g(t){var n=new Error(u.source+":"+f+":"+d+": "+t);if(n.reason=t,n.filename=u.source,n.line=f,n.column=d,n.source=e,!u.silent)throw n;v.push(n)}function y(t){var n=t.exec(e);if(n){var r=n[0];return p(r),e=e.slice(r.length),n}}function b(){y(r)}function w(e){var t;for(e=e||[];t=k();)!1!==t&&e.push(t);return e}function k(){var t=h();if("/"==e.charAt(0)&&"*"==e.charAt(1)){for(var n=2;s!=e.charAt(n)&&("*"!=e.charAt(n)||"/"!=e.charAt(n+1));)++n;if(n+=2,s===e.charAt(n-1))return g("End of comment missing");var r=e.slice(2,n-2);return d+=2,p(r),e=e.slice(n),d+=2,t({type:"comment",comment:r})}}function E(){var e=h(),n=y(a);if(n){if(k(),!y(o))return g("property missing ':'");var r=y(i),u=e({type:"declaration",property:c(n[0].replace(t,s)),value:r?c(r[0].replace(t,s)):s});return y(l),u}}return b(),function(){var e,t=[];for(w(t);e=E();)!1!==e&&(t.push(e),w(t));return t}()}},1730:(e,t,n)=>{"use strict";var r=n(7537),a=n(3745),o=n(9409);function i(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},m={};function v(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,a){var o=g.hasOwnProperty(t)?g[t]:null;(null!==o?0!==o.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null==t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(r(t)){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,a)&&(n=null),a||null===o?function(e){return!!d.call(m,e)||!d.call(h,e)&&(p.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,a=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=Symbol.for("react.element"),x=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),P=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),T=Symbol.for("react.context"),N=Symbol.for("react.forward_ref"),O=Symbol.for("react.suspense"),A=Symbol.for("react.suspense_list"),D=Symbol.for("react.memo"),L=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var R=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var I=Symbol.iterator;function z(e){return null===e||"object"!==r(e)?null:"function"==typeof(e=I&&e[I]||e["@@iterator"])?e:null}var M,F=Object.assign;function j(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var U=!1;function B(e,t){if(!e||U)return"";U=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===("undefined"==typeof Reflect?"undefined":r(Reflect))&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var a=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){a=e}e.call(t.prototype)}else{try{throw Error()}catch(e){a=e}e()}}catch(t){if(t&&a&&"string"==typeof t.stack){for(var o=t.stack.split("\n"),i=a.stack.split("\n"),l=o.length-1,u=i.length-1;1<=l&&0<=u&&o[l]!==i[u];)u--;for(;1<=l&&0<=u;l--,u--)if(o[l]!==i[u]){if(1!==l||1!==u)do{if(l--,0>--u||o[l]!==i[u]){var s="\n"+o[l].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=l&&0<=u);break}}}finally{U=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?j(e):""}function V(e){switch(e.tag){case 5:return j(e.type);case 16:return j("Lazy");case 13:return j("Suspense");case 19:return j("SuspenseList");case 0:case 2:case 15:return B(e.type,!1);case 11:return B(e.type.render,!1);case 1:return B(e.type,!0);default:return""}}function W(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case x:return"Portal";case P:return"Profiler";case C:return"StrictMode";case O:return"Suspense";case A:return"SuspenseList"}if("object"===r(e))switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case D:return null!==(t=e.displayName||null)?t:W(e.type)||"Memo";case L:t=e._payload,e=e._init;try{return W(e(t))}catch(e){}}return null}function H(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return W(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function $(e){switch(r(e)){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function q(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=q(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function K(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=q(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return F({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=$(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function J(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function Z(e,t){J(e,t);var n=$(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?te(e,t.type,n):t.hasOwnProperty("defaultValue")&&te(e,t.type,$(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function ee(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function te(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var ne=Array.isArray;function re(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+$(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(i(91));return F({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function oe(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(i(92));if(ne(n)){if(1<n.length)throw Error(i(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:$(n)}}function ie(e,t){var n=$(t.value),r=$(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function le(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ue(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ue(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,fe,de=(fe=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return fe(e,t)}))}:fe);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var he={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function ve(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||he.hasOwnProperty(e)&&he[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=ve(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(he).forEach((function(e){me.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),he[t]=he[e]}))}));var ye=F({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(i(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(i(60));if("object"!==r(t.dangerouslySetInnerHTML)||!("__html"in t.dangerouslySetInnerHTML))throw Error(i(61))}if(null!=t.style&&"object"!==r(t.style))throw Error(i(62))}}function we(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ke=null;function Ee(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var xe=null,Se=null,Ce=null;function Pe(e){if(e=wa(e)){if("function"!=typeof xe)throw Error(i(280));var t=e.stateNode;t&&(t=Ea(t),xe(e.stateNode,e.type,t))}}function _e(e){Se?Ce?Ce.push(e):Ce=[e]:Se=e}function Te(){if(Se){var e=Se,t=Ce;if(Ce=Se=null,Pe(e),t)for(e=0;e<t.length;e++)Pe(t[e])}}function Ne(e,t){return e(t)}function Oe(){}var Ae=!1;function De(e,t,n){if(Ae)return e(t,n);Ae=!0;try{return Ne(e,t,n)}finally{Ae=!1,(null!==Se||null!==Ce)&&(Oe(),Te())}}function Le(e,t){var n=e.stateNode;if(null===n)return null;var a=Ea(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(i(231,t,r(n)));return n}var Re=!1;if(f)try{var Ie={};Object.defineProperty(Ie,"passive",{get:function(){Re=!0}}),window.addEventListener("test",Ie,Ie),window.removeEventListener("test",Ie,Ie)}catch(fe){Re=!1}function ze(e,t,n,r,a,o,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Me=!1,Fe=null,je=!1,Ue=null,Be={onError:function(e){Me=!0,Fe=e}};function Ve(e,t,n,r,a,o,i,l,u){Me=!1,Fe=null,ze.apply(Be,arguments)}function We(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function He(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function $e(e){if(We(e)!==e)throw Error(i(188))}function qe(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=We(e)))throw Error(i(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return $e(a),e;if(o===r)return $e(a),t;o=o.sibling}throw Error(i(188))}if(n.return!==r.return)n=a,r=o;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=o;break}if(u===r){l=!0,r=a,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=a;break}if(u===r){l=!0,r=o,n=a;break}u=u.sibling}if(!l)throw Error(i(189))}}if(n.alternate!==r)throw Error(i(190))}if(3!==n.tag)throw Error(i(188));return n.stateNode.current===n?e:t}(e))?Qe(e):null}function Qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Qe(e);if(null!==t)return t;e=e.sibling}return null}var Ke=o.unstable_scheduleCallback,Ge=o.unstable_cancelCallback,Xe=o.unstable_shouldYield,Ye=o.unstable_requestPaint,Je=o.unstable_now,Ze=o.unstable_getCurrentPriorityLevel,et=o.unstable_ImmediatePriority,tt=o.unstable_UserBlockingPriority,nt=o.unstable_NormalPriority,rt=o.unstable_LowPriority,at=o.unstable_IdlePriority,ot=null,it=null,lt=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(ut(e)/st|0)|0},ut=Math.log,st=Math.LN2,ct=64,ft=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&n;if(0!==i){var l=i&~a;0!==l?r=dt(l):0!=(o&=i)&&(r=dt(o))}else 0!=(i=n&~a)?r=dt(i):0!==o&&(r=dt(o));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(o=t&-t)||16===a&&0!=(4194240&o)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-lt(t)),r|=e[n],t&=~a;return r}function ht(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function mt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function vt(){var e=ct;return 0==(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-lt(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-lt(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var wt=0;function kt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var Et,xt,St,Ct,Pt,_t=!1,Tt=[],Nt=null,Ot=null,At=null,Dt=new Map,Lt=new Map,Rt=[],It="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function zt(e,t){switch(e){case"focusin":case"focusout":Nt=null;break;case"dragenter":case"dragleave":Ot=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":Dt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Lt.delete(t.pointerId)}}function Mt(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==t&&null!==(t=wa(t))&&xt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Ft(e){var t=ba(e.target);if(null!==t){var n=We(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=He(n)))return e.blockedOn=t,void Pt(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function jt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=wa(n))&&xt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);ke=r,n.target.dispatchEvent(r),ke=null,t.shift()}return!0}function Ut(e,t,n){jt(e)&&n.delete(t)}function Bt(){_t=!1,null!==Nt&&jt(Nt)&&(Nt=null),null!==Ot&&jt(Ot)&&(Ot=null),null!==At&&jt(At)&&(At=null),Dt.forEach(Ut),Lt.forEach(Ut)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Bt)))}function Wt(e){function t(t){return Vt(t,e)}if(0<Tt.length){Vt(Tt[0],e);for(var n=1;n<Tt.length;n++){var r=Tt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Nt&&Vt(Nt,e),null!==Ot&&Vt(Ot,e),null!==At&&Vt(At,e),Dt.forEach(t),Lt.forEach(t),n=0;n<Rt.length;n++)(r=Rt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Rt.length&&null===(n=Rt[0]).blockedOn;)Ft(n),null===n.blockedOn&&Rt.shift()}var Ht=k.ReactCurrentBatchConfig,$t=!0;function qt(e,t,n,r){var a=wt,o=Ht.transition;Ht.transition=null;try{wt=1,Kt(e,t,n,r)}finally{wt=a,Ht.transition=o}}function Qt(e,t,n,r){var a=wt,o=Ht.transition;Ht.transition=null;try{wt=4,Kt(e,t,n,r)}finally{wt=a,Ht.transition=o}}function Kt(e,t,n,r){if($t){var a=Xt(e,t,n,r);if(null===a)$r(e,t,r,Gt,n),zt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Nt=Mt(Nt,e,t,n,r,a),!0;case"dragenter":return Ot=Mt(Ot,e,t,n,r,a),!0;case"mouseover":return At=Mt(At,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return Dt.set(o,Mt(Dt.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Lt.set(o,Mt(Lt.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(zt(e,r),4&t&&-1<It.indexOf(e)){for(;null!==a;){var o=wa(a);if(null!==o&&Et(o),null===(o=Xt(e,t,n,r))&&$r(e,t,r,Gt,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else $r(e,t,r,null,n)}}var Gt=null;function Xt(e,t,n,r){if(Gt=null,null!==(e=ba(e=Ee(r))))if(null===(t=We(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=He(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Gt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case et:return 1;case tt:return 4;case nt:case rt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Jt=null,Zt=null,en=null;function tn(){if(en)return en;var e,t,n=Zt,r=n.length,a="value"in Jt?Jt.value:Jt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function on(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return F(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var ln,un,sn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=on(cn),dn=F({},cn,{view:0,detail:0}),pn=on(dn),hn=F({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Pn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(ln=e.screenX-sn.screenX,un=e.screenY-sn.screenY):un=ln=0,sn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),mn=on(hn),vn=on(F({},hn,{dataTransfer:0})),gn=on(F({},dn,{relatedTarget:0})),yn=on(F({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=F({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),wn=on(bn),kn=on(F({},cn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},xn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Pn(){return Cn}var _n=F({},dn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?xn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Pn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=on(_n),Nn=on(F({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=on(F({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Pn})),An=on(F({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Dn=F({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Ln=on(Dn),Rn=[9,13,27,32],In=f&&"CompositionEvent"in window,zn=null;f&&"documentMode"in document&&(zn=document.documentMode);var Mn=f&&"TextEvent"in window&&!zn,Fn=f&&(!In||zn&&8<zn&&11>=zn),jn=String.fromCharCode(32),Un=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return e=e.detail,"object"===r(e)&&"data"in e?e.data:null}var Wn=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function $n(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function qn(e,t,n,r){_e(r),0<(t=Qr(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Qn=null,Kn=null;function Gn(e){jr(e,0)}function Xn(e){if(K(ka(e)))return e}function Yn(e,t){if("change"===e)return t}var Jn=!1;if(f){var Zn;if(f){var er="oninput"in document;if(!er){var tr=document.createElement("div");tr.setAttribute("oninput","return;"),er="function"==typeof tr.oninput}Zn=er}else Zn=!1;Jn=Zn&&(!document.documentMode||9<document.documentMode)}function nr(){Qn&&(Qn.detachEvent("onpropertychange",rr),Kn=Qn=null)}function rr(e){if("value"===e.propertyName&&Xn(Kn)){var t=[];qn(t,Kn,e,Ee(e)),De(Gn,t)}}function ar(e,t,n){"focusin"===e?(nr(),Kn=n,(Qn=t).attachEvent("onpropertychange",rr)):"focusout"===e&&nr()}function or(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(Kn)}function ir(e,t){if("click"===e)return Xn(t)}function lr(e,t){if("input"===e||"change"===e)return Xn(t)}var ur="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function sr(e,t){if(ur(e,t))return!0;if("object"!==r(e)||null===e||"object"!==r(t)||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var o=n[a];if(!d.call(t,o)||!ur(e[o],t[o]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function hr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function mr(e){var t=pr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&hr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=fr(n,o);var i=fr(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var vr=f&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,br=null,wr=!1;function kr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;wr||null==gr||gr!==G(r)||(r="selectionStart"in(r=gr)&&hr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&sr(br,r)||(br=r,0<(r=Qr(yr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function Er(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var xr={animationend:Er("Animation","AnimationEnd"),animationiteration:Er("Animation","AnimationIteration"),animationstart:Er("Animation","AnimationStart"),transitionend:Er("Transition","TransitionEnd")},Sr={},Cr={};function Pr(e){if(Sr[e])return Sr[e];if(!xr[e])return e;var t,n=xr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Cr)return Sr[e]=n[t];return e}f&&(Cr=document.createElement("div").style,"AnimationEvent"in window||(delete xr.animationend.animation,delete xr.animationiteration.animation,delete xr.animationstart.animation),"TransitionEvent"in window||delete xr.transitionend.transition);var _r=Pr("animationend"),Tr=Pr("animationiteration"),Nr=Pr("animationstart"),Or=Pr("transitionend"),Ar=new Map,Dr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Lr(e,t){Ar.set(e,t),s(t,[e])}for(var Rr=0;Rr<Dr.length;Rr++){var Ir=Dr[Rr];Lr(Ir.toLowerCase(),"on"+(Ir[0].toUpperCase()+Ir.slice(1)))}Lr(_r,"onAnimationEnd"),Lr(Tr,"onAnimationIteration"),Lr(Nr,"onAnimationStart"),Lr("dblclick","onDoubleClick"),Lr("focusin","onFocus"),Lr("focusout","onBlur"),Lr(Or,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var zr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(zr));function Fr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,l,u,s){if(Ve.apply(this,arguments),Me){if(!Me)throw Error(i(198));var c=Fe;Me=!1,Fe=null,je||(je=!0,Ue=c)}}(r,t,void 0,e),e.currentTarget=null}function jr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;Fr(a,l,s),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;Fr(a,l,s),o=u}}}if(je)throw e=Ue,je=!1,Ue=null,e}function Ur(e,t){var n=t[va];void 0===n&&(n=t[va]=new Set);var r=e+"__bubble";n.has(r)||(Hr(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Hr(n,e,r,t)}var Vr="_reactListening"+Math.random().toString(36).slice(2);function Wr(e){if(!e[Vr]){e[Vr]=!0,l.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Vr]||(t[Vr]=!0,Br("selectionchange",!1,t))}}function Hr(e,t,n,r){switch(Yt(t)){case 1:var a=qt;break;case 4:a=Qt;break;default:a=Kt}n=a.bind(null,t,n,e),a=void 0,!Re||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function $r(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=ba(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}De((function(){var r=o,a=Ee(n),i=[];e:{var l=Ar.get(e);if(void 0!==l){var u=fn,s=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":u=Tn;break;case"focusin":s="focus",u=gn;break;case"focusout":s="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=On;break;case _r:case Tr:case Nr:u=yn;break;case Or:u=An;break;case"scroll":u=pn;break;case"wheel":u=Ln;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Nn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Le(h,d))&&c.push(qr(h,m,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,a),i.push({event:l,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||n===ke||!(s=n.relatedTarget||n.fromElement)||!ba(s)&&!s[ma])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?ba(s):null)&&(s!==(f=We(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=mn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Nn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:ka(u),p=null==s?l:ka(s),(l=new c(m,h+"leave",u,n,a)).target=f,l.relatedTarget=p,m=null,ba(a)===r&&((c=new c(d,h+"enter",s,n,a)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Kr(p))h++;for(p=0,m=d;m;m=Kr(m))p++;for(;0<h-p;)c=Kr(c),h--;for(;0<p-h;)d=Kr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Kr(c),d=Kr(d)}c=null}else c=null;null!==u&&Gr(i,l,u,c,!1),null!==s&&null!==f&&Gr(i,f,s,c,!0)}if("select"===(u=(l=r?ka(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var v=Yn;else if($n(l))if(Jn)v=lr;else{v=or;var g=ar}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(v=ir);switch(v&&(v=v(e,r))?qn(i,v,n,a):(g&&g(e,l,r),"focusout"===e&&(g=l._wrapperState)&&g.controlled&&"number"===l.type&&te(l,"number",l.value)),g=r?ka(r):window,e){case"focusin":($n(g)||"true"===g.contentEditable)&&(gr=g,yr=r,br=null);break;case"focusout":br=yr=gr=null;break;case"mousedown":wr=!0;break;case"contextmenu":case"mouseup":case"dragend":wr=!1,kr(i,n,a);break;case"selectionchange":if(vr)break;case"keydown":case"keyup":kr(i,n,a)}var y;if(In)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Wn?Bn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Fn&&"ko"!==n.locale&&(Wn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Wn&&(y=tn()):(Zt="value"in(Jt=a)?Jt.value:Jt.textContent,Wn=!0)),0<(g=Qr(r,b)).length&&(b=new kn(b,e,null,n,a),i.push({event:b,listeners:g}),(y||null!==(y=Vn(n)))&&(b.data=y))),(y=Mn?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Un=!0,jn);case"textInput":return(e=t.data)===jn&&Un?null:e;default:return null}}(e,n):function(e,t){if(Wn)return"compositionend"===e||!In&&Bn(e,t)?(e=tn(),en=Zt=Jt=null,Wn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Fn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Qr(r,"onBeforeInput")).length&&(a=new kn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=y)}jr(i,t)}))}function qr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Le(e,n))&&r.unshift(qr(e,o,a)),null!=(o=Le(e,t))&&r.push(qr(e,o,a))),e=e.return}return r}function Kr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Gr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=Le(n,o))&&i.unshift(qr(n,u,l)):a||null!=(u=Le(n,o))&&i.push(qr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Xr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Jr(e){return("string"==typeof e?e:""+e).replace(Xr,"\n").replace(Yr,"")}function Zr(e,t,n){if(t=Jr(t),Jr(e)!==t&&n)throw Error(i(425))}function ea(){}var ta=null,na=null;function ra(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"===r(t.dangerouslySetInnerHTML)&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var aa="function"==typeof setTimeout?setTimeout:void 0,oa="function"==typeof clearTimeout?clearTimeout:void 0,ia="function"==typeof Promise?Promise:void 0,la="function"==typeof queueMicrotask?queueMicrotask:void 0!==ia?function(e){return ia.resolve(null).then(e).catch(ua)}:aa;function ua(e){setTimeout((function(){throw e}))}function sa(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Wt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Wt(t)}function ca(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function fa(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var da=Math.random().toString(36).slice(2),pa="__reactFiber$"+da,ha="__reactProps$"+da,ma="__reactContainer$"+da,va="__reactEvents$"+da,ga="__reactListeners$"+da,ya="__reactHandles$"+da;function ba(e){var t=e[pa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ma]||n[pa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=fa(e);null!==e;){if(n=e[pa])return n;e=fa(e)}return t}n=(e=n).parentNode}return null}function wa(e){return!(e=e[pa]||e[ma])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ka(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(i(33))}function Ea(e){return e[ha]||null}var xa=[],Sa=-1;function Ca(e){return{current:e}}function Pa(e){0>Sa||(e.current=xa[Sa],xa[Sa]=null,Sa--)}function _a(e,t){Sa++,xa[Sa]=e.current,e.current=t}var Ta={},Na=Ca(Ta),Oa=Ca(!1),Aa=Ta;function Da(e,t){var n=e.type.contextTypes;if(!n)return Ta;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function La(e){return null!=e.childContextTypes}function Ra(){Pa(Oa),Pa(Na)}function Ia(e,t,n){if(Na.current!==Ta)throw Error(i(168));_a(Na,t),_a(Oa,n)}function za(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(i(108,H(e)||"Unknown",a));return F({},n,r)}function Ma(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ta,Aa=Na.current,_a(Na,e),_a(Oa,Oa.current),!0}function Fa(e,t,n){var r=e.stateNode;if(!r)throw Error(i(169));n?(e=za(e,t,Aa),r.__reactInternalMemoizedMergedChildContext=e,Pa(Oa),Pa(Na),_a(Na,e)):Pa(Oa),_a(Oa,n)}var ja=null,Ua=!1,Ba=!1;function Va(e){null===ja?ja=[e]:ja.push(e)}function Wa(){if(!Ba&&null!==ja){Ba=!0;var e=0,t=wt;try{var n=ja;for(wt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}ja=null,Ua=!1}catch(t){throw null!==ja&&(ja=ja.slice(e+1)),Ke(et,Wa),t}finally{wt=t,Ba=!1}}return null}var Ha=[],$a=0,qa=null,Qa=0,Ka=[],Ga=0,Xa=null,Ya=1,Ja="";function Za(e,t){Ha[$a++]=Qa,Ha[$a++]=qa,qa=e,Qa=t}function eo(e,t,n){Ka[Ga++]=Ya,Ka[Ga++]=Ja,Ka[Ga++]=Xa,Xa=e;var r=Ya;e=Ja;var a=32-lt(r)-1;r&=~(1<<a),n+=1;var o=32-lt(t)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Ya=1<<32-lt(t)+a|n<<a|r,Ja=o+e}else Ya=1<<o|n<<a|r,Ja=e}function to(e){null!==e.return&&(Za(e,1),eo(e,1,0))}function no(e){for(;e===qa;)qa=Ha[--$a],Ha[$a]=null,Qa=Ha[--$a],Ha[$a]=null;for(;e===Xa;)Xa=Ka[--Ga],Ka[Ga]=null,Ja=Ka[--Ga],Ka[Ga]=null,Ya=Ka[--Ga],Ka[Ga]=null}var ro=null,ao=null,oo=!1,io=null;function lo(e,t){var n=Ds(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function uo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ro=e,ao=ca(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ro=e,ao=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xa?{id:Ya,overflow:Ja}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ds(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ro=e,ao=null,!0);default:return!1}}function so(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function co(e){if(oo){var t=ao;if(t){var n=t;if(!uo(e,t)){if(so(e))throw Error(i(418));t=ca(n.nextSibling);var r=ro;t&&uo(e,t)?lo(r,n):(e.flags=-4097&e.flags|2,oo=!1,ro=e)}}else{if(so(e))throw Error(i(418));e.flags=-4097&e.flags|2,oo=!1,ro=e}}}function fo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ro=e}function po(e){if(e!==ro)return!1;if(!oo)return fo(e),oo=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ra(e.type,e.memoizedProps)),t&&(t=ao)){if(so(e))throw ho(),Error(i(418));for(;t;)lo(e,t),t=ca(t.nextSibling)}if(fo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(i(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ao=ca(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ao=null}}else ao=ro?ca(e.stateNode.nextSibling):null;return!0}function ho(){for(var e=ao;e;)e=ca(e.nextSibling)}function mo(){ao=ro=null,oo=!1}function vo(e){null===io?io=[e]:io.push(e)}var go=k.ReactCurrentBatchConfig;function yo(e,t){if(e&&e.defaultProps){for(var n in t=F({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var bo=Ca(null),wo=null,ko=null,Eo=null;function xo(){Eo=ko=wo=null}function So(e){var t=bo.current;Pa(bo),e._currentValue=t}function Co(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Po(e,t){wo=e,Eo=ko=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(kl=!0),e.firstContext=null)}function _o(e){var t=e._currentValue;if(Eo!==e)if(e={context:e,memoizedValue:t,next:null},null===ko){if(null===wo)throw Error(i(308));ko=e,wo.dependencies={lanes:0,firstContext:e}}else ko=ko.next=e;return t}var To=null;function No(e){null===To?To=[e]:To.push(e)}function Oo(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,No(t)):(n.next=a.next,a.next=n),t.interleaved=n,Ao(e,r)}function Ao(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Do=!1;function Lo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ro(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Io(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function zo(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Nu)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Ao(e,n)}return null===(a=r.interleaved)?(t.next=t,No(r)):(t.next=a.next,a.next=t),r.interleaved=t,Ao(e,n)}function Mo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Fo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function jo(e,t,n,r){var a=e.updateQueue;Do=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,l=a.shared.pending;if(null!==l){a.shared.pending=null;var u=l,s=u.next;u.next=null,null===i?o=s:i.next=s,i=u;var c=e.alternate;null!==c&&(l=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===l?c.firstBaseUpdate=s:l.next=s,c.lastBaseUpdate=u)}if(null!==o){var f=a.baseState;for(i=0,c=s=u=null,l=o;;){var d=l.lane,p=l.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(d=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=F({},f,d);break e;case 2:Do=!0}}null!==l.callback&&0!==l.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[l]:d.push(l))}else p={eventTime:p,lane:d,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===c?(s=c=p,u=f):c=c.next=p,i|=d;if(null===(l=l.next)){if(null===(l=a.shared.pending))break;l=(d=l).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===c&&(u=f),a.baseState=u,a.firstBaseUpdate=s,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Mu|=i,e.lanes=i,e.memoizedState=f}}function Uo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(i(191,a));a.call(r)}}}var Bo=(new a.Component).refs;function Vo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:F({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Wo={isMounted:function(e){return!!(e=e._reactInternals)&&We(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ts(),a=ns(e),o=Io(r,a);o.payload=t,null!=n&&(o.callback=n),null!==(t=zo(e,o,a))&&(rs(t,e,a,r),Mo(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ts(),a=ns(e),o=Io(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=zo(e,o,a))&&(rs(t,e,a,r),Mo(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ts(),r=ns(e),a=Io(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=zo(e,a,r))&&(rs(t,e,r,n),Mo(t,e,r))}};function Ho(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&sr(n,r)&&sr(a,o))}function $o(e,t,n){var a=!1,o=Ta,i=t.contextType;return"object"===r(i)&&null!==i?i=_o(i):(o=La(t)?Aa:Na.current,i=(a=null!=(a=t.contextTypes))?Da(e,o):Ta),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Wo,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function qo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Wo.enqueueReplaceState(t,t.state,null)}function Qo(e,t,n,a){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=Bo,Lo(e);var i=t.contextType;"object"===r(i)&&null!==i?o.context=_o(i):(i=La(t)?Aa:Na.current,o.context=Da(e,i)),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(Vo(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&Wo.enqueueReplaceState(o,o.state,null),jo(e,n,o,a),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4194308)}function Ko(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!==r(e)){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(i(309));var a=n.stateNode}if(!a)throw Error(i(147,e));var o=a,l=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===l?t.ref:(t=function(e){var t=o.refs;t===Bo&&(t=o.refs={}),null===e?delete t[l]:t[l]=e},t._stringRef=l,t)}if("string"!=typeof e)throw Error(i(284));if(!n._owner)throw Error(i(290,e))}return e}function Go(e,t){throw e=Object.prototype.toString.call(t),Error(i(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Xo(e){return(0,e._init)(e._payload)}function Yo(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Rs(e,t)).index=0,e.sibling=null,e}function l(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function u(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Fs(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,a){var i=n.type;return i===S?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===i||"object"===r(i)&&null!==i&&i.$$typeof===L&&Xo(i)===t.type)?((a=o(t,n.props)).ref=Ko(e,t,n),a.return=e,a):((a=Is(n.type,n.key,n.props,null,e.mode,a)).ref=Ko(e,t,n),a.return=e,a)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=js(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=zs(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Fs(""+t,e.mode,n)).return=e,t;if("object"===r(t)&&null!==t){switch(t.$$typeof){case E:return(n=Is(t.type,t.key,t.props,null,e.mode,n)).ref=Ko(e,null,t),n.return=e,n;case x:return(t=js(t,e.mode,n)).return=e,t;case L:return p(e,(0,t._init)(t._payload),n)}if(ne(t)||z(t))return(t=zs(t,e.mode,n,null)).return=e,t;Go(e,t)}return null}function h(e,t,n,a){var o=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==o?null:s(e,t,""+n,a);if("object"===r(n)&&null!==n){switch(n.$$typeof){case E:return n.key===o?c(e,t,n,a):null;case x:return n.key===o?f(e,t,n,a):null;case L:return h(e,t,(o=n._init)(n._payload),a)}if(ne(n)||z(n))return null!==o?null:d(e,t,n,a,null);Go(e,n)}return null}function m(e,t,n,a,o){if("string"==typeof a&&""!==a||"number"==typeof a)return s(t,e=e.get(n)||null,""+a,o);if("object"===r(a)&&null!==a){switch(a.$$typeof){case E:return c(t,e=e.get(null===a.key?n:a.key)||null,a,o);case x:return f(t,e=e.get(null===a.key?n:a.key)||null,a,o);case L:return m(e,t,n,(0,a._init)(a._payload),o)}if(ne(a)||z(a))return d(t,e=e.get(n)||null,a,o,null);Go(t,a)}return null}function v(r,o,i,u){for(var s=null,c=null,f=o,d=o=0,v=null;null!==f&&d<i.length;d++){f.index>d?(v=f,f=null):v=f.sibling;var g=h(r,f,i[d],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(r,f),o=l(g,o,d),null===c?s=g:c.sibling=g,c=g,f=v}if(d===i.length)return n(r,f),oo&&Za(r,d),s;if(null===f){for(;d<i.length;d++)null!==(f=p(r,i[d],u))&&(o=l(f,o,d),null===c?s=f:c.sibling=f,c=f);return oo&&Za(r,d),s}for(f=a(r,f);d<i.length;d++)null!==(v=m(f,r,d,i[d],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?d:v.key),o=l(v,o,d),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return t(r,e)})),oo&&Za(r,d),s}function g(r,o,u,s){var c=z(u);if("function"!=typeof c)throw Error(i(150));if(null==(u=c.call(u)))throw Error(i(151));for(var f=c=null,d=o,v=o=0,g=null,y=u.next();null!==d&&!y.done;v++,y=u.next()){d.index>v?(g=d,d=null):g=d.sibling;var b=h(r,d,y.value,s);if(null===b){null===d&&(d=g);break}e&&d&&null===b.alternate&&t(r,d),o=l(b,o,v),null===f?c=b:f.sibling=b,f=b,d=g}if(y.done)return n(r,d),oo&&Za(r,v),c;if(null===d){for(;!y.done;v++,y=u.next())null!==(y=p(r,y.value,s))&&(o=l(y,o,v),null===f?c=y:f.sibling=y,f=y);return oo&&Za(r,v),c}for(d=a(r,d);!y.done;v++,y=u.next())null!==(y=m(d,r,v,y.value,s))&&(e&&null!==y.alternate&&d.delete(null===y.key?v:y.key),o=l(y,o,v),null===f?c=y:f.sibling=y,f=y);return e&&d.forEach((function(e){return t(r,e)})),oo&&Za(r,v),c}return function e(a,i,l,s){if("object"===r(l)&&null!==l&&l.type===S&&null===l.key&&(l=l.props.children),"object"===r(l)&&null!==l){switch(l.$$typeof){case E:e:{for(var c=l.key,f=i;null!==f;){if(f.key===c){if((c=l.type)===S){if(7===f.tag){n(a,f.sibling),(i=o(f,l.props.children)).return=a,a=i;break e}}else if(f.elementType===c||"object"===r(c)&&null!==c&&c.$$typeof===L&&Xo(c)===f.type){n(a,f.sibling),(i=o(f,l.props)).ref=Ko(a,f,l),i.return=a,a=i;break e}n(a,f);break}t(a,f),f=f.sibling}l.type===S?((i=zs(l.props.children,a.mode,s,l.key)).return=a,a=i):((s=Is(l.type,l.key,l.props,null,a.mode,s)).ref=Ko(a,i,l),s.return=a,a=s)}return u(a);case x:e:{for(f=l.key;null!==i;){if(i.key===f){if(4===i.tag&&i.stateNode.containerInfo===l.containerInfo&&i.stateNode.implementation===l.implementation){n(a,i.sibling),(i=o(i,l.children||[])).return=a,a=i;break e}n(a,i);break}t(a,i),i=i.sibling}(i=js(l,a.mode,s)).return=a,a=i}return u(a);case L:return e(a,i,(f=l._init)(l._payload),s)}if(ne(l))return v(a,i,l,s);if(z(l))return g(a,i,l,s);Go(a,l)}return"string"==typeof l&&""!==l||"number"==typeof l?(l=""+l,null!==i&&6===i.tag?(n(a,i.sibling),(i=o(i,l)).return=a,a=i):(n(a,i),(i=Fs(l,a.mode,s)).return=a,a=i),u(a)):n(a,i)}}var Jo=Yo(!0),Zo=Yo(!1),ei={},ti=Ca(ei),ni=Ca(ei),ri=Ca(ei);function ai(e){if(e===ei)throw Error(i(174));return e}function oi(e,t){switch(_a(ri,t),_a(ni,e),_a(ti,ei),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:se(null,"");break;default:t=se(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Pa(ti),_a(ti,t)}function ii(){Pa(ti),Pa(ni),Pa(ri)}function li(e){ai(ri.current);var t=ai(ti.current),n=se(t,e.type);t!==n&&(_a(ni,e),_a(ti,n))}function ui(e){ni.current===e&&(Pa(ti),Pa(ni))}var si=Ca(0);function ci(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var fi=[];function di(){for(var e=0;e<fi.length;e++)fi[e]._workInProgressVersionPrimary=null;fi.length=0}var pi=k.ReactCurrentDispatcher,hi=k.ReactCurrentBatchConfig,mi=0,vi=null,gi=null,yi=null,bi=!1,wi=!1,ki=0,Ei=0;function xi(){throw Error(i(321))}function Si(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ur(e[n],t[n]))return!1;return!0}function Ci(e,t,n,r,a,o){if(mi=o,vi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,pi.current=null===e||null===e.memoizedState?ul:sl,e=n(r,a),wi){o=0;do{if(wi=!1,ki=0,25<=o)throw Error(i(301));o+=1,yi=gi=null,t.updateQueue=null,pi.current=cl,e=n(r,a)}while(wi)}if(pi.current=ll,t=null!==gi&&null!==gi.next,mi=0,yi=gi=vi=null,bi=!1,t)throw Error(i(300));return e}function Pi(){var e=0!==ki;return ki=0,e}function _i(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yi?vi.memoizedState=yi=e:yi=yi.next=e,yi}function Ti(){if(null===gi){var e=vi.alternate;e=null!==e?e.memoizedState:null}else e=gi.next;var t=null===yi?vi.memoizedState:yi.next;if(null!==t)yi=t,gi=e;else{if(null===e)throw Error(i(310));e={memoizedState:(gi=e).memoizedState,baseState:gi.baseState,baseQueue:gi.baseQueue,queue:gi.queue,next:null},null===yi?vi.memoizedState=yi=e:yi=yi.next=e}return yi}function Ni(e,t){return"function"==typeof t?t(e):t}function Oi(e){var t=Ti(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=gi,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var l=a.next;a.next=o.next,o.next=l}r.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,r=r.baseState;var u=l=null,s=null,c=o;do{var f=c.lane;if((mi&f)===f)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(u=s=d,l=r):s=s.next=d,vi.lanes|=f,Mu|=f}c=c.next}while(null!==c&&c!==o);null===s?l=r:s.next=u,ur(r,t.memoizedState)||(kl=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=s,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,vi.lanes|=o,Mu|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ai(e){var t=Ti(),n=t.queue;if(null===n)throw Error(i(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{o=e(o,l.action),l=l.next}while(l!==a);ur(o,t.memoizedState)||(kl=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function Di(){}function Li(e,t){var n=vi,r=Ti(),a=t(),o=!ur(r.memoizedState,a);if(o&&(r.memoizedState=a,kl=!0),r=r.queue,$i(zi.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==yi&&1&yi.memoizedState.tag){if(n.flags|=2048,Ui(9,Ii.bind(null,n,r,a,t),void 0,null),null===Ou)throw Error(i(349));0!=(30&mi)||Ri(n,t,a)}return a}function Ri(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=vi.updateQueue)?(t={lastEffect:null,stores:null},vi.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ii(e,t,n,r){t.value=n,t.getSnapshot=r,Mi(t)&&Fi(e)}function zi(e,t,n){return n((function(){Mi(t)&&Fi(e)}))}function Mi(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ur(e,n)}catch(e){return!0}}function Fi(e){var t=Ao(e,1);null!==t&&rs(t,e,1,-1)}function ji(e){var t=_i();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ni,lastRenderedState:e},t.queue=e,e=e.dispatch=rl.bind(null,vi,e),[t.memoizedState,e]}function Ui(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=vi.updateQueue)?(t={lastEffect:null,stores:null},vi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Bi(){return Ti().memoizedState}function Vi(e,t,n,r){var a=_i();vi.flags|=e,a.memoizedState=Ui(1|t,n,void 0,void 0===r?null:r)}function Wi(e,t,n,r){var a=Ti();r=void 0===r?null:r;var o=void 0;if(null!==gi){var i=gi.memoizedState;if(o=i.destroy,null!==r&&Si(r,i.deps))return void(a.memoizedState=Ui(t,n,o,r))}vi.flags|=e,a.memoizedState=Ui(1|t,n,o,r)}function Hi(e,t){return Vi(8390656,8,e,t)}function $i(e,t){return Wi(2048,8,e,t)}function qi(e,t){return Wi(4,2,e,t)}function Qi(e,t){return Wi(4,4,e,t)}function Ki(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Gi(e,t,n){return n=null!=n?n.concat([e]):null,Wi(4,4,Ki.bind(null,t,e),n)}function Xi(){}function Yi(e,t){var n=Ti();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Si(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Ji(e,t){var n=Ti();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Si(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Zi(e,t,n){return 0==(21&mi)?(e.baseState&&(e.baseState=!1,kl=!0),e.memoizedState=n):(ur(n,t)||(n=vt(),vi.lanes|=n,Mu|=n,e.baseState=!0),t)}function el(e,t){var n=wt;wt=0!==n&&4>n?n:4,e(!0);var r=hi.transition;hi.transition={};try{e(!1),t()}finally{wt=n,hi.transition=r}}function tl(){return Ti().memoizedState}function nl(e,t,n){var r=ns(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},al(e)?ol(t,n):null!==(n=Oo(e,t,n,r))&&(rs(n,e,r,ts()),il(n,t,r))}function rl(e,t,n){var r=ns(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(al(e))ol(t,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,l=o(i,n);if(a.hasEagerState=!0,a.eagerState=l,ur(l,i)){var u=t.interleaved;return null===u?(a.next=a,No(t)):(a.next=u.next,u.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Oo(e,t,a,r))&&(rs(n,e,r,a=ts()),il(n,t,r))}}function al(e){var t=e.alternate;return e===vi||null!==t&&t===vi}function ol(e,t){wi=bi=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function il(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var ll={readContext:_o,useCallback:xi,useContext:xi,useEffect:xi,useImperativeHandle:xi,useInsertionEffect:xi,useLayoutEffect:xi,useMemo:xi,useReducer:xi,useRef:xi,useState:xi,useDebugValue:xi,useDeferredValue:xi,useTransition:xi,useMutableSource:xi,useSyncExternalStore:xi,useId:xi,unstable_isNewReconciler:!1},ul={readContext:_o,useCallback:function(e,t){return _i().memoizedState=[e,void 0===t?null:t],e},useContext:_o,useEffect:Hi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Vi(4194308,4,Ki.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Vi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Vi(4,2,e,t)},useMemo:function(e,t){var n=_i();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=_i();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=nl.bind(null,vi,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},_i().memoizedState=e},useState:ji,useDebugValue:Xi,useDeferredValue:function(e){return _i().memoizedState=e},useTransition:function(){var e=ji(!1),t=e[0];return e=el.bind(null,e[1]),_i().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=vi,a=_i();if(oo){if(void 0===n)throw Error(i(407));n=n()}else{if(n=t(),null===Ou)throw Error(i(349));0!=(30&mi)||Ri(r,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,Hi(zi.bind(null,r,o,e),[e]),r.flags|=2048,Ui(9,Ii.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=_i(),t=Ou.identifierPrefix;if(oo){var n=Ja;t=":"+t+"R"+(n=(Ya&~(1<<32-lt(Ya)-1)).toString(32)+n),0<(n=ki++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=Ei++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},sl={readContext:_o,useCallback:Yi,useContext:_o,useEffect:$i,useImperativeHandle:Gi,useInsertionEffect:qi,useLayoutEffect:Qi,useMemo:Ji,useReducer:Oi,useRef:Bi,useState:function(){return Oi(Ni)},useDebugValue:Xi,useDeferredValue:function(e){return Zi(Ti(),gi.memoizedState,e)},useTransition:function(){return[Oi(Ni)[0],Ti().memoizedState]},useMutableSource:Di,useSyncExternalStore:Li,useId:tl,unstable_isNewReconciler:!1},cl={readContext:_o,useCallback:Yi,useContext:_o,useEffect:$i,useImperativeHandle:Gi,useInsertionEffect:qi,useLayoutEffect:Qi,useMemo:Ji,useReducer:Ai,useRef:Bi,useState:function(){return Ai(Ni)},useDebugValue:Xi,useDeferredValue:function(e){var t=Ti();return null===gi?t.memoizedState=e:Zi(t,gi.memoizedState,e)},useTransition:function(){return[Ai(Ni)[0],Ti().memoizedState]},useMutableSource:Di,useSyncExternalStore:Li,useId:tl,unstable_isNewReconciler:!1};function fl(e,t){try{var n="",r=t;do{n+=V(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function dl(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function pl(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var hl="function"==typeof WeakMap?WeakMap:Map;function ml(e,t,n){(n=Io(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){$u||($u=!0,qu=r),pl(0,t)},n}function vl(e,t,n){(n=Io(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){pl(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){pl(0,t),"function"!=typeof r&&(null===Qu?Qu=new Set([this]):Qu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function gl(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new hl;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Ps.bind(null,e,t,n),t.then(e,e))}function yl(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bl(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Io(-1,1)).tag=2,zo(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var wl=k.ReactCurrentOwner,kl=!1;function El(e,t,n,r){t.child=null===e?Zo(t,null,n,r):Jo(t,e.child,n,r)}function xl(e,t,n,r,a){n=n.render;var o=t.ref;return Po(t,a),r=Ci(e,t,n,r,o,a),n=Pi(),null===e||kl?(oo&&n&&to(t),t.flags|=1,El(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$l(e,t,a))}function Sl(e,t,n,r,a){if(null===e){var o=n.type;return"function"!=typeof o||Ls(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Is(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Cl(e,t,o,r,a))}if(o=e.child,0==(e.lanes&a)){var i=o.memoizedProps;if((n=null!==(n=n.compare)?n:sr)(i,r)&&e.ref===t.ref)return $l(e,t,a)}return t.flags|=1,(e=Rs(o,r)).ref=t.ref,e.return=t,t.child=e}function Cl(e,t,n,r,a){if(null!==e){var o=e.memoizedProps;if(sr(o,r)&&e.ref===t.ref){if(kl=!1,t.pendingProps=r=o,0==(e.lanes&a))return t.lanes=e.lanes,$l(e,t,a);0!=(131072&e.flags)&&(kl=!0)}}return Tl(e,t,n,r,a)}function Pl(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},_a(Ru,Lu),Lu|=n;else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,_a(Ru,Lu),Lu|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,_a(Ru,Lu),Lu|=r}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,_a(Ru,Lu),Lu|=r;return El(e,t,a,n),t.child}function _l(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Tl(e,t,n,r,a){var o=La(n)?Aa:Na.current;return o=Da(t,o),Po(t,a),n=Ci(e,t,n,r,o,a),r=Pi(),null===e||kl?(oo&&r&&to(t),t.flags|=1,El(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$l(e,t,a))}function Nl(e,t,n,a,o){if(La(n)){var i=!0;Ma(t)}else i=!1;if(Po(t,o),null===t.stateNode)Hl(e,t),$o(t,n,a),Qo(t,n,a,o),a=!0;else if(null===e){var l=t.stateNode,u=t.memoizedProps;l.props=u;var s=l.context,c=n.contextType;c="object"===r(c)&&null!==c?_o(c):Da(t,c=La(n)?Aa:Na.current);var f=n.getDerivedStateFromProps,d="function"==typeof f||"function"==typeof l.getSnapshotBeforeUpdate;d||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==a||s!==c)&&qo(t,l,a,c),Do=!1;var p=t.memoizedState;l.state=p,jo(t,a,l,o),s=t.memoizedState,u!==a||p!==s||Oa.current||Do?("function"==typeof f&&(Vo(t,n,f,a),s=t.memoizedState),(u=Do||Ho(t,n,u,a,p,s,c))?(d||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4194308)):("function"==typeof l.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=s),l.props=a,l.state=s,l.context=c,a=u):("function"==typeof l.componentDidMount&&(t.flags|=4194308),a=!1)}else{l=t.stateNode,Ro(e,t),u=t.memoizedProps,c=t.type===t.elementType?u:yo(t.type,u),l.props=c,d=t.pendingProps,p=l.context,s=n.contextType,s="object"===r(s)&&null!==s?_o(s):Da(t,s=La(n)?Aa:Na.current);var h=n.getDerivedStateFromProps;(f="function"==typeof h||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(u!==d||p!==s)&&qo(t,l,a,s),Do=!1,p=t.memoizedState,l.state=p,jo(t,a,l,o);var m=t.memoizedState;u!==d||p!==m||Oa.current||Do?("function"==typeof h&&(Vo(t,n,h,a),m=t.memoizedState),(c=Do||Ho(t,n,c,a,p,m,s)||!1)?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(a,m,s),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(a,m,s)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=m),l.props=a,l.state=m,l.context=s,a=c):("function"!=typeof l.componentDidUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||u===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),a=!1)}return Ol(e,t,n,a,i,o)}function Ol(e,t,n,r,a,o){_l(e,t);var i=0!=(128&t.flags);if(!r&&!i)return a&&Fa(t,n,!1),$l(e,t,o);r=t.stateNode,wl.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Jo(t,e.child,null,o),t.child=Jo(t,null,l,o)):El(e,t,l,o),t.memoizedState=r.state,a&&Fa(t,n,!0),t.child}function Al(e){var t=e.stateNode;t.pendingContext?Ia(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ia(0,t.context,!1),oi(e,t.containerInfo)}function Dl(e,t,n,r,a){return mo(),vo(a),t.flags|=256,El(e,t,n,r),t.child}var Ll,Rl,Il,zl={dehydrated:null,treeContext:null,retryLane:0};function Ml(e){return{baseLanes:e,cachePool:null,transitions:null}}function Fl(e,t,n){var r,a=t.pendingProps,o=si.current,l=!1,u=0!=(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(l=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),_a(si,1&o),null===e)return co(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=a.children,e=a.fallback,l?(a=t.mode,l=t.child,u={mode:"hidden",children:u},0==(1&a)&&null!==l?(l.childLanes=0,l.pendingProps=u):l=Ms(u,a,0,null),e=zs(e,a,n,null),l.return=t,e.return=t,l.sibling=e,t.child=l,t.child.memoizedState=Ml(n),t.memoizedState=zl,e):jl(t,u));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,a,o,l){if(n)return 256&t.flags?(t.flags&=-257,Ul(e,t,l,r=dl(Error(i(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,a=t.mode,r=Ms({mode:"visible",children:r.children},a,0,null),(o=zs(o,a,l,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!=(1&t.mode)&&Jo(t,e.child,null,l),t.child.memoizedState=Ml(l),t.memoizedState=zl,o);if(0==(1&t.mode))return Ul(e,t,l,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Ul(e,t,l,r=dl(o=Error(i(419)),r,void 0))}if(u=0!=(l&e.childLanes),kl||u){if(null!==(r=Ou)){switch(l&-l){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|l))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Ao(e,a),rs(r,e,a,-1))}return vs(),Ul(e,t,l,r=dl(Error(i(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Ts.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,ao=ca(a.nextSibling),ro=t,oo=!0,io=null,null!==e&&(Ka[Ga++]=Ya,Ka[Ga++]=Ja,Ka[Ga++]=Xa,Ya=e.id,Ja=e.overflow,Xa=t),(t=jl(t,r.children)).flags|=4096,t)}(e,t,u,a,r,o,n);if(l){l=a.fallback,u=t.mode,r=(o=e.child).sibling;var s={mode:"hidden",children:a.children};return 0==(1&u)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=s,t.deletions=null):(a=Rs(o,s)).subtreeFlags=14680064&o.subtreeFlags,null!==r?l=Rs(r,l):(l=zs(l,u,n,null)).flags|=2,l.return=t,a.return=t,a.sibling=l,t.child=a,a=l,l=t.child,u=null===(u=e.child.memoizedState)?Ml(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},l.memoizedState=u,l.childLanes=e.childLanes&~n,t.memoizedState=zl,a}return e=(l=e.child).sibling,a=Rs(l,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function jl(e,t){return(t=Ms({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Ul(e,t,n,r){return null!==r&&vo(r),Jo(t,e.child,null,n),(e=jl(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bl(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Co(e.return,t,n)}function Vl(e,t,n,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function Wl(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(El(e,t,r.children,n),0!=(2&(r=si.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bl(e,n,t);else if(19===e.tag)Bl(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(_a(si,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ci(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Vl(t,!1,a,n,o);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ci(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Vl(t,!0,n,null,o);break;case"together":Vl(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Hl(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function $l(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Mu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(i(153));if(null!==t.child){for(n=Rs(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Rs(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ql(e,t){if(!oo)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ql(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Kl(e,t,n){var r=t.pendingProps;switch(no(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ql(t),null;case 1:case 17:return La(t.type)&&Ra(),Ql(t),null;case 3:return r=t.stateNode,ii(),Pa(Oa),Pa(Na),di(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(po(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==io&&(ls(io),io=null))),Ql(t),null;case 5:ui(t);var a=ai(ri.current);if(n=t.type,null!==e&&null!=t.stateNode)Rl(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(i(166));return Ql(t),null}if(e=ai(ti.current),po(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[pa]=t,r[ha]=o,e=0!=(1&t.mode),n){case"dialog":Ur("cancel",r),Ur("close",r);break;case"iframe":case"object":case"embed":Ur("load",r);break;case"video":case"audio":for(a=0;a<zr.length;a++)Ur(zr[a],r);break;case"source":Ur("error",r);break;case"img":case"image":case"link":Ur("error",r),Ur("load",r);break;case"details":Ur("toggle",r);break;case"input":Y(r,o),Ur("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Ur("invalid",r);break;case"textarea":oe(r,o),Ur("invalid",r)}for(var l in be(n,o),a=null,o)if(o.hasOwnProperty(l)){var s=o[l];"children"===l?"string"==typeof s?r.textContent!==s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),a=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),a=["children",""+s]):u.hasOwnProperty(l)&&null!=s&&"onScroll"===l&&Ur("scroll",r)}switch(n){case"input":Q(r),ee(r,o,!0);break;case"textarea":Q(r),le(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=ea)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ue(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[pa]=t,e[ha]=r,Ll(e,t),t.stateNode=e;e:{switch(l=we(n,r),n){case"dialog":Ur("cancel",e),Ur("close",e),a=r;break;case"iframe":case"object":case"embed":Ur("load",e),a=r;break;case"video":case"audio":for(a=0;a<zr.length;a++)Ur(zr[a],e);a=r;break;case"source":Ur("error",e),a=r;break;case"img":case"image":case"link":Ur("error",e),Ur("load",e),a=r;break;case"details":Ur("toggle",e),a=r;break;case"input":Y(e,r),a=X(e,r),Ur("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=F({},r,{value:void 0}),Ur("invalid",e);break;case"textarea":oe(e,r),a=ae(e,r),Ur("invalid",e)}for(o in be(n,a),s=a)if(s.hasOwnProperty(o)){var c=s[o];"style"===o?ge(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===o?"string"==typeof c?("textarea"!==n||""!==c)&&pe(e,c):"number"==typeof c&&pe(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(u.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Ur("scroll",e):null!=c&&w(e,o,c,l))}switch(n){case"input":Q(e),ee(e,r,!1);break;case"textarea":Q(e),le(e);break;case"option":null!=r.value&&e.setAttribute("value",""+$(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?re(e,!!r.multiple,o,!1):null!=r.defaultValue&&re(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=ea)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ql(t),null;case 6:if(e&&null!=t.stateNode)Il(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(i(166));if(n=ai(ri.current),ai(ti.current),po(t)){if(r=t.stateNode,n=t.memoizedProps,r[pa]=t,(o=r.nodeValue!==n)&&null!==(e=ro))switch(e.tag){case 3:Zr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!=(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[pa]=t,t.stateNode=r}return Ql(t),null;case 13:if(Pa(si),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(oo&&null!==ao&&0!=(1&t.mode)&&0==(128&t.flags))ho(),mo(),t.flags|=98560,o=!1;else if(o=po(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(i(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(i(317));o[pa]=t}else mo(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ql(t),o=!1}else null!==io&&(ls(io),io=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&si.current)?0===Iu&&(Iu=3):vs())),null!==t.updateQueue&&(t.flags|=4),Ql(t),null);case 4:return ii(),null===e&&Wr(t.stateNode.containerInfo),Ql(t),null;case 10:return So(t.type._context),Ql(t),null;case 19:if(Pa(si),null===(o=t.memoizedState))return Ql(t),null;if(r=0!=(128&t.flags),null===(l=o.rendering))if(r)ql(o,!1);else{if(0!==Iu||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ci(e))){for(t.flags|=128,ql(o,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return _a(si,1&si.current|2),t.child}e=e.sibling}null!==o.tail&&Je()>Wu&&(t.flags|=128,r=!0,ql(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ci(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ql(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!oo)return Ql(t),null}else 2*Je()-o.renderingStartTime>Wu&&1073741824!==n&&(t.flags|=128,r=!0,ql(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=o.last)?n.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Je(),t.sibling=null,n=si.current,_a(si,r?1&n|2:1&n),t):(Ql(t),null);case 22:case 23:return ds(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Lu)&&(Ql(t),6&t.subtreeFlags&&(t.flags|=8192)):Ql(t),null;case 24:case 25:return null}throw Error(i(156,t.tag))}function Gl(e,t){switch(no(t),t.tag){case 1:return La(t.type)&&Ra(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ii(),Pa(Oa),Pa(Na),di(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ui(t),null;case 13:if(Pa(si),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(i(340));mo()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Pa(si),null;case 4:return ii(),null;case 10:return So(t.type._context),null;case 22:case 23:return ds(),null;default:return null}}Ll=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Rl=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,ai(ti.current);var o,i=null;switch(n){case"input":a=X(e,a),r=X(e,r),i=[];break;case"select":a=F({},a,{value:void 0}),r=F({},r,{value:void 0}),i=[];break;case"textarea":a=ae(e,a),r=ae(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=ea)}for(c in be(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var l=a[c];for(o in l)l.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(u.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var s=r[c];if(l=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&s!==l&&(null!=s||null!=l))if("style"===c)if(l){for(o in l)!l.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in s)s.hasOwnProperty(o)&&l[o]!==s[o]&&(n||(n={}),n[o]=s[o])}else n||(i||(i=[]),i.push(c,n)),n=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,l=l?l.__html:void 0,null!=s&&l!==s&&(i=i||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(u.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&Ur("scroll",e),i||l===s||(i=[])):(i=i||[]).push(c,s))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Il=function(e,t,n,r){n!==r&&(t.flags|=4)};var Xl=!1,Yl=!1,Jl="function"==typeof WeakSet?WeakSet:Set,Zl=null;function eu(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Cs(e,t,n)}else n.current=null}function tu(e,t,n){try{n()}catch(n){Cs(e,t,n)}}var nu=!1;function ru(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&tu(t,n,o)}a=a.next}while(a!==r)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ou(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function iu(e){var t=e.alternate;null!==t&&(e.alternate=null,iu(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[pa],delete t[ha],delete t[va],delete t[ga],delete t[ya]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function lu(e){return 5===e.tag||3===e.tag||4===e.tag}function uu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||lu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function su(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=ea));else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}function cu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var fu=null,du=!1;function pu(e,t,n){for(n=n.child;null!==n;)hu(e,t,n),n=n.sibling}function hu(e,t,n){if(it&&"function"==typeof it.onCommitFiberUnmount)try{it.onCommitFiberUnmount(ot,n)}catch(e){}switch(n.tag){case 5:Yl||eu(n,t);case 6:var r=fu,a=du;fu=null,pu(e,t,n),du=a,null!==(fu=r)&&(du?(e=fu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):fu.removeChild(n.stateNode));break;case 18:null!==fu&&(du?(e=fu,n=n.stateNode,8===e.nodeType?sa(e.parentNode,n):1===e.nodeType&&sa(e,n),Wt(e)):sa(fu,n.stateNode));break;case 4:r=fu,a=du,fu=n.stateNode.containerInfo,du=!0,pu(e,t,n),fu=r,du=a;break;case 0:case 11:case 14:case 15:if(!Yl&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(0!=(2&o)||0!=(4&o))&&tu(n,t,i),a=a.next}while(a!==r)}pu(e,t,n);break;case 1:if(!Yl&&(eu(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Cs(n,t,e)}pu(e,t,n);break;case 21:pu(e,t,n);break;case 22:1&n.mode?(Yl=(r=Yl)||null!==n.memoizedState,pu(e,t,n),Yl=r):pu(e,t,n);break;default:pu(e,t,n)}}function mu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Jl),t.forEach((function(t){var r=Ns.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function vu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var o=e,l=t,u=l;e:for(;null!==u;){switch(u.tag){case 5:fu=u.stateNode,du=!1;break e;case 3:case 4:fu=u.stateNode.containerInfo,du=!0;break e}u=u.return}if(null===fu)throw Error(i(160));hu(o,l,a),fu=null,du=!1;var s=a.alternate;null!==s&&(s.return=null),a.return=null}catch(e){Cs(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(vu(t,e),yu(e),4&r){try{ru(3,e,e.return),au(3,e)}catch(t){Cs(e,e.return,t)}try{ru(5,e,e.return)}catch(t){Cs(e,e.return,t)}}break;case 1:vu(t,e),yu(e),512&r&&null!==n&&eu(n,n.return);break;case 5:if(vu(t,e),yu(e),512&r&&null!==n&&eu(n,n.return),32&e.flags){var a=e.stateNode;try{pe(a,"")}catch(t){Cs(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,l=null!==n?n.memoizedProps:o,u=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===u&&"radio"===o.type&&null!=o.name&&J(a,o),we(u,l);var c=we(u,o);for(l=0;l<s.length;l+=2){var f=s[l],d=s[l+1];"style"===f?ge(a,d):"dangerouslySetInnerHTML"===f?de(a,d):"children"===f?pe(a,d):w(a,f,d,c)}switch(u){case"input":Z(a,o);break;case"textarea":ie(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var h=o.value;null!=h?re(a,!!o.multiple,h,!1):p!==!!o.multiple&&(null!=o.defaultValue?re(a,!!o.multiple,o.defaultValue,!0):re(a,!!o.multiple,o.multiple?[]:"",!1))}a[ha]=o}catch(t){Cs(e,e.return,t)}}break;case 6:if(vu(t,e),yu(e),4&r){if(null===e.stateNode)throw Error(i(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(t){Cs(e,e.return,t)}}break;case 3:if(vu(t,e),yu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Wt(t.containerInfo)}catch(t){Cs(e,e.return,t)}break;case 4:default:vu(t,e),yu(e);break;case 13:vu(t,e),yu(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Vu=Je())),4&r&&mu(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(Yl=(c=Yl)||f,vu(t,e),Yl=c):vu(t,e),yu(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&0!=(1&e.mode))for(Zl=e,f=e.child;null!==f;){for(d=Zl=f;null!==Zl;){switch(h=(p=Zl).child,p.tag){case 0:case 11:case 14:case 15:ru(4,p,p.return);break;case 1:eu(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){Cs(r,n,e)}}break;case 5:eu(p,p.return);break;case 22:if(null!==p.memoizedState){Eu(d);continue}}null!==h?(h.return=p,Zl=h):Eu(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,c?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=d.stateNode,l=null!=(s=d.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,u.style.display=ve("display",l))}catch(t){Cs(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(t){Cs(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:vu(t,e),yu(e),4&r&&mu(e);case 21:}}function yu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(lu(n)){var r=n;break e}n=n.return}throw Error(i(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(pe(a,""),r.flags&=-33),cu(e,uu(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;su(e,uu(e),o);break;default:throw Error(i(161))}}catch(t){Cs(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bu(e,t,n){Zl=e,wu(e,t,n)}function wu(e,t,n){for(var r=0!=(1&e.mode);null!==Zl;){var a=Zl,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Xl;if(!i){var l=a.alternate,u=null!==l&&null!==l.memoizedState||Yl;l=Xl;var s=Yl;if(Xl=i,(Yl=u)&&!s)for(Zl=a;null!==Zl;)u=(i=Zl).child,22===i.tag&&null!==i.memoizedState?xu(a):null!==u?(u.return=i,Zl=u):xu(a);for(;null!==o;)Zl=o,wu(o,t,n),o=o.sibling;Zl=a,Xl=l,Yl=s}ku(e)}else 0!=(8772&a.subtreeFlags)&&null!==o?(o.return=a,Zl=o):ku(e)}}function ku(e){for(;null!==Zl;){var t=Zl;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Yl||au(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Yl)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:yo(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Uo(t,o,r);break;case 3:var l=t.updateQueue;if(null!==l){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Uo(t,l,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var s=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&n.focus();break;case"img":s.src&&(n.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Wt(d)}}}break;default:throw Error(i(163))}Yl||512&t.flags&&ou(t)}catch(e){Cs(t,t.return,e)}}if(t===e){Zl=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zl=n;break}Zl=t.return}}function Eu(e){for(;null!==Zl;){var t=Zl;if(t===e){Zl=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zl=n;break}Zl=t.return}}function xu(e){for(;null!==Zl;){var t=Zl;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{au(4,t)}catch(e){Cs(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Cs(t,a,e)}}var o=t.return;try{ou(t)}catch(e){Cs(t,o,e)}break;case 5:var i=t.return;try{ou(t)}catch(e){Cs(t,i,e)}}}catch(e){Cs(t,t.return,e)}if(t===e){Zl=null;break}var l=t.sibling;if(null!==l){l.return=t.return,Zl=l;break}Zl=t.return}}var Su,Cu=Math.ceil,Pu=k.ReactCurrentDispatcher,_u=k.ReactCurrentOwner,Tu=k.ReactCurrentBatchConfig,Nu=0,Ou=null,Au=null,Du=0,Lu=0,Ru=Ca(0),Iu=0,zu=null,Mu=0,Fu=0,ju=0,Uu=null,Bu=null,Vu=0,Wu=1/0,Hu=null,$u=!1,qu=null,Qu=null,Ku=!1,Gu=null,Xu=0,Yu=0,Ju=null,Zu=-1,es=0;function ts(){return 0!=(6&Nu)?Je():-1!==Zu?Zu:Zu=Je()}function ns(e){return 0==(1&e.mode)?1:0!=(2&Nu)&&0!==Du?Du&-Du:null!==go.transition?(0===es&&(es=vt()),es):0!==(e=wt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function rs(e,t,n,r){if(50<Yu)throw Yu=0,Ju=null,Error(i(185));yt(e,n,r),0!=(2&Nu)&&e===Ou||(e===Ou&&(0==(2&Nu)&&(Fu|=n),4===Iu&&us(e,Du)),as(e,r),1===n&&0===Nu&&0==(1&t.mode)&&(Wu=Je()+500,Ua&&Wa()))}function as(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-lt(o),l=1<<i,u=a[i];-1===u?0!=(l&n)&&0==(l&r)||(a[i]=ht(l,t)):u<=t&&(e.expiredLanes|=l),o&=~l}}(e,t);var r=pt(e,e===Ou?Du:0);if(0===r)null!==n&&Ge(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ge(n),1===t)0===e.tag?function(e){Ua=!0,Va(e)}(ss.bind(null,e)):Va(ss.bind(null,e)),la((function(){0==(6&Nu)&&Wa()})),n=null;else{switch(kt(r)){case 1:n=et;break;case 4:n=tt;break;case 16:default:n=nt;break;case 536870912:n=at}n=Os(n,os.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function os(e,t){if(Zu=-1,es=0,0!=(6&Nu))throw Error(i(327));var n=e.callbackNode;if(xs()&&e.callbackNode!==n)return null;var r=pt(e,e===Ou?Du:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=gs(e,r);else{t=r;var a=Nu;Nu|=2;var o=ms();for(Ou===e&&Du===t||(Hu=null,Wu=Je()+500,ps(e,t));;)try{bs();break}catch(t){hs(e,t)}xo(),Pu.current=o,Nu=a,null!==Au?t=0:(Ou=null,Du=0,t=Iu)}if(0!==t){if(2===t&&0!==(a=mt(e))&&(r=a,t=is(e,a)),1===t)throw n=zu,ps(e,0),us(e,r),as(e,Je()),n;if(6===t)us(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!ur(o(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gs(e,r))&&0!==(o=mt(e))&&(r=o,t=is(e,o)),1===t))throw n=zu,ps(e,0),us(e,r),as(e,Je()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(i(345));case 2:case 5:Es(e,Bu,Hu);break;case 3:if(us(e,r),(130023424&r)===r&&10<(t=Vu+500-Je())){if(0!==pt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ts(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=aa(Es.bind(null,e,Bu,Hu),t);break}Es(e,Bu,Hu);break;case 4:if(us(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var l=31-lt(r);o=1<<l,(l=t[l])>a&&(a=l),r&=~o}if(r=a,10<(r=(120>(r=Je()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cu(r/1960))-r)){e.timeoutHandle=aa(Es.bind(null,e,Bu,Hu),r);break}Es(e,Bu,Hu);break;default:throw Error(i(329))}}}return as(e,Je()),e.callbackNode===n?os.bind(null,e):null}function is(e,t){var n=Uu;return e.current.memoizedState.isDehydrated&&(ps(e,t).flags|=256),2!==(e=gs(e,t))&&(t=Bu,Bu=n,null!==t&&ls(t)),e}function ls(e){null===Bu?Bu=e:Bu.push.apply(Bu,e)}function us(e,t){for(t&=~ju,t&=~Fu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-lt(t),r=1<<n;e[n]=-1,t&=~r}}function ss(e){if(0!=(6&Nu))throw Error(i(327));xs();var t=pt(e,0);if(0==(1&t))return as(e,Je()),null;var n=gs(e,t);if(0!==e.tag&&2===n){var r=mt(e);0!==r&&(t=r,n=is(e,r))}if(1===n)throw n=zu,ps(e,0),us(e,t),as(e,Je()),n;if(6===n)throw Error(i(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Es(e,Bu,Hu),as(e,Je()),null}function cs(e,t){var n=Nu;Nu|=1;try{return e(t)}finally{0===(Nu=n)&&(Wu=Je()+500,Ua&&Wa())}}function fs(e){null!==Gu&&0===Gu.tag&&0==(6&Nu)&&xs();var t=Nu;Nu|=1;var n=Tu.transition,r=wt;try{if(Tu.transition=null,wt=1,e)return e()}finally{wt=r,Tu.transition=n,0==(6&(Nu=t))&&Wa()}}function ds(){Lu=Ru.current,Pa(Ru)}function ps(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,oa(n)),null!==Au)for(n=Au.return;null!==n;){var r=n;switch(no(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ra();break;case 3:ii(),Pa(Oa),Pa(Na),di();break;case 5:ui(r);break;case 4:ii();break;case 13:case 19:Pa(si);break;case 10:So(r.type._context);break;case 22:case 23:ds()}n=n.return}if(Ou=e,Au=e=Rs(e.current,null),Du=Lu=t,Iu=0,zu=null,ju=Fu=Mu=0,Bu=Uu=null,null!==To){for(t=0;t<To.length;t++)if(null!==(r=(n=To[t]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}n.pending=r}To=null}return e}function hs(e,t){for(;;){var n=Au;try{if(xo(),pi.current=ll,bi){for(var a=vi.memoizedState;null!==a;){var o=a.queue;null!==o&&(o.pending=null),a=a.next}bi=!1}if(mi=0,yi=gi=vi=null,wi=!1,ki=0,_u.current=null,null===n||null===n.return){Iu=1,zu=t,Au=null;break}e:{var l=e,u=n.return,s=n,c=t;if(t=Du,s.flags|=32768,null!==c&&"object"===r(c)&&"function"==typeof c.then){var f=c,d=s,p=d.tag;if(0==(1&d.mode)&&(0===p||11===p||15===p)){var h=d.alternate;h?(d.updateQueue=h.updateQueue,d.memoizedState=h.memoizedState,d.lanes=h.lanes):(d.updateQueue=null,d.memoizedState=null)}var m=yl(u);if(null!==m){m.flags&=-257,bl(m,u,s,0,t),1&m.mode&&gl(l,f,t),c=f;var v=(t=m).updateQueue;if(null===v){var g=new Set;g.add(c),t.updateQueue=g}else v.add(c);break e}if(0==(1&t)){gl(l,f,t),vs();break e}c=Error(i(426))}else if(oo&&1&s.mode){var y=yl(u);if(null!==y){0==(65536&y.flags)&&(y.flags|=256),bl(y,u,s,0,t),vo(fl(c,s));break e}}l=c=fl(c,s),4!==Iu&&(Iu=2),null===Uu?Uu=[l]:Uu.push(l),l=u;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,Fo(l,ml(0,c,t));break e;case 1:s=c;var b=l.type,w=l.stateNode;if(0==(128&l.flags)&&("function"==typeof b.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Qu||!Qu.has(w)))){l.flags|=65536,t&=-t,l.lanes|=t,Fo(l,vl(l,s,t));break e}}l=l.return}while(null!==l)}ks(n)}catch(e){t=e,Au===n&&null!==n&&(Au=n=n.return);continue}break}}function ms(){var e=Pu.current;return Pu.current=ll,null===e?ll:e}function vs(){0!==Iu&&3!==Iu&&2!==Iu||(Iu=4),null===Ou||0==(268435455&Mu)&&0==(268435455&Fu)||us(Ou,Du)}function gs(e,t){var n=Nu;Nu|=2;var r=ms();for(Ou===e&&Du===t||(Hu=null,ps(e,t));;)try{ys();break}catch(t){hs(e,t)}if(xo(),Nu=n,Pu.current=r,null!==Au)throw Error(i(261));return Ou=null,Du=0,Iu}function ys(){for(;null!==Au;)ws(Au)}function bs(){for(;null!==Au&&!Xe();)ws(Au)}function ws(e){var t=Su(e.alternate,e,Lu);e.memoizedProps=e.pendingProps,null===t?ks(e):Au=t,_u.current=null}function ks(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Kl(n,t,Lu)))return void(Au=n)}else{if(null!==(n=Gl(n,t)))return n.flags&=32767,void(Au=n);if(null===e)return Iu=6,void(Au=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Au=t);Au=t=e}while(null!==t);0===Iu&&(Iu=5)}function Es(e,t,n){var r=wt,a=Tu.transition;try{Tu.transition=null,wt=1,function(e,t,n,r){do{xs()}while(null!==Gu);if(0!=(6&Nu))throw Error(i(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(i(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-lt(n),o=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~o}}(e,o),e===Ou&&(Au=Ou=null,Du=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Ku||(Ku=!0,Os(nt,(function(){return xs(),null}))),o=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||o){o=Tu.transition,Tu.transition=null;var l=wt;wt=1;var u=Nu;Nu|=4,_u.current=null,function(e,t){if(ta=$t,hr(e=pr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(e){n=null;break e}var l=0,u=-1,s=-1,c=0,f=0,d=e,p=null;t:for(;;){for(var h;d!==n||0!==a&&3!==d.nodeType||(u=l+a),d!==o||0!==r&&3!==d.nodeType||(s=l+r),3===d.nodeType&&(l+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break t;if(p===n&&++c===a&&(u=l),p===o&&++f===r&&(s=l),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}n=-1===u||-1===s?null:{start:u,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(na={focusedElem:e,selectionRange:n},$t=!1,Zl=t;null!==Zl;)if(e=(t=Zl).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Zl=e;else for(;null!==Zl;){t=Zl;try{var m=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var v=m.memoizedProps,g=m.memoizedState,y=t.stateNode,b=y.getSnapshotBeforeUpdate(t.elementType===t.type?v:yo(t.type,v),g);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(i(163))}}catch(e){Cs(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Zl=e;break}Zl=t.return}m=nu,nu=!1}(e,n),gu(n,e),mr(na),$t=!!ta,na=ta=null,e.current=n,bu(n,e,a),Ye(),Nu=u,wt=l,Tu.transition=o}else e.current=n;if(Ku&&(Ku=!1,Gu=e,Xu=a),0===(o=e.pendingLanes)&&(Qu=null),function(e){if(it&&"function"==typeof it.onCommitFiberRoot)try{it.onCommitFiberRoot(ot,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),as(e,Je()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if($u)throw $u=!1,e=qu,qu=null,e;0!=(1&Xu)&&0!==e.tag&&xs(),0!=(1&(o=e.pendingLanes))?e===Ju?Yu++:(Yu=0,Ju=e):Yu=0,Wa()}(e,t,n,r)}finally{Tu.transition=a,wt=r}return null}function xs(){if(null!==Gu){var e=kt(Xu),t=Tu.transition,n=wt;try{if(Tu.transition=null,wt=16>e?16:e,null===Gu)var r=!1;else{if(e=Gu,Gu=null,Xu=0,0!=(6&Nu))throw Error(i(331));var a=Nu;for(Nu|=4,Zl=e.current;null!==Zl;){var o=Zl,l=o.child;if(0!=(16&Zl.flags)){var u=o.deletions;if(null!==u){for(var s=0;s<u.length;s++){var c=u[s];for(Zl=c;null!==Zl;){var f=Zl;switch(f.tag){case 0:case 11:case 15:ru(8,f,o)}var d=f.child;if(null!==d)d.return=f,Zl=d;else for(;null!==Zl;){var p=(f=Zl).sibling,h=f.return;if(iu(f),f===c){Zl=null;break}if(null!==p){p.return=h,Zl=p;break}Zl=h}}}var m=o.alternate;if(null!==m){var v=m.child;if(null!==v){m.child=null;do{var g=v.sibling;v.sibling=null,v=g}while(null!==v)}}Zl=o}}if(0!=(2064&o.subtreeFlags)&&null!==l)l.return=o,Zl=l;else e:for(;null!==Zl;){if(0!=(2048&(o=Zl).flags))switch(o.tag){case 0:case 11:case 15:ru(9,o,o.return)}var y=o.sibling;if(null!==y){y.return=o.return,Zl=y;break e}Zl=o.return}}var b=e.current;for(Zl=b;null!==Zl;){var w=(l=Zl).child;if(0!=(2064&l.subtreeFlags)&&null!==w)w.return=l,Zl=w;else e:for(l=b;null!==Zl;){if(0!=(2048&(u=Zl).flags))try{switch(u.tag){case 0:case 11:case 15:au(9,u)}}catch(e){Cs(u,u.return,e)}if(u===l){Zl=null;break e}var k=u.sibling;if(null!==k){k.return=u.return,Zl=k;break e}Zl=u.return}}if(Nu=a,Wa(),it&&"function"==typeof it.onPostCommitFiberRoot)try{it.onPostCommitFiberRoot(ot,e)}catch(e){}r=!0}return r}finally{wt=n,Tu.transition=t}}return!1}function Ss(e,t,n){e=zo(e,t=ml(0,t=fl(n,t),1),1),t=ts(),null!==e&&(yt(e,1,t),as(e,t))}function Cs(e,t,n){if(3===e.tag)Ss(e,e,n);else for(;null!==t;){if(3===t.tag){Ss(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qu||!Qu.has(r))){t=zo(t,e=vl(t,e=fl(n,e),1),1),e=ts(),null!==t&&(yt(t,1,e),as(t,e));break}}t=t.return}}function Ps(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ts(),e.pingedLanes|=e.suspendedLanes&n,Ou===e&&(Du&n)===n&&(4===Iu||3===Iu&&(130023424&Du)===Du&&500>Je()-Vu?ps(e,0):ju|=n),as(e,t)}function _s(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ft,0==(130023424&(ft<<=1))&&(ft=4194304)));var n=ts();null!==(e=Ao(e,t))&&(yt(e,t,n),as(e,n))}function Ts(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),_s(e,n)}function Ns(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(i(314))}null!==r&&r.delete(t),_s(e,n)}function Os(e,t){return Ke(e,t)}function As(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ds(e,t,n,r){return new As(e,t,n,r)}function Ls(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Rs(e,t){var n=e.alternate;return null===n?((n=Ds(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Is(e,t,n,a,o,l){var u=2;if(a=e,"function"==typeof e)Ls(e)&&(u=1);else if("string"==typeof e)u=5;else e:switch(e){case S:return zs(n.children,o,l,t);case C:u=8,o|=8;break;case P:return(e=Ds(12,n,t,2|o)).elementType=P,e.lanes=l,e;case O:return(e=Ds(13,n,t,o)).elementType=O,e.lanes=l,e;case A:return(e=Ds(19,n,t,o)).elementType=A,e.lanes=l,e;case R:return Ms(n,o,l,t);default:if("object"===r(e)&&null!==e)switch(e.$$typeof){case _:u=10;break e;case T:u=9;break e;case N:u=11;break e;case D:u=14;break e;case L:u=16,a=null;break e}throw Error(i(130,null==e?e:r(e),""))}return(t=Ds(u,n,t,o)).elementType=e,t.type=a,t.lanes=l,t}function zs(e,t,n,r){return(e=Ds(7,e,r,t)).lanes=n,e}function Ms(e,t,n,r){return(e=Ds(22,e,r,t)).elementType=R,e.lanes=n,e.stateNode={isHidden:!1},e}function Fs(e,t,n){return(e=Ds(6,e,null,t)).lanes=n,e}function js(e,t,n){return(t=Ds(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Us(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Bs(e,t,n,r,a,o,i,l,u){return e=new Us(e,t,n,l,u),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Ds(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Lo(o),e}function Vs(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:x,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ws(e){if(!e)return Ta;e:{if(We(e=e._reactInternals)!==e||1!==e.tag)throw Error(i(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(La(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(i(171))}if(1===e.tag){var n=e.type;if(La(n))return za(e,n,t)}return t}function Hs(e,t,n,r,a,o,i,l,u){return(e=Bs(n,r,!0,e,0,o,0,l,u)).context=Ws(null),n=e.current,(o=Io(r=ts(),a=ns(n))).callback=null!=t?t:null,zo(n,o,a),e.current.lanes=a,yt(e,a,r),as(e,r),e}function $s(e,t,n,r){var a=t.current,o=ts(),i=ns(a);return n=Ws(n),null===t.context?t.context=n:t.pendingContext=n,(t=Io(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=zo(a,t,i))&&(rs(e,a,i,o),Mo(e,a,i)),i}function qs(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Qs(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ks(e,t){Qs(e,t),(e=e.alternate)&&Qs(e,t)}Su=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Oa.current)kl=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return kl=!1,function(e,t,n){switch(t.tag){case 3:Al(t),mo();break;case 5:li(t);break;case 1:La(t.type)&&Ma(t);break;case 4:oi(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;_a(bo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(_a(si,1&si.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Fl(e,t,n):(_a(si,1&si.current),null!==(e=$l(e,t,n))?e.sibling:null);_a(si,1&si.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Wl(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),_a(si,si.current),r)break;return null;case 22:case 23:return t.lanes=0,Pl(e,t,n)}return $l(e,t,n)}(e,t,n);kl=0!=(131072&e.flags)}else kl=!1,oo&&0!=(1048576&t.flags)&&eo(t,Qa,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Hl(e,t),e=t.pendingProps;var o=Da(t,Na.current);Po(t,n),o=Ci(null,t,a,e,o,n);var l=Pi();return t.flags|=1,"object"===r(o)&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,La(a)?(l=!0,Ma(t)):l=!1,t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,Lo(t),o.updater=Wo,t.stateNode=o,o._reactInternals=t,Qo(t,a,e,n),t=Ol(null,t,a,!0,l,n)):(t.tag=0,oo&&l&&to(t),El(null,t,o,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Hl(e,t),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Ls(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===D)return 14}return 2}(a),e=yo(a,e),o){case 0:t=Tl(null,t,a,e,n);break e;case 1:t=Nl(null,t,a,e,n);break e;case 11:t=xl(null,t,a,e,n);break e;case 14:t=Sl(null,t,a,yo(a.type,e),n);break e}throw Error(i(306,a,""))}return t;case 0:return a=t.type,o=t.pendingProps,Tl(e,t,a,o=t.elementType===a?o:yo(a,o),n);case 1:return a=t.type,o=t.pendingProps,Nl(e,t,a,o=t.elementType===a?o:yo(a,o),n);case 3:e:{if(Al(t),null===e)throw Error(i(387));a=t.pendingProps,o=(l=t.memoizedState).element,Ro(e,t),jo(t,a,null,n);var u=t.memoizedState;if(a=u.element,l.isDehydrated){if(l={element:a,isDehydrated:!1,cache:u.cache,pendingSuspenseBoundaries:u.pendingSuspenseBoundaries,transitions:u.transitions},t.updateQueue.baseState=l,t.memoizedState=l,256&t.flags){t=Dl(e,t,a,n,o=fl(Error(i(423)),t));break e}if(a!==o){t=Dl(e,t,a,n,o=fl(Error(i(424)),t));break e}for(ao=ca(t.stateNode.containerInfo.firstChild),ro=t,oo=!0,io=null,n=Zo(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(mo(),a===o){t=$l(e,t,n);break e}El(e,t,a,n)}t=t.child}return t;case 5:return li(t),null===e&&co(t),a=t.type,o=t.pendingProps,l=null!==e?e.memoizedProps:null,u=o.children,ra(a,o)?u=null:null!==l&&ra(a,l)&&(t.flags|=32),_l(e,t),El(e,t,u,n),t.child;case 6:return null===e&&co(t),null;case 13:return Fl(e,t,n);case 4:return oi(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Jo(t,null,a,n):El(e,t,a,n),t.child;case 11:return a=t.type,o=t.pendingProps,xl(e,t,a,o=t.elementType===a?o:yo(a,o),n);case 7:return El(e,t,t.pendingProps,n),t.child;case 8:case 12:return El(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,o=t.pendingProps,l=t.memoizedProps,u=o.value,_a(bo,a._currentValue),a._currentValue=u,null!==l)if(ur(l.value,u)){if(l.children===o.children&&!Oa.current){t=$l(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var s=l.dependencies;if(null!==s){u=l.child;for(var c=s.firstContext;null!==c;){if(c.context===a){if(1===l.tag){(c=Io(-1,n&-n)).tag=2;var f=l.updateQueue;if(null!==f){var d=(f=f.shared).pending;null===d?c.next=c:(c.next=d.next,d.next=c),f.pending=c}}l.lanes|=n,null!==(c=l.alternate)&&(c.lanes|=n),Co(l.return,n,t),s.lanes|=n;break}c=c.next}}else if(10===l.tag)u=l.type===t.type?null:l.child;else if(18===l.tag){if(null===(u=l.return))throw Error(i(341));u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),Co(u,n,t),u=l.sibling}else u=l.child;if(null!==u)u.return=l;else for(u=l;null!==u;){if(u===t){u=null;break}if(null!==(l=u.sibling)){l.return=u.return,u=l;break}u=u.return}l=u}El(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,a=t.pendingProps.children,Po(t,n),a=a(o=_o(o)),t.flags|=1,El(e,t,a,n),t.child;case 14:return o=yo(a=t.type,t.pendingProps),Sl(e,t,a,o=yo(a.type,o),n);case 15:return Cl(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,o=t.pendingProps,o=t.elementType===a?o:yo(a,o),Hl(e,t),t.tag=1,La(a)?(e=!0,Ma(t)):e=!1,Po(t,n),$o(t,a,o),Qo(t,a,o,n),Ol(null,t,a,!0,e,n);case 19:return Wl(e,t,n);case 22:return Pl(e,t,n)}throw Error(i(156,t.tag))};var Gs="function"==typeof reportError?reportError:function(e){console.error(e)};function Xs(e){this._internalRoot=e}function Ys(e){this._internalRoot=e}function Js(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(){}function tc(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o;if("function"==typeof a){var l=a;a=function(){var e=qs(i);l.call(e)}}$s(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=qs(i);o.call(e)}}var i=Hs(t,r,e,0,null,!1,0,"",ec);return e._reactRootContainer=i,e[ma]=i.current,Wr(8===e.nodeType?e.parentNode:e),fs(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var l=r;r=function(){var e=qs(u);l.call(e)}}var u=Bs(e,0,!1,null,0,!1,0,"",ec);return e._reactRootContainer=u,e[ma]=u.current,Wr(8===e.nodeType?e.parentNode:e),fs((function(){$s(t,u,n,r)})),u}(n,t,e,a,r);return qs(i)}Ys.prototype.render=Xs.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(i(409));$s(e,t,null,null)},Ys.prototype.unmount=Xs.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;fs((function(){$s(null,e,null,null)})),t[ma]=null}},Ys.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Rt.length&&0!==t&&t<Rt[n].priority;n++);Rt.splice(n,0,e),0===n&&Ft(e)}},Et=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),as(t,Je()),0==(6&Nu)&&(Wu=Je()+500,Wa()))}break;case 13:fs((function(){var t=Ao(e,1);if(null!==t){var n=ts();rs(t,e,1,n)}})),Ks(e,1)}},xt=function(e){if(13===e.tag){var t=Ao(e,134217728);null!==t&&rs(t,e,134217728,ts()),Ks(e,134217728)}},St=function(e){if(13===e.tag){var t=ns(e),n=Ao(e,t);null!==n&&rs(n,e,t,ts()),Ks(e,t)}},Ct=function(){return wt},Pt=function(e,t){var n=wt;try{return wt=e,t()}finally{wt=n}},xe=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=Ea(r);if(!a)throw Error(i(90));K(r),Z(r,a)}}}break;case"textarea":ie(e,n);break;case"select":null!=(t=n.value)&&re(e,!!n.multiple,t,!1)}},Ne=cs,Oe=fs;var nc={usingClientEntryPoint:!1,Events:[wa,ka,Ea,_e,Te,cs]},rc={findFiberByHostInstance:ba,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},ac={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=qe(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var oc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!oc.isDisabled&&oc.supportsFiber)try{ot=oc.inject(ac),it=oc}catch(fe){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Js(t))throw Error(i(200));return Vs(e,t,null,n)},t.createRoot=function(e,t){if(!Js(e))throw Error(i(299));var n=!1,r="",a=Gs;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Bs(e,1,!1,null,0,n,0,r,a),e[ma]=t.current,Wr(8===e.nodeType?e.parentNode:e),new Xs(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(i(188));throw e=Object.keys(e).join(","),Error(i(268,e))}return null===(e=qe(t))?null:e.stateNode},t.flushSync=function(e){return fs(e)},t.hydrate=function(e,t,n){if(!Zs(t))throw Error(i(200));return tc(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Js(e))throw Error(i(405));var r=null!=n&&n.hydratedSources||null,a=!1,o="",l=Gs;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),t=Hs(t,null,e,1,null!=n?n:null,a,0,o,l),e[ma]=t.current,Wr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Ys(t)},t.render=function(e,t,n){if(!Zs(t))throw Error(i(200));return tc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zs(e))throw Error(i(40));return!!e._reactRootContainer&&(fs((function(){tc(null,null,e,!1,(function(){e._reactRootContainer=null,e[ma]=null}))})),!0)},t.unstable_batchedUpdates=cs,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zs(n))throw Error(i(200));if(null==e||void 0===e._reactInternals)throw Error(i(38));return tc(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},7769:(e,t,n)=>{"use strict";var r=n(6796);t.s=r.createRoot,r.hydrateRoot},6796:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(1730)},1897:(e,t,n)=>{"use strict";function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function a(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}Object.defineProperty(t,"__esModule",{value:!0});var o={};["children","dangerouslySetInnerHTML","defaultValue","defaultChecked","innerHTML","suppressContentEditableWarning","suppressHydrationWarning","style"].forEach((function(e){o[e]=new a(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t,n,i=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o=[],i=!0,l=!1;try{for(n=n.call(e);!(i=(r=n.next()).done)&&(o.push(r.value),!t||o.length!==t);i=!0);}catch(e){l=!0,a=e}finally{try{i||null==n.return||n.return()}finally{if(l)throw a}}return o}}(t,n)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=i[0],u=i[1];o[l]=new a(l,1,!1,u,null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){o[e]=new a(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){o[e]=new a(e,2,!1,e,null,!1,!1)})),["allowFullScreen","async","autoFocus","autoPlay","controls","default","defer","disabled","disablePictureInPicture","disableRemotePlayback","formNoValidate","hidden","loop","noModule","noValidate","open","playsInline","readOnly","required","reversed","scoped","seamless","itemScope"].forEach((function(e){o[e]=new a(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){o[e]=new a(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){o[e]=new a(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){o[e]=new a(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){o[e]=new a(e,5,!1,e.toLowerCase(),null,!1,!1)}));var i=/[\-\:]([a-z])/g,l=function(e){return e[1].toUpperCase()};["accent-height","alignment-baseline","arabic-form","baseline-shift","cap-height","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-name","glyph-orientation-horizontal","glyph-orientation-vertical","horiz-adv-x","horiz-origin-x","image-rendering","letter-spacing","lighting-color","marker-end","marker-mid","marker-start","overline-position","overline-thickness","paint-order","panose-1","pointer-events","rendering-intent","shape-rendering","stop-color","stop-opacity","strikethrough-position","strikethrough-thickness","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","underline-position","underline-thickness","unicode-bidi","unicode-range","units-per-em","v-alphabetic","v-hanging","v-ideographic","v-mathematical","vector-effect","vert-adv-y","vert-origin-x","vert-origin-y","word-spacing","writing-mode","xmlns:xlink","x-height"].forEach((function(e){var t=e.replace(i,l);o[t]=new a(t,1,!1,e,null,!1,!1)})),["xlink:actuate","xlink:arcrole","xlink:role","xlink:show","xlink:title","xlink:type"].forEach((function(e){var t=e.replace(i,l);o[t]=new a(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(i,l);o[t]=new a(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){o[e]=new a(e,1,!1,e.toLowerCase(),null,!1,!1)})),o.xlinkHref=new a("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){o[e]=new a(e,1,!1,e.toLowerCase(),null,!0,!0)}));var u=n(8088),s=u.CAMELCASE,c=u.SAME,f=u.possibleStandardNames,d=RegExp.prototype.test.bind(new RegExp("^(data|aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$")),p=Object.keys(f).reduce((function(e,t){var n=f[t];return n===c?e[t]=t:n===s?e[t.toLowerCase()]=t:e[t]=n,e}),{});t.BOOLEAN=3,t.BOOLEANISH_STRING=2,t.NUMERIC=5,t.OVERLOADED_BOOLEAN=4,t.POSITIVE_NUMERIC=6,t.RESERVED=0,t.STRING=1,t.getPropertyInfo=function(e){return o.hasOwnProperty(e)?o[e]:null},t.isCustomAttribute=d,t.possibleStandardNames=p},8088:(e,t)=>{t.SAME=0,t.CAMELCASE=1,t.possibleStandardNames={accept:0,acceptCharset:1,"accept-charset":"acceptCharset",accessKey:1,action:0,allowFullScreen:1,alt:0,as:0,async:0,autoCapitalize:1,autoComplete:1,autoCorrect:1,autoFocus:1,autoPlay:1,autoSave:1,capture:0,cellPadding:1,cellSpacing:1,challenge:0,charSet:1,checked:0,children:0,cite:0,class:"className",classID:1,className:1,cols:0,colSpan:1,content:0,contentEditable:1,contextMenu:1,controls:0,controlsList:1,coords:0,crossOrigin:1,dangerouslySetInnerHTML:1,data:0,dateTime:1,default:0,defaultChecked:1,defaultValue:1,defer:0,dir:0,disabled:0,disablePictureInPicture:1,disableRemotePlayback:1,download:0,draggable:0,encType:1,enterKeyHint:1,for:"htmlFor",form:0,formMethod:1,formAction:1,formEncType:1,formNoValidate:1,formTarget:1,frameBorder:1,headers:0,height:0,hidden:0,high:0,href:0,hrefLang:1,htmlFor:1,httpEquiv:1,"http-equiv":"httpEquiv",icon:0,id:0,innerHTML:1,inputMode:1,integrity:0,is:0,itemID:1,itemProp:1,itemRef:1,itemScope:1,itemType:1,keyParams:1,keyType:1,kind:0,label:0,lang:0,list:0,loop:0,low:0,manifest:0,marginWidth:1,marginHeight:1,max:0,maxLength:1,media:0,mediaGroup:1,method:0,min:0,minLength:1,multiple:0,muted:0,name:0,noModule:1,nonce:0,noValidate:1,open:0,optimum:0,pattern:0,placeholder:0,playsInline:1,poster:0,preload:0,profile:0,radioGroup:1,readOnly:1,referrerPolicy:1,rel:0,required:0,reversed:0,role:0,rows:0,rowSpan:1,sandbox:0,scope:0,scoped:0,scrolling:0,seamless:0,selected:0,shape:0,size:0,sizes:0,span:0,spellCheck:1,src:0,srcDoc:1,srcLang:1,srcSet:1,start:0,step:0,style:0,summary:0,tabIndex:1,target:0,title:0,type:0,useMap:1,value:0,width:0,wmode:0,wrap:0,about:0,accentHeight:1,"accent-height":"accentHeight",accumulate:0,additive:0,alignmentBaseline:1,"alignment-baseline":"alignmentBaseline",allowReorder:1,alphabetic:0,amplitude:0,arabicForm:1,"arabic-form":"arabicForm",ascent:0,attributeName:1,attributeType:1,autoReverse:1,azimuth:0,baseFrequency:1,baselineShift:1,"baseline-shift":"baselineShift",baseProfile:1,bbox:0,begin:0,bias:0,by:0,calcMode:1,capHeight:1,"cap-height":"capHeight",clip:0,clipPath:1,"clip-path":"clipPath",clipPathUnits:1,clipRule:1,"clip-rule":"clipRule",color:0,colorInterpolation:1,"color-interpolation":"colorInterpolation",colorInterpolationFilters:1,"color-interpolation-filters":"colorInterpolationFilters",colorProfile:1,"color-profile":"colorProfile",colorRendering:1,"color-rendering":"colorRendering",contentScriptType:1,contentStyleType:1,cursor:0,cx:0,cy:0,d:0,datatype:0,decelerate:0,descent:0,diffuseConstant:1,direction:0,display:0,divisor:0,dominantBaseline:1,"dominant-baseline":"dominantBaseline",dur:0,dx:0,dy:0,edgeMode:1,elevation:0,enableBackground:1,"enable-background":"enableBackground",end:0,exponent:0,externalResourcesRequired:1,fill:0,fillOpacity:1,"fill-opacity":"fillOpacity",fillRule:1,"fill-rule":"fillRule",filter:0,filterRes:1,filterUnits:1,floodOpacity:1,"flood-opacity":"floodOpacity",floodColor:1,"flood-color":"floodColor",focusable:0,fontFamily:1,"font-family":"fontFamily",fontSize:1,"font-size":"fontSize",fontSizeAdjust:1,"font-size-adjust":"fontSizeAdjust",fontStretch:1,"font-stretch":"fontStretch",fontStyle:1,"font-style":"fontStyle",fontVariant:1,"font-variant":"fontVariant",fontWeight:1,"font-weight":"fontWeight",format:0,from:0,fx:0,fy:0,g1:0,g2:0,glyphName:1,"glyph-name":"glyphName",glyphOrientationHorizontal:1,"glyph-orientation-horizontal":"glyphOrientationHorizontal",glyphOrientationVertical:1,"glyph-orientation-vertical":"glyphOrientationVertical",glyphRef:1,gradientTransform:1,gradientUnits:1,hanging:0,horizAdvX:1,"horiz-adv-x":"horizAdvX",horizOriginX:1,"horiz-origin-x":"horizOriginX",ideographic:0,imageRendering:1,"image-rendering":"imageRendering",in2:0,in:0,inlist:0,intercept:0,k1:0,k2:0,k3:0,k4:0,k:0,kernelMatrix:1,kernelUnitLength:1,kerning:0,keyPoints:1,keySplines:1,keyTimes:1,lengthAdjust:1,letterSpacing:1,"letter-spacing":"letterSpacing",lightingColor:1,"lighting-color":"lightingColor",limitingConeAngle:1,local:0,markerEnd:1,"marker-end":"markerEnd",markerHeight:1,markerMid:1,"marker-mid":"markerMid",markerStart:1,"marker-start":"markerStart",markerUnits:1,markerWidth:1,mask:0,maskContentUnits:1,maskUnits:1,mathematical:0,mode:0,numOctaves:1,offset:0,opacity:0,operator:0,order:0,orient:0,orientation:0,origin:0,overflow:0,overlinePosition:1,"overline-position":"overlinePosition",overlineThickness:1,"overline-thickness":"overlineThickness",paintOrder:1,"paint-order":"paintOrder",panose1:0,"panose-1":"panose1",pathLength:1,patternContentUnits:1,patternTransform:1,patternUnits:1,pointerEvents:1,"pointer-events":"pointerEvents",points:0,pointsAtX:1,pointsAtY:1,pointsAtZ:1,prefix:0,preserveAlpha:1,preserveAspectRatio:1,primitiveUnits:1,property:0,r:0,radius:0,refX:1,refY:1,renderingIntent:1,"rendering-intent":"renderingIntent",repeatCount:1,repeatDur:1,requiredExtensions:1,requiredFeatures:1,resource:0,restart:0,result:0,results:0,rotate:0,rx:0,ry:0,scale:0,security:0,seed:0,shapeRendering:1,"shape-rendering":"shapeRendering",slope:0,spacing:0,specularConstant:1,specularExponent:1,speed:0,spreadMethod:1,startOffset:1,stdDeviation:1,stemh:0,stemv:0,stitchTiles:1,stopColor:1,"stop-color":"stopColor",stopOpacity:1,"stop-opacity":"stopOpacity",strikethroughPosition:1,"strikethrough-position":"strikethroughPosition",strikethroughThickness:1,"strikethrough-thickness":"strikethroughThickness",string:0,stroke:0,strokeDasharray:1,"stroke-dasharray":"strokeDasharray",strokeDashoffset:1,"stroke-dashoffset":"strokeDashoffset",strokeLinecap:1,"stroke-linecap":"strokeLinecap",strokeLinejoin:1,"stroke-linejoin":"strokeLinejoin",strokeMiterlimit:1,"stroke-miterlimit":"strokeMiterlimit",strokeWidth:1,"stroke-width":"strokeWidth",strokeOpacity:1,"stroke-opacity":"strokeOpacity",suppressContentEditableWarning:1,suppressHydrationWarning:1,surfaceScale:1,systemLanguage:1,tableValues:1,targetX:1,targetY:1,textAnchor:1,"text-anchor":"textAnchor",textDecoration:1,"text-decoration":"textDecoration",textLength:1,textRendering:1,"text-rendering":"textRendering",to:0,transform:0,typeof:0,u1:0,u2:0,underlinePosition:1,"underline-position":"underlinePosition",underlineThickness:1,"underline-thickness":"underlineThickness",unicode:0,unicodeBidi:1,"unicode-bidi":"unicodeBidi",unicodeRange:1,"unicode-range":"unicodeRange",unitsPerEm:1,"units-per-em":"unitsPerEm",unselectable:0,vAlphabetic:1,"v-alphabetic":"vAlphabetic",values:0,vectorEffect:1,"vector-effect":"vectorEffect",version:0,vertAdvY:1,"vert-adv-y":"vertAdvY",vertOriginX:1,"vert-origin-x":"vertOriginX",vertOriginY:1,"vert-origin-y":"vertOriginY",vHanging:1,"v-hanging":"vHanging",vIdeographic:1,"v-ideographic":"vIdeographic",viewBox:1,viewTarget:1,visibility:0,vMathematical:1,"v-mathematical":"vMathematical",vocab:0,widths:0,wordSpacing:1,"word-spacing":"wordSpacing",writingMode:1,"writing-mode":"writingMode",x1:0,x2:0,x:0,xChannelSelector:1,xHeight:1,"x-height":"xHeight",xlinkActuate:1,"xlink:actuate":"xlinkActuate",xlinkArcrole:1,"xlink:arcrole":"xlinkArcrole",xlinkHref:1,"xlink:href":"xlinkHref",xlinkRole:1,"xlink:role":"xlinkRole",xlinkShow:1,"xlink:show":"xlinkShow",xlinkTitle:1,"xlink:title":"xlinkTitle",xlinkType:1,"xlink:type":"xlinkType",xmlBase:1,"xml:base":"xmlBase",xmlLang:1,"xml:lang":"xmlLang",xmlns:0,"xml:space":"xmlSpace",xmlnsXlink:1,"xmlns:xlink":"xmlnsXlink",xmlSpace:1,y1:0,y2:0,y:0,yChannelSelector:1,z:0,zoomAndPan:1}},2165:(e,t,n)=>{"use strict";var r=n(7537),a=Symbol.for("react.element"),o=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),u=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),c=Symbol.for("react.context"),f=Symbol.for("react.forward_ref"),d=Symbol.for("react.suspense"),p=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),m=Symbol.iterator,v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g=Object.assign,y={};function b(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||v}function w(){}function k(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||v}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!==r(e)&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=b.prototype;var E=k.prototype=new w;E.constructor=k,g(E,b.prototype),E.isPureReactComponent=!0;var x=Array.isArray,S=Object.prototype.hasOwnProperty,C={current:null},P={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,o={},i=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)S.call(t,r)&&!P.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:i,ref:l,props:o,_owner:C.current}}function T(e){return"object"===r(e)&&null!==e&&e.$$typeof===a}var N=/\/+/g;function O(e,t){return"object"===r(e)&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function A(e,t,n,i,l){var u=r(e);"undefined"!==u&&"boolean"!==u||(e=null);var s=!1;if(null===e)s=!0;else switch(u){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case a:case o:s=!0}}if(s)return l=l(s=e),e=""===i?"."+O(s,0):i,x(l)?(n="",null!=e&&(n=e.replace(N,"$&/")+"/"),A(l,t,n,"",(function(e){return e}))):null!=l&&(T(l)&&(l=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||s&&s.key===l.key?"":(""+l.key).replace(N,"$&/")+"/")+e)),t.push(l)),1;if(s=0,i=""===i?".":i+":",x(e))for(var c=0;c<e.length;c++){var f=i+O(u=e[c],c);s+=A(u,t,n,f,l)}else if(f=function(e){return null===e||"object"!==r(e)?null:"function"==typeof(e=m&&e[m]||e["@@iterator"])?e:null}(e),"function"==typeof f)for(e=f.call(e),c=0;!(u=e.next()).done;)s+=A(u=u.value,t,n,f=i+O(u,c++),l);else if("object"===u)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function D(e,t,n){if(null==e)return e;var r=[],a=0;return A(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function L(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},I={transition:null},z={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:I,ReactCurrentOwner:C};t.Children={map:D,forEach:function(e,t,n){D(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return D(e,(function(){t++})),t},toArray:function(e){return D(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=b,t.Fragment=i,t.Profiler=u,t.PureComponent=k,t.StrictMode=l,t.Suspense=d,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=z,t.cloneElement=function(e,t,n){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=g({},e.props),o=e.key,i=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,l=C.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)S.call(t,s)&&!P.hasOwnProperty(s)&&(r[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){u=Array(s);for(var c=0;c<s;c++)u[c]=arguments[c+2];r.children=u}return{$$typeof:a,type:e.type,key:o,ref:i,props:r,_owner:l}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:f,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=I.transition;I.transition={};try{e()}finally{I.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.2.0"},3745:(e,t,n)=>{"use strict";e.exports=n(2165)},6104:(e,t,n)=>{"use strict";var r=n(7537);function a(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<l(a,t)))break e;e[r]=t,e[n]=a,n=r}}function o(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var i=2*(r+1)-1,u=e[i],s=i+1,c=e[s];if(0>l(u,n))s<a&&0>l(c,u)?(e[r]=c,e[s]=n,r=s):(e[r]=u,e[i]=n,r=i);else{if(!(s<a&&0>l(c,n)))break e;e[r]=c,e[s]=n,r=s}}}return t}function l(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===("undefined"==typeof performance?"undefined":r(performance))&&"function"==typeof performance.now){var u=performance;t.unstable_now=function(){return u.now()}}else{var s=Date,c=s.now();t.unstable_now=function(){return s.now()-c}}var f=[],d=[],p=1,h=null,m=3,v=!1,g=!1,y=!1,b="function"==typeof setTimeout?setTimeout:null,w="function"==typeof clearTimeout?clearTimeout:null,k="undefined"!=typeof setImmediate?setImmediate:null;function E(e){for(var t=o(d);null!==t;){if(null===t.callback)i(d);else{if(!(t.startTime<=e))break;i(d),t.sortIndex=t.expirationTime,a(f,t)}t=o(d)}}function x(e){if(y=!1,E(e),!g)if(null!==o(f))g=!0,I(S);else{var t=o(d);null!==t&&z(x,t.startTime-e)}}function S(e,n){g=!1,y&&(y=!1,w(T),T=-1),v=!0;var r=m;try{for(E(n),h=o(f);null!==h&&(!(h.expirationTime>n)||e&&!A());){var a=h.callback;if("function"==typeof a){h.callback=null,m=h.priorityLevel;var l=a(h.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?h.callback=l:h===o(f)&&i(f),E(n)}else i(f);h=o(f)}if(null!==h)var u=!0;else{var s=o(d);null!==s&&z(x,s.startTime-n),u=!1}return u}finally{h=null,m=r,v=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var C,P=!1,_=null,T=-1,N=5,O=-1;function A(){return!(t.unstable_now()-O<N)}function D(){if(null!==_){var e=t.unstable_now();O=e;var n=!0;try{n=_(!0,e)}finally{n?C():(P=!1,_=null)}}else P=!1}if("function"==typeof k)C=function(){k(D)};else if("undefined"!=typeof MessageChannel){var L=new MessageChannel,R=L.port2;L.port1.onmessage=D,C=function(){R.postMessage(null)}}else C=function(){b(D,0)};function I(e){_=e,P||(P=!0,C())}function z(e,n){T=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){g||v||(g=!0,I(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):N=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return m},t.unstable_getFirstCallbackNode=function(){return o(f)},t.unstable_next=function(e){switch(m){case 1:case 2:case 3:var t=3;break;default:t=m}var n=m;m=t;try{return e()}finally{m=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=m;m=e;try{return t()}finally{m=n}},t.unstable_scheduleCallback=function(e,n,i){var l=t.unstable_now();switch(i="object"===r(i)&&null!==i&&"number"==typeof(i=i.delay)&&0<i?l+i:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:p++,callback:n,priorityLevel:e,startTime:i,expirationTime:u=i+u,sortIndex:-1},i>l?(e.sortIndex=i,a(d,e),null===o(f)&&e===o(d)&&(y?(w(T),T=-1):y=!0,z(x,i-l))):(e.sortIndex=u,a(f,e),g||v||(g=!0,I(S))),e},t.unstable_shouldYield=A,t.unstable_wrapCallback=function(e){var t=m;return function(){var n=m;m=t;try{return e.apply(this,arguments)}finally{m=n}}}},9409:(e,t,n)=>{"use strict";e.exports=n(6104)},6575:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};t.__esModule=!0;var a=r(n(4052)),o=n(3289);t.default=function(e,t){var n={};return e&&"string"==typeof e?((0,a.default)(e,(function(e,r){e&&r&&(n[(0,o.camelCase)(e,t)]=r)})),n):n}},3289:(e,t)=>{"use strict";t.__esModule=!0,t.camelCase=void 0;var n=/^--[a-zA-Z0-9-]+$/,r=/-([a-z])/g,a=/^[^-]+$/,o=/^-(webkit|moz|ms|o|khtml)-/,i=/^-(ms)-/,l=function(e,t){return t.toUpperCase()},u=function(e,t){return"".concat(t,"-")};t.camelCase=function(e,t){return void 0===t&&(t={}),function(e){return!e||a.test(e)||n.test(e)}(e)?e:(e=e.toLowerCase(),(e=t.reactCompat?e.replace(i,u):e.replace(o,u)).replace(r,l))}},4052:(e,t,n)=>{var r=n(9624);function a(e,t){var n,a=null;if(!e||"string"!=typeof e)return a;for(var o,i,l=r(e),u="function"==typeof t,s=0,c=l.length;s<c;s++)o=(n=l[s]).property,i=n.value,u?t(o,i,n):i&&(a||(a={}),a[o]=i);return a}e.exports=a,e.exports.default=a},191:(e,t,n)=>{var r=n(7537).default;function a(){"use strict";e.exports=a=function(){return t},e.exports.__esModule=!0,e.exports.default=e.exports;var t={},n=Object.prototype,o=n.hasOwnProperty,i=Object.defineProperty||function(e,t,n){e[t]=n.value},l="function"==typeof Symbol?Symbol:{},u=l.iterator||"@@iterator",s=l.asyncIterator||"@@asyncIterator",c=l.toStringTag||"@@toStringTag";function f(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{f({},"")}catch(e){f=function(e,t,n){return e[t]=n}}function d(e,t,n,r){var a=t&&t.prototype instanceof m?t:m,o=Object.create(a.prototype),l=new T(r||[]);return i(o,"_invoke",{value:S(e,n,l)}),o}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=d;var h={};function m(){}function v(){}function g(){}var y={};f(y,u,(function(){return this}));var b=Object.getPrototypeOf,w=b&&b(b(N([])));w&&w!==n&&o.call(w,u)&&(y=w);var k=g.prototype=m.prototype=Object.create(y);function E(e){["next","throw","return"].forEach((function(t){f(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function n(a,i,l,u){var s=p(e[a],e,i);if("throw"!==s.type){var c=s.arg,f=c.value;return f&&"object"==r(f)&&o.call(f,"__await")?t.resolve(f.__await).then((function(e){n("next",e,l,u)}),(function(e){n("throw",e,l,u)})):t.resolve(f).then((function(e){c.value=e,l(c)}),(function(e){return n("throw",e,l,u)}))}u(s.arg)}var a;i(this,"_invoke",{value:function(e,r){function o(){return new t((function(t,a){n(e,r,t,a)}))}return a=a?a.then(o,o):o()}})}function S(e,t,n){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return{value:void 0,done:!0}}for(n.method=a,n.arg=o;;){var i=n.delegate;if(i){var l=C(i,n);if(l){if(l===h)continue;return l}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var u=p(e,t,n);if("normal"===u.type){if(r=n.done?"completed":"suspendedYield",u.arg===h)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r="completed",n.method="throw",n.arg=u.arg)}}}function C(e,t){var n=t.method,r=e.iterator[n];if(void 0===r)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,C(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),h;var a=p(r,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,h;var o=a.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,h):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,h)}function P(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function _(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function T(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(P,this),this.reset(!0)}function N(e){if(e){var t=e[u];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,r=function t(){for(;++n<e.length;)if(o.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return r.next=r}}return{next:O}}function O(){return{value:void 0,done:!0}}return v.prototype=g,i(k,"constructor",{value:g,configurable:!0}),i(g,"constructor",{value:v,configurable:!0}),v.displayName=f(g,c,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,f(e,c,"GeneratorFunction")),e.prototype=Object.create(k),e},t.awrap=function(e){return{__await:e}},E(x.prototype),f(x.prototype,s,(function(){return this})),t.AsyncIterator=x,t.async=function(e,n,r,a,o){void 0===o&&(o=Promise);var i=new x(d(e,n,r,a),o);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},E(k),f(k,c,"Generator"),f(k,u,(function(){return this})),f(k,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=N,T.prototype={constructor:T,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(_),!e)for(var t in this)"t"===t.charAt(0)&&o.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r],i=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var l=o.call(a,"catchLoc"),u=o.call(a,"finallyLoc");if(l&&u){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(l){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&o.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var a=r;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,h):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),h},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),_(n),h}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;_(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:N(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),h}},t}e.exports=a,e.exports.__esModule=!0,e.exports.default=e.exports},7537:e=>{function t(n){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(n)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},6972:(e,t,n)=>{var r=n(7537),a=n(191)();e.exports=a;try{regeneratorRuntime=a}catch(e){"object"===("undefined"==typeof globalThis?"undefined":r(globalThis))?globalThis.regeneratorRuntime=a:Function("r","regeneratorRuntime = r")(a)}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(3745),t=n(7769);function r(e,t,n,r,a,o,i){try{var l=e[o](i),u=l.value}catch(e){return void n(e)}l.done?t(u):Promise.resolve(u).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,o){var i=e.apply(t,n);function l(e){r(i,a,o,l,u,"next",e)}function u(e){r(i,a,o,l,u,"throw",e)}l(void 0)}))}}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,o,i,l=[],u=!0,s=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){s=!0,a=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(s)throw a}}return l}}(e,t)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?o(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==l(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"===l(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s=n(6972),c=n.n(s);function f(t){var n=t.title,r=t.children;return e.createElement(e.Fragment,null,e.createElement("div",{className:"bm-setting-section"},e.createElement("div",{className:"bm-setting-section-header"},e.createElement("h3",null,n)),e.createElement("div",{className:"bm-setting-section-content"},r)))}function d(t){var n=t.tabs,r=t.activeTab,a=t.setActiveTab;return e.createElement("h2",{className:"nav-tab-wrapper"},n.map((function(t){return e.createElement("a",{key:t.slug,href:"#"+t.slug,onClick:function(){a(t.slug)},className:"nav-tab "+(t.slug===r&&" nav-tab-active")},t.label)})))}var p,h,m=window.wp.i18n,v=m.__,g=(m._n,m._nx,m._x),y=m.sprintf,b=n(8478),w=n.n(b);function k(t){var n=i((0,e.useState)(null),2),r=n[0],o=n[1];(0,e.useEffect)((function(){}),[]);var l=(0,e.useRef)(),u=function(){var e=a(c().mark((function e(n){var a;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n.preventDefault(),(a=new FormData).append("key",t.option),a.append("file",r),e.prev=4,e.next=7,p.request({method:"post",url:"app/uploadFile",data:a,headers:{"Content-Type":"multipart/form-data"}});case 7:e.sent,e.next=14;break;case 10:e.prev=10,e.t0=e.catch(4),console.error(e.t0),alert(e.t0.response.data.message);case 14:case"end":return e.stop()}}),e,null,[[4,10]])})));return function(t){return e.apply(this,arguments)}}();return e.createElement("div",{className:"bm-image-upload"},t.uploadedImage&&e.createElement("div",{className:"bm-image-holder",style:{width:t.width,height:t.height}},e.createElement("img",{src:"data:image/png;base64,"+t.uploadedImage,width:t.width,height:t.height})),e.createElement("div",{className:"bm-image-actions"},e.createElement("input",{ref:l,type:"file",accept:".png",onChange:function(e){o(e.target.files[0])}}),r&&e.createElement("button",{className:"button",onClick:u},g("Upload","WP Admin","bp-better-messages"))))}h={baseURL:Better_Messages_Admin.restUrl,headers:{"X-WP-Nonce":Better_Messages_Admin.nonce}},p=w().create(h);var E=(0,e.createContext)({settings:null,saveSettings:null,dispatchSetting:null,iosBundles:null}),x=n(1653);x.domToReact,x.htmlToDOM,x.attributesToProps,x.Comment,x.Element,x.ProcessingInstruction,x.Text;const S=x;function C(){var t=(0,e.useContext)(E),n=t.settings,r=(t.saveSettings,i((0,e.useState)(n.iosApi.keyID&&n.iosApi.issuerID&&n.iosApi.apiKey),2)),o=r[0],l=(r[1],i((0,e.useState)(null),2)),u=l[0],s=l[1],d=i((0,e.useState)(n.iosApi.keyID),2),h=d[0],m=d[1],v=i((0,e.useState)(n.iosApi.issuerID),2),b=v[0],w=v[1],k="button button-primary";u&&h&&b||(k+=" disabled");var x=function(){var e=a(c().mark((function e(t){var n,r;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),(n=new FormData).append("apiKey",u),n.append("keyID",h),n.append("issuerID",b),e.prev=5,e.next=8,p.request({method:"post",url:"app/ios/connectToAppStore",data:n,headers:{"Content-Type":"multipart/form-data"}});case 8:r=e.sent,console.log(r),e.next=16;break;case 12:e.prev=12,e.t0=e.catch(5),console.error(e.t0),alert(e.t0.response.data.message);case 16:case"end":return e.stop()}}),e,null,[[5,12]])})));return function(t){return e.apply(this,arguments)}}();return e.createElement(f,{title:"Apple Developer Account"},!o&&e.createElement(e.Fragment,null,e.createElement("p",null,g("To authorize and be able to upload the application to your apple developer account we need to authorize to Apple App Store via API.","WP Admin (Mobile App)","bp-better-messages")),e.createElement("p",null,S(y(g('For that you need to get <a href="%s" target="_blank">Get API Key</a> from App Store Connect and upload it using form below.',"WP Admin (Mobile App)","bp-better-messages"),"https://appstoreconnect.apple.com/access/api"))),e.createElement("table",{className:"form-table"},e.createElement("tbody",null,e.createElement("tr",null,e.createElement("th",null,g("API Key","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement("input",{type:"file",accept:".p8",onChange:function(e){s(e.target.files[0])}}))),e.createElement("tr",null,e.createElement("th",null,g("Key ID","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement("input",{type:"text",value:h,onChange:function(e){m(e.target.value)}}))),e.createElement("tr",null,e.createElement("th",null,g("Issuer ID","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement("input",{style:{minWidth:320},type:"text",value:b,onChange:function(e){w(e.target.value)}}))))),e.createElement("p",{className:"submit"},e.createElement("button",{type:"submit",onClick:x,className:k},g("Connect","WP Admin (Mobile App)","bp-better-messages")))),o&&e.createElement("div",{className:"better-messages-banner better-messages-banner-green"},"Connected"))}function P(){return(P=a(c().mark((function e(){var t;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,p.get("app/ios/getProfiles");case 3:return t=e.sent,e.abrupt("return",t.data);case 7:return e.prev=7,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function _(){return(_=a(c().mark((function e(t){var n;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,p.post("app/ios/createCertificate");case 3:return n=e.sent,e.abrupt("return",n.data);case 7:return e.prev=7,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function T(e,t,n,r){return N.apply(this,arguments)}function N(){return(N=a(c().mark((function e(t,n,r,a){var o;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,p.post("app/ios/createProfile",{key:t,type:n,bundleId:r,certificateId:a});case 3:return o=e.sent,e.abrupt("return",o.data);case 7:return e.prev=7,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function O(){return(O=a(c().mark((function e(){var t;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,p.get("app/ios/getDevices");case 3:return t=e.sent,e.abrupt("return",t.data);case 7:return e.prev=7,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function A(){return(A=a(c().mark((function e(t){var n;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,p.post("app/ios/addDevice",{deviceId:t});case 3:return n=e.sent,e.abrupt("return",n.data);case 7:return e.prev=7,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function D(){var t=(0,e.useContext)(E),n=t.settings,r=t.iosBundles,a=t.saveSettings,o=t.dispatchSetting,l=i((0,e.useState)(),2),u=l[0],s=l[1],c=i((0,e.useState)(),2),d=c[0],p=c[1],h=i((0,e.useState)(""),2),m=h[0],y=h[1];return(0,e.useEffect)((function(){(function(){return O.apply(this,arguments)})().then((function(e){p(e)}))}),[]),(0,e.useEffect)((function(){(function(){return P.apply(this,arguments)})().then((function(e){s(e)}))}),[n.iosBundleDev,n.iosCertificateDev]),e.createElement(f,{title:"Development Version"},e.createElement("table",{className:"form-table"},e.createElement("tbody",null,e.createElement("tr",null,e.createElement("th",null,g("Application Signing Certificate","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,n.iosCertificateDev&&e.createElement("table",{className:"bm-info-table"},e.createElement("tbody",null,e.createElement("tr",null,e.createElement("th",null,g("Certificate ID","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement("a",{href:"https://developer.apple.com/account/resources/certificates/download/"+n.iosCertificateDev,target:"_blank"},n.iosCertificateDev))))),!n.iosCertificateDev&&e.createElement("div",null,e.createElement("span",{className:"button",onClick:function(e){e.preventDefault(),function(e){_.apply(this,arguments)}("DEVELOPMENT")}},g("Generate Certificate","WP Admin (Mobile App)","bp-better-messages"))))),e.createElement("tr",null,e.createElement("th",null,g("Devices","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement("table",{className:"bm-info-table"},e.createElement("tbody",null,0===n.iosDevices.length&&e.createElement("tr",null,e.createElement("th",{colSpan:2},g("No devices added yet","WP Admin (Mobile App)","bp-better-messages"))),n.iosDevices.length>0&&n.iosDevices.map((function(t){var n=d&&d.find((function(e){return e.id===t}));if(n)return e.createElement("tr",{key:"device_"+t},e.createElement("th",null,n.name),e.createElement("td",null,n.udid))})))),e.createElement("div",null,e.createElement("select",{disabled:!d,value:m,onChange:function(e){y(e.target.value)}},!d&&e.createElement("option",{value:""},v("Loading","bp-better-messages")),d&&e.createElement(e.Fragment,null,e.createElement("option",{value:""},g("Select device to add","WP Admin (Mobile App)","bp-better-messages")),d.filter((function(e){return!n.iosDevices.includes(e.id)})).map((function(t){return e.createElement("option",{key:"device_"+t.id,value:t.id},t.name," (",t.udid,")")})))),m&&e.createElement("div",{style:{marginTop:10}},e.createElement("button",{className:"button",onClick:function(){!function(e){A.apply(this,arguments)}(m)}},g("Add Device","WP Admin (Mobile App)","bp-better-messages")))))),e.createElement("tr",null,e.createElement("th",null,g("Application Bundle","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,void 0===r&&v("Loading","bp-better-messages"),r&&e.createElement(e.Fragment,null,e.createElement("select",{onChange:function(e){o({key:"iosBundleDev",value:e.target.value})},defaultValue:n.iosBundleDev},e.createElement("option",{value:""},g("Not selected","WP Admin (Mobile App)","bp-better-messages")),r.map((function(t){return e.createElement("option",{key:"bundle_"+t.id,value:t.id},t.identifier," (",t.name,")")})))))),e.createElement("tr",null,e.createElement("th",null,g("Application Profile","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,void 0===u&&v("Loading","bp-better-messages"),u&&e.createElement(e.Fragment,null,e.createElement("div",{style:{marginBottom:10}},0===u.length&&e.createElement("div",null,g("No profiles compatible with selected bundle and certificate","WP Admin (Mobile App)","bp-better-messages")),u.length>0&&e.createElement("select",{disabled:!n.iosCertificateDev,onChange:function(e){o({key:"iosProfileDev",value:e.target.value})},defaultValue:n.iosProfileDev},e.createElement("option",{value:""},g("Not selected","WP Admin (Mobile App)","bp-better-messages")),u.map((function(t){return e.createElement("option",{key:"certificate_"+t.id,value:t.id},t.name," (",t.id,")")})))),e.createElement("div",null,e.createElement("span",{className:"button",onClick:function(e){e.preventDefault(),T("iosProfileDev","IOS_APP_DEVELOPMENT",n.iosBundleDev,n.iosCertificateDev)}},g("Generate Profile","WP Admin (Mobile App)","bp-better-messages")))))),e.createElement("tr",null,e.createElement("th",null,g("Notification Service Bundle","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,void 0===r&&v("Loading","bp-better-messages"),r&&e.createElement(e.Fragment,null,e.createElement("select",{onChange:function(e){o({key:"iosBundleServiceDev",value:e.target.value})},defaultValue:n.iosBundleServiceDev},e.createElement("option",{value:""},g("Not selected","WP Admin (Mobile App)","bp-better-messages")),r.map((function(t){return e.createElement("option",{key:"bundle_"+t.id,value:t.id},t.identifier," (",t.name,")")})))))),e.createElement("tr",null,e.createElement("th",null,g("Notification Service Profile","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,void 0===u&&v("Loading","bp-better-messages"),u&&e.createElement(e.Fragment,null,e.createElement("div",{style:{marginBottom:10}},0===u.length&&e.createElement("div",null,g("No profiles compatible with selected bundle and certificate","WP Admin (Mobile App)","bp-better-messages")),u.length>0&&e.createElement("select",{disabled:!n.iosCertificateDev,onChange:function(e){o({key:"iosProfileServiceDev",value:e.target.value})},defaultValue:n.iosProfileServiceDev},e.createElement("option",{value:""},g("Not selected","WP Admin (Mobile App)","bp-better-messages")),u.map((function(t){return e.createElement("option",{key:"certificate_"+t.id,value:t.id},t.name," (",t.id,")")})))),e.createElement("div",null,e.createElement("span",{className:"button",onClick:function(e){e.preventDefault(),T("iosProfileServiceDev","IOS_APP_DEVELOPMENT",n.iosBundleServiceDev,n.iosCertificateDev)}},g("Generate Profile","WP Admin (Mobile App)","bp-better-messages")))))))),e.createElement("p",{className:"submit"},e.createElement("button",{type:"submit",onClick:function(){a()},className:"button button-primary"},g("Save Changes","WP Admin (Mobile App)","bp-better-messages"))))}function L(){return(L=a(c().mark((function e(){var t;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,p.get("app/ios/getBundles");case 3:return t=e.sent,e.abrupt("return",t.data);case 7:return e.prev=7,e.t0=e.catch(0),console.error(e.t0),e.abrupt("return",[]);case 11:case"end":return e.stop()}}),e,null,[[0,7]])})))).apply(this,arguments)}function R(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function I(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?R(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):R(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var z={};function M(e,t){return e[t.key]=t.value,z[t.key]=t.value,I({},e)}function F(){var t=i((0,e.useState)(),2),n=t[0],r=t[1];return(0,e.useEffect)((function(){p.get("app/getMobileSettings").then((function(e){var t=e.data;r(t)}))}),[]),n?e.createElement(j,{settings:n}):e.createElement(e.Fragment,null,"Loading")}function j(t){var n="general";location.hash&&(n=location.hash.replace("#",""));var r=i((0,e.useState)(n),2),o=r[0],l=r[1],u=i((0,e.useReducer)(M,t.settings),2),s=u[0],h=u[1],m=i((0,e.useState)(),2),v=m[0],y=m[1];(0,e.useEffect)((function(){(function(){return L.apply(this,arguments)})().then((function(e){y(e)}))}),[]);var b=function(){var e=a(c().mark((function e(){var t;return c().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=I({},z),0!==Object.keys(t).length){e.next=3;break}return e.abrupt("return");case 3:return e.next=5,p.post("app/saveMobileSettings",{settings:t});case 5:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return e.createElement(E.Provider,{value:{settings:s,iosBundles:v,saveSettings:b,dispatchSetting:h}},e.createElement("div",{id:"bm-mobile-app"},e.createElement(d,{activeTab:o,setActiveTab:l,tabs:[{slug:"general",label:"General"},{slug:"ios",label:"iOS Settings"}]}),e.createElement("div",{style:{display:"general"===o?"block":"none"}},e.createElement(f,{title:"General"},e.createElement("table",{className:"form-table"},e.createElement("tbody",null,e.createElement("tr",null,e.createElement("th",null,g("Application Name","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement("input",{type:"text",value:s.applicationName,onChange:function(e){h({key:"applicationName",value:e.target.value})}}))),e.createElement("tr",null,e.createElement("th",null,g("Application Icon","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement(k,{width:100,height:100,option:"appIcon",uploadedImage:s.appIcon}))),e.createElement("tr",null,e.createElement("th",null,g("Application Splash Screen","WP Admin (Mobile App)","bp-better-messages")),e.createElement("td",null,e.createElement(k,{width:200,height:200,option:"appSplash",uploadedImage:s.appSplash}))))),e.createElement("p",{className:"submit"},e.createElement("button",{type:"submit",onClick:function(){b()},className:"button button-primary"},g("Save Changes","WP Admin (Mobile App)","bp-better-messages"))))),e.createElement("div",{style:{display:"ios"===o?"block":"none"}},e.createElement(C,null),e.createElement(D,null))))}function U(){return e.createElement(e.Fragment,null)}document.addEventListener("DOMContentLoaded",(function(){document.getElementById("layout-moderation");var n=document.getElementById("messages-viewer");n&&t.s(n).render(e.createElement(U,null)),document.getElementById("migrate-db");var r=document.getElementById("bm-mobile-app-settings");r&&(r.classList.contains("bm-initialized")||(r.classList.add("bm-initialized"),t.s(r).render(e.createElement(F,null))))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QjBNLFNBQVNpaEUsZUFBZSxxQkFBekMsSUFLSUMsRUFBaUJsaEUsU0FBU2loRSxlQUFlLG1CQUV0Q0MsR0FDSEMsRUFBQUEsRUFBMkJELEdBQWlCMW9ELE9BQU8sZ0JBQUN3b0QsRUFBYyxPQUd0RGhoRSxTQUFTaWhFLGVBQWUsY0FBeEMsSUFLSUcsRUFBb0JwaEUsU0FBU2loRSxlQUFlLDBCQUN6Q0csSUFDR0EsRUFBa0JDLFVBQVVydUMsU0FBUyxvQkFDdkNvdUMsRUFBa0JDLFVBQVV0c0QsSUFBSSxrQkFDaENvc0QsRUFBQUEsRUFBMEJDLEdBQW1CNW9ELE9BQU8sZ0JBQUM4bkQsRUFBZ0IsUUFHakYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy94aHIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL2lzQ2FuY2VsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9BeGlvcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvQXhpb3NFcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9idWlsZEZ1bGxQYXRoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzL3RyYW5zaXRpb25hbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2Vudi9kYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNVUkxTYW1lT3JpZ2luLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9ub3JtYWxpemVIZWFkZXJOYW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9udWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlUHJvdG9jb2wuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdG9Gb3JtRGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvdmFsaWRhdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbWVsZW1lbnR0eXBlL2xpYi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHRtbC1kb20tcGFyc2VyL2xpYi9jbGllbnQvY29uc3RhbnRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odG1sLWRvbS1wYXJzZXIvbGliL2NsaWVudC9kb21wYXJzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0bWwtZG9tLXBhcnNlci9saWIvY2xpZW50L2h0bWwtdG8tZG9tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odG1sLWRvbS1wYXJzZXIvbGliL2NsaWVudC91dGlsaXRpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0bWwtZG9tLXBhcnNlci9ub2RlX21vZHVsZXMvZG9taGFuZGxlci9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0bWwtZG9tLXBhcnNlci9ub2RlX21vZHVsZXMvZG9taGFuZGxlci9saWIvbm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHRtbC1yZWFjdC1wYXJzZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0bWwtcmVhY3QtcGFyc2VyL2xpYi9hdHRyaWJ1dGVzLXRvLXByb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odG1sLXJlYWN0LXBhcnNlci9saWIvZG9tLXRvLXJlYWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odG1sLXJlYWN0LXBhcnNlci9saWIvdXRpbGl0aWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9odG1sLXJlYWN0LXBhcnNlci9ub2RlX21vZHVsZXMvZG9taGFuZGxlci9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2h0bWwtcmVhY3QtcGFyc2VyL25vZGVfbW9kdWxlcy9kb21oYW5kbGVyL2xpYi9ub2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmxpbmUtc3R5bGUtcGFyc2VyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1wcm9wZXJ0eS9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXByb3BlcnR5L2xpYi9wb3NzaWJsZVN0YW5kYXJkTmFtZXNPcHRpbWl6ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLXRvLWpzL2Nqcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtdG8tanMvY2pzL3V0aWxpdGllcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtdG8tb2JqZWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yL2luZGV4LmpzIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlMaWtlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXJyYXlXaXRoSG9sZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2l0ZXJhYmxlVG9BcnJheUxpbWl0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vbm9uSXRlcmFibGVSZXN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b1Byb3BlcnR5S2V5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b1ByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi9hZG1pbi9jb21wb25lbnRzL3NldHRpbmctc2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vLy4vYWRtaW4vY29tcG9uZW50cy9uYXYtdGFicy50c3giLCJ3ZWJwYWNrOi8vLy4vYWRtaW4vZ2xvYmFscy50cyIsIndlYnBhY2s6Ly8vLi9hZG1pbi9hcGkudHMiLCJ3ZWJwYWNrOi8vLy4vYWRtaW4vY29tcG9uZW50cy9pbWFnZS11cGxvYWQudHN4Iiwid2VicGFjazovLy8uL2FkbWluL21vYmlsZS1hcHAvc2V0dGluZ3MvY29udGV4dC50cyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHRtbC1yZWFjdC1wYXJzZXIvaW5kZXgubWpzIiwid2VicGFjazovLy8uL2FkbWluL21vYmlsZS1hcHAvc2V0dGluZ3MvYXBwbGUtY29ubmVjdC50c3giLCJ3ZWJwYWNrOi8vLy4vYWRtaW4vbW9iaWxlLWFwcC9hcGkvaW9zL2dldC1wcm9maWxlcy50cyIsIndlYnBhY2s6Ly8vLi9hZG1pbi9tb2JpbGUtYXBwL2FwaS9pb3MvY3JlYXRlLWNlcnRpZmljYXRlLnRzIiwid2VicGFjazovLy8uL2FkbWluL21vYmlsZS1hcHAvYXBpL2lvcy9jcmVhdGUtcHJvZmlsZS50cyIsIndlYnBhY2s6Ly8vLi9hZG1pbi9tb2JpbGUtYXBwL2FwaS9pb3MvZ2V0LWRldmljZXMudHMiLCJ3ZWJwYWNrOi8vLy4vYWRtaW4vbW9iaWxlLWFwcC9hcGkvaW9zL2FkZC1kZXZpY2UudHMiLCJ3ZWJwYWNrOi8vLy4vYWRtaW4vbW9iaWxlLWFwcC9zZXR0aW5ncy9hcHBsZS1kZXYudHN4Iiwid2VicGFjazovLy8uL2FkbWluL21vYmlsZS1hcHAvYXBpL2lvcy9nZXQtYnVuZGxlcy50cyIsIndlYnBhY2s6Ly8vLi9hZG1pbi9tb2JpbGUtYXBwL21vYmlsZS1hcHAudHN4Iiwid2VicGFjazovLy8uL2FkbWluL3ZpZXdlci9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vYWRtaW4udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciB0cmFuc2l0aW9uYWxEZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzL3RyYW5zaXRpb25hbCcpO1xudmFyIEF4aW9zRXJyb3IgPSByZXF1aXJlKCcuLi9jb3JlL0F4aW9zRXJyb3InKTtcbnZhciBDYW5jZWxlZEVycm9yID0gcmVxdWlyZSgnLi4vY2FuY2VsL0NhbmNlbGVkRXJyb3InKTtcbnZhciBwYXJzZVByb3RvY29sID0gcmVxdWlyZSgnLi4vaGVscGVycy9wYXJzZVByb3RvY29sJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24geGhyQWRhcHRlcihjb25maWcpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIGRpc3BhdGNoWGhyUmVxdWVzdChyZXNvbHZlLCByZWplY3QpIHtcbiAgICB2YXIgcmVxdWVzdERhdGEgPSBjb25maWcuZGF0YTtcbiAgICB2YXIgcmVxdWVzdEhlYWRlcnMgPSBjb25maWcuaGVhZGVycztcbiAgICB2YXIgcmVzcG9uc2VUeXBlID0gY29uZmlnLnJlc3BvbnNlVHlwZTtcbiAgICB2YXIgb25DYW5jZWxlZDtcbiAgICBmdW5jdGlvbiBkb25lKCkge1xuICAgICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgICAgICBjb25maWcuY2FuY2VsVG9rZW4udW5zdWJzY3JpYmUob25DYW5jZWxlZCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb25maWcuc2lnbmFsKSB7XG4gICAgICAgIGNvbmZpZy5zaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbkNhbmNlbGVkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodXRpbHMuaXNGb3JtRGF0YShyZXF1ZXN0RGF0YSkgJiYgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSkge1xuICAgICAgZGVsZXRlIHJlcXVlc3RIZWFkZXJzWydDb250ZW50LVR5cGUnXTsgLy8gTGV0IHRoZSBicm93c2VyIHNldCBpdFxuICAgIH1cblxuICAgIHZhciByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICAvLyBIVFRQIGJhc2ljIGF1dGhlbnRpY2F0aW9uXG4gICAgaWYgKGNvbmZpZy5hdXRoKSB7XG4gICAgICB2YXIgdXNlcm5hbWUgPSBjb25maWcuYXV0aC51c2VybmFtZSB8fCAnJztcbiAgICAgIHZhciBwYXNzd29yZCA9IGNvbmZpZy5hdXRoLnBhc3N3b3JkID8gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGNvbmZpZy5hdXRoLnBhc3N3b3JkKSkgOiAnJztcbiAgICAgIHJlcXVlc3RIZWFkZXJzLkF1dGhvcml6YXRpb24gPSAnQmFzaWMgJyArIGJ0b2EodXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCk7XG4gICAgfVxuXG4gICAgdmFyIGZ1bGxQYXRoID0gYnVpbGRGdWxsUGF0aChjb25maWcuYmFzZVVSTCwgY29uZmlnLnVybCk7XG5cbiAgICByZXF1ZXN0Lm9wZW4oY29uZmlnLm1ldGhvZC50b1VwcGVyQ2FzZSgpLCBidWlsZFVSTChmdWxsUGF0aCwgY29uZmlnLnBhcmFtcywgY29uZmlnLnBhcmFtc1NlcmlhbGl6ZXIpLCB0cnVlKTtcblxuICAgIC8vIFNldCB0aGUgcmVxdWVzdCB0aW1lb3V0IGluIE1TXG4gICAgcmVxdWVzdC50aW1lb3V0ID0gY29uZmlnLnRpbWVvdXQ7XG5cbiAgICBmdW5jdGlvbiBvbmxvYWRlbmQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy8gUHJlcGFyZSB0aGUgcmVzcG9uc2VcbiAgICAgIHZhciByZXNwb25zZUhlYWRlcnMgPSAnZ2V0QWxsUmVzcG9uc2VIZWFkZXJzJyBpbiByZXF1ZXN0ID8gcGFyc2VIZWFkZXJzKHJlcXVlc3QuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpIDogbnVsbDtcbiAgICAgIHZhciByZXNwb25zZURhdGEgPSAhcmVzcG9uc2VUeXBlIHx8IHJlc3BvbnNlVHlwZSA9PT0gJ3RleHQnIHx8ICByZXNwb25zZVR5cGUgPT09ICdqc29uJyA/XG4gICAgICAgIHJlcXVlc3QucmVzcG9uc2VUZXh0IDogcmVxdWVzdC5yZXNwb25zZTtcbiAgICAgIHZhciByZXNwb25zZSA9IHtcbiAgICAgICAgZGF0YTogcmVzcG9uc2VEYXRhLFxuICAgICAgICBzdGF0dXM6IHJlcXVlc3Quc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXF1ZXN0LnN0YXR1c1RleHQsXG4gICAgICAgIGhlYWRlcnM6IHJlc3BvbnNlSGVhZGVycyxcbiAgICAgICAgY29uZmlnOiBjb25maWcsXG4gICAgICAgIHJlcXVlc3Q6IHJlcXVlc3RcbiAgICAgIH07XG5cbiAgICAgIHNldHRsZShmdW5jdGlvbiBfcmVzb2x2ZSh2YWx1ZSkge1xuICAgICAgICByZXNvbHZlKHZhbHVlKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSwgZnVuY3Rpb24gX3JlamVjdChlcnIpIHtcbiAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0sIHJlc3BvbnNlKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKCdvbmxvYWRlbmQnIGluIHJlcXVlc3QpIHtcbiAgICAgIC8vIFVzZSBvbmxvYWRlbmQgaWYgYXZhaWxhYmxlXG4gICAgICByZXF1ZXN0Lm9ubG9hZGVuZCA9IG9ubG9hZGVuZDtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTGlzdGVuIGZvciByZWFkeSBzdGF0ZSB0byBlbXVsYXRlIG9ubG9hZGVuZFxuICAgICAgcmVxdWVzdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiBoYW5kbGVMb2FkKCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QgfHwgcmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVGhlIHJlcXVlc3QgZXJyb3JlZCBvdXQgYW5kIHdlIGRpZG4ndCBnZXQgYSByZXNwb25zZSwgdGhpcyB3aWxsIGJlXG4gICAgICAgIC8vIGhhbmRsZWQgYnkgb25lcnJvciBpbnN0ZWFkXG4gICAgICAgIC8vIFdpdGggb25lIGV4Y2VwdGlvbjogcmVxdWVzdCB0aGF0IHVzaW5nIGZpbGU6IHByb3RvY29sLCBtb3N0IGJyb3dzZXJzXG4gICAgICAgIC8vIHdpbGwgcmV0dXJuIHN0YXR1cyBhcyAwIGV2ZW4gdGhvdWdoIGl0J3MgYSBzdWNjZXNzZnVsIHJlcXVlc3RcbiAgICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzID09PSAwICYmICEocmVxdWVzdC5yZXNwb25zZVVSTCAmJiByZXF1ZXN0LnJlc3BvbnNlVVJMLmluZGV4T2YoJ2ZpbGU6JykgPT09IDApKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJlYWR5c3RhdGUgaGFuZGxlciBpcyBjYWxsaW5nIGJlZm9yZSBvbmVycm9yIG9yIG9udGltZW91dCBoYW5kbGVycyxcbiAgICAgICAgLy8gc28gd2Ugc2hvdWxkIGNhbGwgb25sb2FkZW5kIG9uIHRoZSBuZXh0ICd0aWNrJ1xuICAgICAgICBzZXRUaW1lb3V0KG9ubG9hZGVuZCk7XG4gICAgICB9O1xuICAgIH1cblxuICAgIC8vIEhhbmRsZSBicm93c2VyIHJlcXVlc3QgY2FuY2VsbGF0aW9uIChhcyBvcHBvc2VkIHRvIGEgbWFudWFsIGNhbmNlbGxhdGlvbilcbiAgICByZXF1ZXN0Lm9uYWJvcnQgPSBmdW5jdGlvbiBoYW5kbGVBYm9ydCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlamVjdChuZXcgQXhpb3NFcnJvcignUmVxdWVzdCBhYm9ydGVkJywgQXhpb3NFcnJvci5FQ09OTkFCT1JURUQsIGNvbmZpZywgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIGxvdyBsZXZlbCBuZXR3b3JrIGVycm9yc1xuICAgIHJlcXVlc3Qub25lcnJvciA9IGZ1bmN0aW9uIGhhbmRsZUVycm9yKCkge1xuICAgICAgLy8gUmVhbCBlcnJvcnMgYXJlIGhpZGRlbiBmcm9tIHVzIGJ5IHRoZSBicm93c2VyXG4gICAgICAvLyBvbmVycm9yIHNob3VsZCBvbmx5IGZpcmUgaWYgaXQncyBhIG5ldHdvcmsgZXJyb3JcbiAgICAgIHJlamVjdChuZXcgQXhpb3NFcnJvcignTmV0d29yayBFcnJvcicsIEF4aW9zRXJyb3IuRVJSX05FVFdPUkssIGNvbmZpZywgcmVxdWVzdCwgcmVxdWVzdCkpO1xuXG4gICAgICAvLyBDbGVhbiB1cCByZXF1ZXN0XG4gICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICB9O1xuXG4gICAgLy8gSGFuZGxlIHRpbWVvdXRcbiAgICByZXF1ZXN0Lm9udGltZW91dCA9IGZ1bmN0aW9uIGhhbmRsZVRpbWVvdXQoKSB7XG4gICAgICB2YXIgdGltZW91dEVycm9yTWVzc2FnZSA9IGNvbmZpZy50aW1lb3V0ID8gJ3RpbWVvdXQgb2YgJyArIGNvbmZpZy50aW1lb3V0ICsgJ21zIGV4Y2VlZGVkJyA6ICd0aW1lb3V0IGV4Y2VlZGVkJztcbiAgICAgIHZhciB0cmFuc2l0aW9uYWwgPSBjb25maWcudHJhbnNpdGlvbmFsIHx8IHRyYW5zaXRpb25hbERlZmF1bHRzO1xuICAgICAgaWYgKGNvbmZpZy50aW1lb3V0RXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIHRpbWVvdXRFcnJvck1lc3NhZ2UgPSBjb25maWcudGltZW91dEVycm9yTWVzc2FnZTtcbiAgICAgIH1cbiAgICAgIHJlamVjdChuZXcgQXhpb3NFcnJvcihcbiAgICAgICAgdGltZW91dEVycm9yTWVzc2FnZSxcbiAgICAgICAgdHJhbnNpdGlvbmFsLmNsYXJpZnlUaW1lb3V0RXJyb3IgPyBBeGlvc0Vycm9yLkVUSU1FRE9VVCA6IEF4aW9zRXJyb3IuRUNPTk5BQk9SVEVELFxuICAgICAgICBjb25maWcsXG4gICAgICAgIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgIC8vIFRoaXMgaXMgb25seSBkb25lIGlmIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50LlxuICAgIC8vIFNwZWNpZmljYWxseSBub3QgaWYgd2UncmUgaW4gYSB3ZWIgd29ya2VyLCBvciByZWFjdC1uYXRpdmUuXG4gICAgaWYgKHV0aWxzLmlzU3RhbmRhcmRCcm93c2VyRW52KCkpIHtcbiAgICAgIC8vIEFkZCB4c3JmIGhlYWRlclxuICAgICAgdmFyIHhzcmZWYWx1ZSA9IChjb25maWcud2l0aENyZWRlbnRpYWxzIHx8IGlzVVJMU2FtZU9yaWdpbihmdWxsUGF0aCkpICYmIGNvbmZpZy54c3JmQ29va2llTmFtZSA/XG4gICAgICAgIGNvb2tpZXMucmVhZChjb25maWcueHNyZkNvb2tpZU5hbWUpIDpcbiAgICAgICAgdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoeHNyZlZhbHVlKSB7XG4gICAgICAgIHJlcXVlc3RIZWFkZXJzW2NvbmZpZy54c3JmSGVhZGVyTmFtZV0gPSB4c3JmVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQWRkIGhlYWRlcnMgdG8gdGhlIHJlcXVlc3RcbiAgICBpZiAoJ3NldFJlcXVlc3RIZWFkZXInIGluIHJlcXVlc3QpIHtcbiAgICAgIHV0aWxzLmZvckVhY2gocmVxdWVzdEhlYWRlcnMsIGZ1bmN0aW9uIHNldFJlcXVlc3RIZWFkZXIodmFsLCBrZXkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiByZXF1ZXN0RGF0YSA9PT0gJ3VuZGVmaW5lZCcgJiYga2V5LnRvTG93ZXJDYXNlKCkgPT09ICdjb250ZW50LXR5cGUnKSB7XG4gICAgICAgICAgLy8gUmVtb3ZlIENvbnRlbnQtVHlwZSBpZiBkYXRhIGlzIHVuZGVmaW5lZFxuICAgICAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1trZXldO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE90aGVyd2lzZSBhZGQgaGVhZGVyIHRvIHRoZSByZXF1ZXN0XG4gICAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKGtleSwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHdpdGhDcmVkZW50aWFscyB0byByZXF1ZXN0IGlmIG5lZWRlZFxuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnLndpdGhDcmVkZW50aWFscykpIHtcbiAgICAgIHJlcXVlc3Qud2l0aENyZWRlbnRpYWxzID0gISFjb25maWcud2l0aENyZWRlbnRpYWxzO1xuICAgIH1cblxuICAgIC8vIEFkZCByZXNwb25zZVR5cGUgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAocmVzcG9uc2VUeXBlICYmIHJlc3BvbnNlVHlwZSAhPT0gJ2pzb24nKSB7XG4gICAgICByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IGNvbmZpZy5yZXNwb25zZVR5cGU7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHByb2dyZXNzIGlmIG5lZWRlZFxuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uRG93bmxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdwcm9ncmVzcycsIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIC8vIE5vdCBhbGwgYnJvd3NlcnMgc3VwcG9ydCB1cGxvYWQgZXZlbnRzXG4gICAgaWYgKHR5cGVvZiBjb25maWcub25VcGxvYWRQcm9ncmVzcyA9PT0gJ2Z1bmN0aW9uJyAmJiByZXF1ZXN0LnVwbG9hZCkge1xuICAgICAgcmVxdWVzdC51cGxvYWQuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25VcGxvYWRQcm9ncmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbiB8fCBjb25maWcuc2lnbmFsKSB7XG4gICAgICAvLyBIYW5kbGUgY2FuY2VsbGF0aW9uXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgICAgb25DYW5jZWxlZCA9IGZ1bmN0aW9uKGNhbmNlbCkge1xuICAgICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmVqZWN0KCFjYW5jZWwgfHwgKGNhbmNlbCAmJiBjYW5jZWwudHlwZSkgPyBuZXcgQ2FuY2VsZWRFcnJvcigpIDogY2FuY2VsKTtcbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH07XG5cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbiAmJiBjb25maWcuY2FuY2VsVG9rZW4uc3Vic2NyaWJlKG9uQ2FuY2VsZWQpO1xuICAgICAgaWYgKGNvbmZpZy5zaWduYWwpIHtcbiAgICAgICAgY29uZmlnLnNpZ25hbC5hYm9ydGVkID8gb25DYW5jZWxlZCgpIDogY29uZmlnLnNpZ25hbC5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsIG9uQ2FuY2VsZWQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghcmVxdWVzdERhdGEpIHtcbiAgICAgIHJlcXVlc3REYXRhID0gbnVsbDtcbiAgICB9XG5cbiAgICB2YXIgcHJvdG9jb2wgPSBwYXJzZVByb3RvY29sKGZ1bGxQYXRoKTtcblxuICAgIGlmIChwcm90b2NvbCAmJiBbICdodHRwJywgJ2h0dHBzJywgJ2ZpbGUnIF0uaW5kZXhPZihwcm90b2NvbCkgPT09IC0xKSB7XG4gICAgICByZWplY3QobmV3IEF4aW9zRXJyb3IoJ1Vuc3VwcG9ydGVkIHByb3RvY29sICcgKyBwcm90b2NvbCArICc6JywgQXhpb3NFcnJvci5FUlJfQkFEX1JFUVVFU1QsIGNvbmZpZykpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuXG4gICAgLy8gU2VuZCB0aGUgcmVxdWVzdFxuICAgIHJlcXVlc3Quc2VuZChyZXF1ZXN0RGF0YSk7XG4gIH0pO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuL2hlbHBlcnMvYmluZCcpO1xudmFyIEF4aW9zID0gcmVxdWlyZSgnLi9jb3JlL0F4aW9zJyk7XG52YXIgbWVyZ2VDb25maWcgPSByZXF1aXJlKCcuL2NvcmUvbWVyZ2VDb25maWcnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4vZGVmYXVsdHMnKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gZGVmYXVsdENvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICogQHJldHVybiB7QXhpb3N9IEEgbmV3IGluc3RhbmNlIG9mIEF4aW9zXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRDb25maWcpIHtcbiAgdmFyIGNvbnRleHQgPSBuZXcgQXhpb3MoZGVmYXVsdENvbmZpZyk7XG4gIHZhciBpbnN0YW5jZSA9IGJpbmQoQXhpb3MucHJvdG90eXBlLnJlcXVlc3QsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgYXhpb3MucHJvdG90eXBlIHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgQXhpb3MucHJvdG90eXBlLCBjb250ZXh0KTtcblxuICAvLyBDb3B5IGNvbnRleHQgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBjb250ZXh0KTtcblxuICAvLyBGYWN0b3J5IGZvciBjcmVhdGluZyBuZXcgaW5zdGFuY2VzXG4gIGluc3RhbmNlLmNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpbnN0YW5jZUNvbmZpZykge1xuICAgIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhkZWZhdWx0Q29uZmlnLCBpbnN0YW5jZUNvbmZpZykpO1xuICB9O1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRXhwb3NlIENhbmNlbCAmIENhbmNlbFRva2VuXG5heGlvcy5DYW5jZWxlZEVycm9yID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsZWRFcnJvcicpO1xuYXhpb3MuQ2FuY2VsVG9rZW4gPSByZXF1aXJlKCcuL2NhbmNlbC9DYW5jZWxUb2tlbicpO1xuYXhpb3MuaXNDYW5jZWwgPSByZXF1aXJlKCcuL2NhbmNlbC9pc0NhbmNlbCcpO1xuYXhpb3MuVkVSU0lPTiA9IHJlcXVpcmUoJy4vZW52L2RhdGEnKS52ZXJzaW9uO1xuYXhpb3MudG9Gb3JtRGF0YSA9IHJlcXVpcmUoJy4vaGVscGVycy90b0Zvcm1EYXRhJyk7XG5cbi8vIEV4cG9zZSBBeGlvc0Vycm9yIGNsYXNzXG5heGlvcy5BeGlvc0Vycm9yID0gcmVxdWlyZSgnLi4vbGliL2NvcmUvQXhpb3NFcnJvcicpO1xuXG4vLyBhbGlhcyBmb3IgQ2FuY2VsZWRFcnJvciBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuYXhpb3MuQ2FuY2VsID0gYXhpb3MuQ2FuY2VsZWRFcnJvcjtcblxuLy8gRXhwb3NlIGFsbC9zcHJlYWRcbmF4aW9zLmFsbCA9IGZ1bmN0aW9uIGFsbChwcm9taXNlcykge1xuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpO1xufTtcbmF4aW9zLnNwcmVhZCA9IHJlcXVpcmUoJy4vaGVscGVycy9zcHJlYWQnKTtcblxuLy8gRXhwb3NlIGlzQXhpb3NFcnJvclxuYXhpb3MuaXNBeGlvc0Vycm9yID0gcmVxdWlyZSgnLi9oZWxwZXJzL2lzQXhpb3NFcnJvcicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGF4aW9zO1xuXG4vLyBBbGxvdyB1c2Ugb2YgZGVmYXVsdCBpbXBvcnQgc3ludGF4IGluIFR5cGVTY3JpcHRcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBheGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENhbmNlbGVkRXJyb3IgPSByZXF1aXJlKCcuL0NhbmNlbGVkRXJyb3InKTtcblxuLyoqXG4gKiBBIGBDYW5jZWxUb2tlbmAgaXMgYW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVxdWVzdCBjYW5jZWxsYXRpb24gb2YgYW4gb3BlcmF0aW9uLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZXhlY3V0b3IgVGhlIGV4ZWN1dG9yIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBDYW5jZWxUb2tlbihleGVjdXRvcikge1xuICBpZiAodHlwZW9mIGV4ZWN1dG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZXhlY3V0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIHJlc29sdmVQcm9taXNlO1xuXG4gIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIHByb21pc2VFeGVjdXRvcihyZXNvbHZlKSB7XG4gICAgcmVzb2x2ZVByb21pc2UgPSByZXNvbHZlO1xuICB9KTtcblxuICB2YXIgdG9rZW4gPSB0aGlzO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHRoaXMucHJvbWlzZS50aGVuKGZ1bmN0aW9uKGNhbmNlbCkge1xuICAgIGlmICghdG9rZW4uX2xpc3RlbmVycykgcmV0dXJuO1xuXG4gICAgdmFyIGk7XG4gICAgdmFyIGwgPSB0b2tlbi5fbGlzdGVuZXJzLmxlbmd0aDtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsOyBpKyspIHtcbiAgICAgIHRva2VuLl9saXN0ZW5lcnNbaV0oY2FuY2VsKTtcbiAgICB9XG4gICAgdG9rZW4uX2xpc3RlbmVycyA9IG51bGw7XG4gIH0pO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHRoaXMucHJvbWlzZS50aGVuID0gZnVuY3Rpb24ob25mdWxmaWxsZWQpIHtcbiAgICB2YXIgX3Jlc29sdmU7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcbiAgICAgIHRva2VuLnN1YnNjcmliZShyZXNvbHZlKTtcbiAgICAgIF9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICB9KS50aGVuKG9uZnVsZmlsbGVkKTtcblxuICAgIHByb21pc2UuY2FuY2VsID0gZnVuY3Rpb24gcmVqZWN0KCkge1xuICAgICAgdG9rZW4udW5zdWJzY3JpYmUoX3Jlc29sdmUpO1xuICAgIH07XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfTtcblxuICBleGVjdXRvcihmdW5jdGlvbiBjYW5jZWwobWVzc2FnZSkge1xuICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgIC8vIENhbmNlbGxhdGlvbiBoYXMgYWxyZWFkeSBiZWVuIHJlcXVlc3RlZFxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRva2VuLnJlYXNvbiA9IG5ldyBDYW5jZWxlZEVycm9yKG1lc3NhZ2UpO1xuICAgIHJlc29sdmVQcm9taXNlKHRva2VuLnJlYXNvbik7XG4gIH0pO1xufVxuXG4vKipcbiAqIFRocm93cyBhIGBDYW5jZWxlZEVycm9yYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudGhyb3dJZlJlcXVlc3RlZCA9IGZ1bmN0aW9uIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIHRocm93IHRoaXMucmVhc29uO1xuICB9XG59O1xuXG4vKipcbiAqIFN1YnNjcmliZSB0byB0aGUgY2FuY2VsIHNpZ25hbFxuICovXG5cbkNhbmNlbFRva2VuLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBmdW5jdGlvbiBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgaWYgKHRoaXMucmVhc29uKSB7XG4gICAgbGlzdGVuZXIodGhpcy5yZWFzb24pO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICh0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICB0aGlzLl9saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzID0gW2xpc3RlbmVyXTtcbiAgfVxufTtcblxuLyoqXG4gKiBVbnN1YnNjcmliZSBmcm9tIHRoZSBjYW5jZWwgc2lnbmFsXG4gKi9cblxuQ2FuY2VsVG9rZW4ucHJvdG90eXBlLnVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdW5zdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgaWYgKCF0aGlzLl9saXN0ZW5lcnMpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGluZGV4ID0gdGhpcy5fbGlzdGVuZXJzLmluZGV4T2YobGlzdGVuZXIpO1xuICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgdGhpcy5fbGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBvYmplY3QgdGhhdCBjb250YWlucyBhIG5ldyBgQ2FuY2VsVG9rZW5gIGFuZCBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLFxuICogY2FuY2VscyB0aGUgYENhbmNlbFRva2VuYC5cbiAqL1xuQ2FuY2VsVG9rZW4uc291cmNlID0gZnVuY3Rpb24gc291cmNlKCkge1xuICB2YXIgY2FuY2VsO1xuICB2YXIgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgIGNhbmNlbCA9IGM7XG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHRva2VuOiB0b2tlbixcbiAgICBjYW5jZWw6IGNhbmNlbFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBDYW5jZWxUb2tlbjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIEF4aW9zRXJyb3IgPSByZXF1aXJlKCcuLi9jb3JlL0F4aW9zRXJyb3InKTtcbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbi8qKlxuICogQSBgQ2FuY2VsZWRFcnJvcmAgaXMgYW4gb2JqZWN0IHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gb3BlcmF0aW9uIGlzIGNhbmNlbGVkLlxuICpcbiAqIEBjbGFzc1xuICogQHBhcmFtIHtzdHJpbmc9fSBtZXNzYWdlIFRoZSBtZXNzYWdlLlxuICovXG5mdW5jdGlvbiBDYW5jZWxlZEVycm9yKG1lc3NhZ2UpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVxLW51bGwsZXFlcWVxXG4gIEF4aW9zRXJyb3IuY2FsbCh0aGlzLCBtZXNzYWdlID09IG51bGwgPyAnY2FuY2VsZWQnIDogbWVzc2FnZSwgQXhpb3NFcnJvci5FUlJfQ0FOQ0VMRUQpO1xuICB0aGlzLm5hbWUgPSAnQ2FuY2VsZWRFcnJvcic7XG59XG5cbnV0aWxzLmluaGVyaXRzKENhbmNlbGVkRXJyb3IsIEF4aW9zRXJyb3IsIHtcbiAgX19DQU5DRUxfXzogdHJ1ZVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsZWRFcnJvcjtcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0NhbmNlbCh2YWx1ZSkge1xuICByZXR1cm4gISEodmFsdWUgJiYgdmFsdWUuX19DQU5DRUxfXyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xudmFyIGJ1aWxkRnVsbFBhdGggPSByZXF1aXJlKCcuL2J1aWxkRnVsbFBhdGgnKTtcbnZhciB2YWxpZGF0b3IgPSByZXF1aXJlKCcuLi9oZWxwZXJzL3ZhbGlkYXRvcicpO1xuXG52YXIgdmFsaWRhdG9ycyA9IHZhbGlkYXRvci52YWxpZGF0b3JzO1xuLyoqXG4gKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gaW5zdGFuY2VDb25maWcgVGhlIGRlZmF1bHQgY29uZmlnIGZvciB0aGUgaW5zdGFuY2VcbiAqL1xuZnVuY3Rpb24gQXhpb3MoaW5zdGFuY2VDb25maWcpIHtcbiAgdGhpcy5kZWZhdWx0cyA9IGluc3RhbmNlQ29uZmlnO1xuICB0aGlzLmludGVyY2VwdG9ycyA9IHtcbiAgICByZXF1ZXN0OiBuZXcgSW50ZXJjZXB0b3JNYW5hZ2VyKCksXG4gICAgcmVzcG9uc2U6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKVxuICB9O1xufVxuXG4vKipcbiAqIERpc3BhdGNoIGEgcmVxdWVzdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyBzcGVjaWZpYyBmb3IgdGhpcyByZXF1ZXN0IChtZXJnZWQgd2l0aCB0aGlzLmRlZmF1bHRzKVxuICovXG5BeGlvcy5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnT3JVcmwsIGNvbmZpZykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgLy8gQWxsb3cgZm9yIGF4aW9zKCdleGFtcGxlL3VybCdbLCBjb25maWddKSBhIGxhIGZldGNoIEFQSVxuICBpZiAodHlwZW9mIGNvbmZpZ09yVXJsID09PSAnc3RyaW5nJykge1xuICAgIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgICBjb25maWcudXJsID0gY29uZmlnT3JVcmw7XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnT3JVcmwgfHwge307XG4gIH1cblxuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuXG4gIC8vIFNldCBjb25maWcubWV0aG9kXG4gIGlmIChjb25maWcubWV0aG9kKSB7XG4gICAgY29uZmlnLm1ldGhvZCA9IGNvbmZpZy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIGlmICh0aGlzLmRlZmF1bHRzLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSB0aGlzLmRlZmF1bHRzLm1ldGhvZC50b0xvd2VyQ2FzZSgpO1xuICB9IGVsc2Uge1xuICAgIGNvbmZpZy5tZXRob2QgPSAnZ2V0JztcbiAgfVxuXG4gIHZhciB0cmFuc2l0aW9uYWwgPSBjb25maWcudHJhbnNpdGlvbmFsO1xuXG4gIGlmICh0cmFuc2l0aW9uYWwgIT09IHVuZGVmaW5lZCkge1xuICAgIHZhbGlkYXRvci5hc3NlcnRPcHRpb25zKHRyYW5zaXRpb25hbCwge1xuICAgICAgc2lsZW50SlNPTlBhcnNpbmc6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbiksXG4gICAgICBmb3JjZWRKU09OUGFyc2luZzogdmFsaWRhdG9ycy50cmFuc2l0aW9uYWwodmFsaWRhdG9ycy5ib29sZWFuKSxcbiAgICAgIGNsYXJpZnlUaW1lb3V0RXJyb3I6IHZhbGlkYXRvcnMudHJhbnNpdGlvbmFsKHZhbGlkYXRvcnMuYm9vbGVhbilcbiAgICB9LCBmYWxzZSk7XG4gIH1cblxuICAvLyBmaWx0ZXIgb3V0IHNraXBwZWQgaW50ZXJjZXB0b3JzXG4gIHZhciByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbiA9IFtdO1xuICB2YXIgc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzID0gdHJ1ZTtcbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgaWYgKHR5cGVvZiBpbnRlcmNlcHRvci5ydW5XaGVuID09PSAnZnVuY3Rpb24nICYmIGludGVyY2VwdG9yLnJ1bldoZW4oY29uZmlnKSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMgPSBzeW5jaHJvbm91c1JlcXVlc3RJbnRlcmNlcHRvcnMgJiYgaW50ZXJjZXB0b3Iuc3luY2hyb25vdXM7XG5cbiAgICByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbi51bnNoaWZ0KGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB2YXIgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluID0gW107XG4gIHRoaXMuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLmZvckVhY2goZnVuY3Rpb24gcHVzaFJlc3BvbnNlSW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnB1c2goaW50ZXJjZXB0b3IuZnVsZmlsbGVkLCBpbnRlcmNlcHRvci5yZWplY3RlZCk7XG4gIH0pO1xuXG4gIHZhciBwcm9taXNlO1xuXG4gIGlmICghc3luY2hyb25vdXNSZXF1ZXN0SW50ZXJjZXB0b3JzKSB7XG4gICAgdmFyIGNoYWluID0gW2Rpc3BhdGNoUmVxdWVzdCwgdW5kZWZpbmVkXTtcblxuICAgIEFycmF5LnByb3RvdHlwZS51bnNoaWZ0LmFwcGx5KGNoYWluLCByZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbik7XG4gICAgY2hhaW4gPSBjaGFpbi5jb25jYXQocmVzcG9uc2VJbnRlcmNlcHRvckNoYWluKTtcblxuICAgIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUoY29uZmlnKTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgICBwcm9taXNlID0gcHJvbWlzZS50aGVuKGNoYWluLnNoaWZ0KCksIGNoYWluLnNoaWZ0KCkpO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG5cblxuICB2YXIgbmV3Q29uZmlnID0gY29uZmlnO1xuICB3aGlsZSAocmVxdWVzdEludGVyY2VwdG9yQ2hhaW4ubGVuZ3RoKSB7XG4gICAgdmFyIG9uRnVsZmlsbGVkID0gcmVxdWVzdEludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKTtcbiAgICB2YXIgb25SZWplY3RlZCA9IHJlcXVlc3RJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCk7XG4gICAgdHJ5IHtcbiAgICAgIG5ld0NvbmZpZyA9IG9uRnVsZmlsbGVkKG5ld0NvbmZpZyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIG9uUmVqZWN0ZWQoZXJyb3IpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgdHJ5IHtcbiAgICBwcm9taXNlID0gZGlzcGF0Y2hSZXF1ZXN0KG5ld0NvbmZpZyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgfVxuXG4gIHdoaWxlIChyZXNwb25zZUludGVyY2VwdG9yQ2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihyZXNwb25zZUludGVyY2VwdG9yQ2hhaW4uc2hpZnQoKSwgcmVzcG9uc2VJbnRlcmNlcHRvckNoYWluLnNoaWZ0KCkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuXG5BeGlvcy5wcm90b3R5cGUuZ2V0VXJpID0gZnVuY3Rpb24gZ2V0VXJpKGNvbmZpZykge1xuICBjb25maWcgPSBtZXJnZUNvbmZpZyh0aGlzLmRlZmF1bHRzLCBjb25maWcpO1xuICB2YXIgZnVsbFBhdGggPSBidWlsZEZ1bGxQYXRoKGNvbmZpZy5iYXNlVVJMLCBjb25maWcudXJsKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGZ1bGxQYXRoLCBjb25maWcucGFyYW1zLCBjb25maWcucGFyYW1zU2VyaWFsaXplcik7XG59O1xuXG4vLyBQcm92aWRlIGFsaWFzZXMgZm9yIHN1cHBvcnRlZCByZXF1ZXN0IG1ldGhvZHNcbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAnb3B0aW9ucyddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICAvKmVzbGludCBmdW5jLW5hbWVzOjAqL1xuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKHVybCwgY29uZmlnKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChtZXJnZUNvbmZpZyhjb25maWcgfHwge30sIHtcbiAgICAgIG1ldGhvZDogbWV0aG9kLFxuICAgICAgdXJsOiB1cmwsXG4gICAgICBkYXRhOiAoY29uZmlnIHx8IHt9KS5kYXRhXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG5cbiAgZnVuY3Rpb24gZ2VuZXJhdGVIVFRQTWV0aG9kKGlzRm9ybSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBodHRwTWV0aG9kKHVybCwgZGF0YSwgY29uZmlnKSB7XG4gICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKGNvbmZpZyB8fCB7fSwge1xuICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgaGVhZGVyczogaXNGb3JtID8ge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YSdcbiAgICAgICAgfSA6IHt9LFxuICAgICAgICB1cmw6IHVybCxcbiAgICAgICAgZGF0YTogZGF0YVxuICAgICAgfSkpO1xuICAgIH07XG4gIH1cblxuICBBeGlvcy5wcm90b3R5cGVbbWV0aG9kXSA9IGdlbmVyYXRlSFRUUE1ldGhvZCgpO1xuXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2QgKyAnRm9ybSddID0gZ2VuZXJhdGVIVFRQTWV0aG9kKHRydWUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gQXhpb3M7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbi8qKlxuICogQ3JlYXRlIGFuIEVycm9yIHdpdGggdGhlIHNwZWNpZmllZCBtZXNzYWdlLCBjb25maWcsIGVycm9yIGNvZGUsIHJlcXVlc3QgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIFRoZSBlcnJvciBtZXNzYWdlLlxuICogQHBhcmFtIHtzdHJpbmd9IFtjb2RlXSBUaGUgZXJyb3IgY29kZSAoZm9yIGV4YW1wbGUsICdFQ09OTkFCT1JURUQnKS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbY29uZmlnXSBUaGUgY29uZmlnLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbmZ1bmN0aW9uIEF4aW9zRXJyb3IobWVzc2FnZSwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBFcnJvci5jYWxsKHRoaXMpO1xuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICB0aGlzLm5hbWUgPSAnQXhpb3NFcnJvcic7XG4gIGNvZGUgJiYgKHRoaXMuY29kZSA9IGNvZGUpO1xuICBjb25maWcgJiYgKHRoaXMuY29uZmlnID0gY29uZmlnKTtcbiAgcmVxdWVzdCAmJiAodGhpcy5yZXF1ZXN0ID0gcmVxdWVzdCk7XG4gIHJlc3BvbnNlICYmICh0aGlzLnJlc3BvbnNlID0gcmVzcG9uc2UpO1xufVxuXG51dGlscy5pbmhlcml0cyhBeGlvc0Vycm9yLCBFcnJvciwge1xuICB0b0pTT046IGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgLy8gU3RhbmRhcmRcbiAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgIC8vIE1pY3Jvc29mdFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBudW1iZXI6IHRoaXMubnVtYmVyLFxuICAgICAgLy8gTW96aWxsYVxuICAgICAgZmlsZU5hbWU6IHRoaXMuZmlsZU5hbWUsXG4gICAgICBsaW5lTnVtYmVyOiB0aGlzLmxpbmVOdW1iZXIsXG4gICAgICBjb2x1bW5OdW1iZXI6IHRoaXMuY29sdW1uTnVtYmVyLFxuICAgICAgc3RhY2s6IHRoaXMuc3RhY2ssXG4gICAgICAvLyBBeGlvc1xuICAgICAgY29uZmlnOiB0aGlzLmNvbmZpZyxcbiAgICAgIGNvZGU6IHRoaXMuY29kZSxcbiAgICAgIHN0YXR1czogdGhpcy5yZXNwb25zZSAmJiB0aGlzLnJlc3BvbnNlLnN0YXR1cyA/IHRoaXMucmVzcG9uc2Uuc3RhdHVzIDogbnVsbFxuICAgIH07XG4gIH1cbn0pO1xuXG52YXIgcHJvdG90eXBlID0gQXhpb3NFcnJvci5wcm90b3R5cGU7XG52YXIgZGVzY3JpcHRvcnMgPSB7fTtcblxuW1xuICAnRVJSX0JBRF9PUFRJT05fVkFMVUUnLFxuICAnRVJSX0JBRF9PUFRJT04nLFxuICAnRUNPTk5BQk9SVEVEJyxcbiAgJ0VUSU1FRE9VVCcsXG4gICdFUlJfTkVUV09SSycsXG4gICdFUlJfRlJfVE9PX01BTllfUkVESVJFQ1RTJyxcbiAgJ0VSUl9ERVBSRUNBVEVEJyxcbiAgJ0VSUl9CQURfUkVTUE9OU0UnLFxuICAnRVJSX0JBRF9SRVFVRVNUJyxcbiAgJ0VSUl9DQU5DRUxFRCdcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5dLmZvckVhY2goZnVuY3Rpb24oY29kZSkge1xuICBkZXNjcmlwdG9yc1tjb2RlXSA9IHt2YWx1ZTogY29kZX07XG59KTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoQXhpb3NFcnJvciwgZGVzY3JpcHRvcnMpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvdHlwZSwgJ2lzQXhpb3NFcnJvcicsIHt2YWx1ZTogdHJ1ZX0pO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuQXhpb3NFcnJvci5mcm9tID0gZnVuY3Rpb24oZXJyb3IsIGNvZGUsIGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UsIGN1c3RvbVByb3BzKSB7XG4gIHZhciBheGlvc0Vycm9yID0gT2JqZWN0LmNyZWF0ZShwcm90b3R5cGUpO1xuXG4gIHV0aWxzLnRvRmxhdE9iamVjdChlcnJvciwgYXhpb3NFcnJvciwgZnVuY3Rpb24gZmlsdGVyKG9iaikge1xuICAgIHJldHVybiBvYmogIT09IEVycm9yLnByb3RvdHlwZTtcbiAgfSk7XG5cbiAgQXhpb3NFcnJvci5jYWxsKGF4aW9zRXJyb3IsIGVycm9yLm1lc3NhZ2UsIGNvZGUsIGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UpO1xuXG4gIGF4aW9zRXJyb3IubmFtZSA9IGVycm9yLm5hbWU7XG5cbiAgY3VzdG9tUHJvcHMgJiYgT2JqZWN0LmFzc2lnbihheGlvc0Vycm9yLCBjdXN0b21Qcm9wcyk7XG5cbiAgcmV0dXJuIGF4aW9zRXJyb3I7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4aW9zRXJyb3I7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gSW50ZXJjZXB0b3JNYW5hZ2VyKCkge1xuICB0aGlzLmhhbmRsZXJzID0gW107XG59XG5cbi8qKlxuICogQWRkIGEgbmV3IGludGVyY2VwdG9yIHRvIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bGZpbGxlZCBUaGUgZnVuY3Rpb24gdG8gaGFuZGxlIGB0aGVuYCBmb3IgYSBgUHJvbWlzZWBcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHJlamVjdGAgZm9yIGEgYFByb21pc2VgXG4gKlxuICogQHJldHVybiB7TnVtYmVyfSBBbiBJRCB1c2VkIHRvIHJlbW92ZSBpbnRlcmNlcHRvciBsYXRlclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLnVzZSA9IGZ1bmN0aW9uIHVzZShmdWxmaWxsZWQsIHJlamVjdGVkLCBvcHRpb25zKSB7XG4gIHRoaXMuaGFuZGxlcnMucHVzaCh7XG4gICAgZnVsZmlsbGVkOiBmdWxmaWxsZWQsXG4gICAgcmVqZWN0ZWQ6IHJlamVjdGVkLFxuICAgIHN5bmNocm9ub3VzOiBvcHRpb25zID8gb3B0aW9ucy5zeW5jaHJvbm91cyA6IGZhbHNlLFxuICAgIHJ1bldoZW46IG9wdGlvbnMgPyBvcHRpb25zLnJ1bldoZW4gOiBudWxsXG4gIH0pO1xuICByZXR1cm4gdGhpcy5oYW5kbGVycy5sZW5ndGggLSAxO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgYW4gaW50ZXJjZXB0b3IgZnJvbSB0aGUgc3RhY2tcbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gaWQgVGhlIElEIHRoYXQgd2FzIHJldHVybmVkIGJ5IGB1c2VgXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUuZWplY3QgPSBmdW5jdGlvbiBlamVjdChpZCkge1xuICBpZiAodGhpcy5oYW5kbGVyc1tpZF0pIHtcbiAgICB0aGlzLmhhbmRsZXJzW2lkXSA9IG51bGw7XG4gIH1cbn07XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFsbCB0aGUgcmVnaXN0ZXJlZCBpbnRlcmNlcHRvcnNcbiAqXG4gKiBUaGlzIG1ldGhvZCBpcyBwYXJ0aWN1bGFybHkgdXNlZnVsIGZvciBza2lwcGluZyBvdmVyIGFueVxuICogaW50ZXJjZXB0b3JzIHRoYXQgbWF5IGhhdmUgYmVjb21lIGBudWxsYCBjYWxsaW5nIGBlamVjdGAuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIGNhbGwgZm9yIGVhY2ggaW50ZXJjZXB0b3JcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChmbikge1xuICB1dGlscy5mb3JFYWNoKHRoaXMuaGFuZGxlcnMsIGZ1bmN0aW9uIGZvckVhY2hIYW5kbGVyKGgpIHtcbiAgICBpZiAoaCAhPT0gbnVsbCkge1xuICAgICAgZm4oaCk7XG4gICAgfVxuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW50ZXJjZXB0b3JNYW5hZ2VyO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNBYnNvbHV0ZVVSTCA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTCcpO1xudmFyIGNvbWJpbmVVUkxzID0gcmVxdWlyZSgnLi4vaGVscGVycy9jb21iaW5lVVJMcycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIGZ1bGwgcGF0aFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkRnVsbFBhdGgoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKSB7XG4gIGlmIChiYXNlVVJMICYmICFpc0Fic29sdXRlVVJMKHJlcXVlc3RlZFVSTCkpIHtcbiAgICByZXR1cm4gY29tYmluZVVSTHMoYmFzZVVSTCwgcmVxdWVzdGVkVVJMKTtcbiAgfVxuICByZXR1cm4gcmVxdWVzdGVkVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xudmFyIHRyYW5zZm9ybURhdGEgPSByZXF1aXJlKCcuL3RyYW5zZm9ybURhdGEnKTtcbnZhciBpc0NhbmNlbCA9IHJlcXVpcmUoJy4uL2NhbmNlbC9pc0NhbmNlbCcpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi4vZGVmYXVsdHMnKTtcbnZhciBDYW5jZWxlZEVycm9yID0gcmVxdWlyZSgnLi4vY2FuY2VsL0NhbmNlbGVkRXJyb3InKTtcblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsZWRFcnJvcmAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cblxuICBpZiAoY29uZmlnLnNpZ25hbCAmJiBjb25maWcuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICB0aHJvdyBuZXcgQ2FuY2VsZWRFcnJvcigpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICogQHJldHVybnMge1Byb21pc2V9IFRoZSBQcm9taXNlIHRvIGJlIGZ1bGZpbGxlZFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGRpc3BhdGNoUmVxdWVzdChjb25maWcpIHtcbiAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gIC8vIEVuc3VyZSBoZWFkZXJzIGV4aXN0XG4gIGNvbmZpZy5oZWFkZXJzID0gY29uZmlnLmhlYWRlcnMgfHwge307XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICBjb25maWcsXG4gICAgY29uZmlnLmRhdGEsXG4gICAgY29uZmlnLmhlYWRlcnMsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICAvLyBGbGF0dGVuIGhlYWRlcnNcbiAgY29uZmlnLmhlYWRlcnMgPSB1dGlscy5tZXJnZShcbiAgICBjb25maWcuaGVhZGVycy5jb21tb24gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNbY29uZmlnLm1ldGhvZF0gfHwge30sXG4gICAgY29uZmlnLmhlYWRlcnNcbiAgKTtcblxuICB1dGlscy5mb3JFYWNoKFxuICAgIFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJywgJ2NvbW1vbiddLFxuICAgIGZ1bmN0aW9uIGNsZWFuSGVhZGVyQ29uZmlnKG1ldGhvZCkge1xuICAgICAgZGVsZXRlIGNvbmZpZy5oZWFkZXJzW21ldGhvZF07XG4gICAgfVxuICApO1xuXG4gIHZhciBhZGFwdGVyID0gY29uZmlnLmFkYXB0ZXIgfHwgZGVmYXVsdHMuYWRhcHRlcjtcblxuICByZXR1cm4gYWRhcHRlcihjb25maWcpLnRoZW4oZnVuY3Rpb24gb25BZGFwdGVyUmVzb2x1dGlvbihyZXNwb25zZSkge1xuICAgIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKTtcblxuICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgcmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgIGNvbmZpZyxcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhLmNhbGwoXG4gICAgICAgICAgY29uZmlnLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbi8qKlxuICogQ29uZmlnLXNwZWNpZmljIG1lcmdlLWZ1bmN0aW9uIHdoaWNoIGNyZWF0ZXMgYSBuZXcgY29uZmlnLW9iamVjdFxuICogYnkgbWVyZ2luZyB0d28gY29uZmlndXJhdGlvbiBvYmplY3RzIHRvZ2V0aGVyLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcxXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMlxuICogQHJldHVybnMge09iamVjdH0gTmV3IG9iamVjdCByZXN1bHRpbmcgZnJvbSBtZXJnaW5nIGNvbmZpZzIgdG8gY29uZmlnMVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKGNvbmZpZzEsIGNvbmZpZzIpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIGNvbmZpZzIgPSBjb25maWcyIHx8IHt9O1xuICB2YXIgY29uZmlnID0ge307XG5cbiAgZnVuY3Rpb24gZ2V0TWVyZ2VkVmFsdWUodGFyZ2V0LCBzb3VyY2UpIHtcbiAgICBpZiAodXRpbHMuaXNQbGFpbk9iamVjdCh0YXJnZXQpICYmIHV0aWxzLmlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHV0aWxzLm1lcmdlKHRhcmdldCwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHV0aWxzLm1lcmdlKHt9LCBzb3VyY2UpO1xuICAgIH0gZWxzZSBpZiAodXRpbHMuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gc291cmNlLnNsaWNlKCk7XG4gICAgfVxuICAgIHJldHVybiBzb3VyY2U7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgZnVuY3Rpb24gbWVyZ2VEZWVwUHJvcGVydGllcyhwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzFbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgZnVuY3Rpb24gdmFsdWVGcm9tQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIGZ1bmN0aW9uIGRlZmF1bHRUb0NvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZzFbcHJvcF0pKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcxW3Byb3BdKTtcbiAgICB9XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgZnVuY3Rpb24gbWVyZ2VEaXJlY3RLZXlzKHByb3ApIHtcbiAgICBpZiAocHJvcCBpbiBjb25maWcyKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmIChwcm9wIGluIGNvbmZpZzEpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfVxuXG4gIHZhciBtZXJnZU1hcCA9IHtcbiAgICAndXJsJzogdmFsdWVGcm9tQ29uZmlnMixcbiAgICAnbWV0aG9kJzogdmFsdWVGcm9tQ29uZmlnMixcbiAgICAnZGF0YSc6IHZhbHVlRnJvbUNvbmZpZzIsXG4gICAgJ2Jhc2VVUkwnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0cmFuc2Zvcm1SZXF1ZXN0JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndHJhbnNmb3JtUmVzcG9uc2UnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdwYXJhbXNTZXJpYWxpemVyJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAndGltZW91dCc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3RpbWVvdXRNZXNzYWdlJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnd2l0aENyZWRlbnRpYWxzJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnYWRhcHRlcic6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3Jlc3BvbnNlVHlwZSc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3hzcmZDb29raWVOYW1lJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAneHNyZkhlYWRlck5hbWUnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdvblVwbG9hZFByb2dyZXNzJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnb25Eb3dubG9hZFByb2dyZXNzJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnZGVjb21wcmVzcyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ21heENvbnRlbnRMZW5ndGgnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdtYXhCb2R5TGVuZ3RoJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnYmVmb3JlUmVkaXJlY3QnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICd0cmFuc3BvcnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdodHRwQWdlbnQnOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdodHRwc0FnZW50JzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAnY2FuY2VsVG9rZW4nOiBkZWZhdWx0VG9Db25maWcyLFxuICAgICdzb2NrZXRQYXRoJzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICAncmVzcG9uc2VFbmNvZGluZyc6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgJ3ZhbGlkYXRlU3RhdHVzJzogbWVyZ2VEaXJlY3RLZXlzXG4gIH07XG5cbiAgdXRpbHMuZm9yRWFjaChPYmplY3Qua2V5cyhjb25maWcxKS5jb25jYXQoT2JqZWN0LmtleXMoY29uZmlnMikpLCBmdW5jdGlvbiBjb21wdXRlQ29uZmlnVmFsdWUocHJvcCkge1xuICAgIHZhciBtZXJnZSA9IG1lcmdlTWFwW3Byb3BdIHx8IG1lcmdlRGVlcFByb3BlcnRpZXM7XG4gICAgdmFyIGNvbmZpZ1ZhbHVlID0gbWVyZ2UocHJvcCk7XG4gICAgKHV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZ1ZhbHVlKSAmJiBtZXJnZSAhPT0gbWVyZ2VEaXJlY3RLZXlzKSB8fCAoY29uZmlnW3Byb3BdID0gY29uZmlnVmFsdWUpO1xuICB9KTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIEF4aW9zRXJyb3IgPSByZXF1aXJlKCcuL0F4aW9zRXJyb3InKTtcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICB2YXIgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KG5ldyBBeGlvc0Vycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIFtBeGlvc0Vycm9yLkVSUl9CQURfUkVRVUVTVCwgQXhpb3NFcnJvci5FUlJfQkFEX1JFU1BPTlNFXVtNYXRoLmZsb29yKHJlc3BvbnNlLnN0YXR1cyAvIDEwMCkgLSA0XSxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICByZXNwb25zZVxuICAgICkpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgZGVmYXVsdHMgPSByZXF1aXJlKCcuLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIFRyYW5zZm9ybSB0aGUgZGF0YSBmb3IgYSByZXF1ZXN0IG9yIGEgcmVzcG9uc2VcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IGRhdGEgVGhlIGRhdGEgdG8gYmUgdHJhbnNmb3JtZWRcbiAqIEBwYXJhbSB7QXJyYXl9IGhlYWRlcnMgVGhlIGhlYWRlcnMgZm9yIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlXG4gKiBAcGFyYW0ge0FycmF5fEZ1bmN0aW9ufSBmbnMgQSBzaW5nbGUgZnVuY3Rpb24gb3IgQXJyYXkgb2YgZnVuY3Rpb25zXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHJlc3VsdGluZyB0cmFuc2Zvcm1lZCBkYXRhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdHJhbnNmb3JtRGF0YShkYXRhLCBoZWFkZXJzLCBmbnMpIHtcbiAgdmFyIGNvbnRleHQgPSB0aGlzIHx8IGRlZmF1bHRzO1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgdXRpbHMuZm9yRWFjaChmbnMsIGZ1bmN0aW9uIHRyYW5zZm9ybShmbikge1xuICAgIGRhdGEgPSBmbi5jYWxsKGNvbnRleHQsIGRhdGEsIGhlYWRlcnMpO1xuICB9KTtcblxuICByZXR1cm4gZGF0YTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG52YXIgbm9ybWFsaXplSGVhZGVyTmFtZSA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZScpO1xudmFyIEF4aW9zRXJyb3IgPSByZXF1aXJlKCcuLi9jb3JlL0F4aW9zRXJyb3InKTtcbnZhciB0cmFuc2l0aW9uYWxEZWZhdWx0cyA9IHJlcXVpcmUoJy4vdHJhbnNpdGlvbmFsJyk7XG52YXIgdG9Gb3JtRGF0YSA9IHJlcXVpcmUoJy4uL2hlbHBlcnMvdG9Gb3JtRGF0YScpO1xuXG52YXIgREVGQVVMVF9DT05URU5UX1RZUEUgPSB7XG4gICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ1xufTtcblxuZnVuY3Rpb24gc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsIHZhbHVlKSB7XG4gIGlmICghdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVycykgJiYgdXRpbHMuaXNVbmRlZmluZWQoaGVhZGVyc1snQ29udGVudC1UeXBlJ10pKSB7XG4gICAgaGVhZGVyc1snQ29udGVudC1UeXBlJ10gPSB2YWx1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREZWZhdWx0QWRhcHRlcigpIHtcbiAgdmFyIGFkYXB0ZXI7XG4gIGlmICh0eXBlb2YgWE1MSHR0cFJlcXVlc3QgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gRm9yIGJyb3dzZXJzIHVzZSBYSFIgYWRhcHRlclxuICAgIGFkYXB0ZXIgPSByZXF1aXJlKCcuLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4uL2FkYXB0ZXJzL2h0dHAnKTtcbiAgfVxuICByZXR1cm4gYWRhcHRlcjtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5U2FmZWx5KHJhd1ZhbHVlLCBwYXJzZXIsIGVuY29kZXIpIHtcbiAgaWYgKHV0aWxzLmlzU3RyaW5nKHJhd1ZhbHVlKSkge1xuICAgIHRyeSB7XG4gICAgICAocGFyc2VyIHx8IEpTT04ucGFyc2UpKHJhd1ZhbHVlKTtcbiAgICAgIHJldHVybiB1dGlscy50cmltKHJhd1ZhbHVlKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAoZS5uYW1lICE9PSAnU3ludGF4RXJyb3InKSB7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChlbmNvZGVyIHx8IEpTT04uc3RyaW5naWZ5KShyYXdWYWx1ZSk7XG59XG5cbnZhciBkZWZhdWx0cyA9IHtcblxuICB0cmFuc2l0aW9uYWw6IHRyYW5zaXRpb25hbERlZmF1bHRzLFxuXG4gIGFkYXB0ZXI6IGdldERlZmF1bHRBZGFwdGVyKCksXG5cbiAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlcXVlc3QoZGF0YSwgaGVhZGVycykge1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0FjY2VwdCcpO1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScpO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQXJyYXlCdWZmZXIoZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzQnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc1N0cmVhbShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNGaWxlKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0Jsb2IoZGF0YSlcbiAgICApIHtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICBpZiAodXRpbHMuaXNBcnJheUJ1ZmZlclZpZXcoZGF0YSkpIHtcbiAgICAgIHJldHVybiBkYXRhLmJ1ZmZlcjtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDtjaGFyc2V0PXV0Zi04Jyk7XG4gICAgICByZXR1cm4gZGF0YS50b1N0cmluZygpO1xuICAgIH1cblxuICAgIHZhciBpc09iamVjdFBheWxvYWQgPSB1dGlscy5pc09iamVjdChkYXRhKTtcbiAgICB2YXIgY29udGVudFR5cGUgPSBoZWFkZXJzICYmIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddO1xuXG4gICAgdmFyIGlzRmlsZUxpc3Q7XG5cbiAgICBpZiAoKGlzRmlsZUxpc3QgPSB1dGlscy5pc0ZpbGVMaXN0KGRhdGEpKSB8fCAoaXNPYmplY3RQYXlsb2FkICYmIGNvbnRlbnRUeXBlID09PSAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScpKSB7XG4gICAgICB2YXIgX0Zvcm1EYXRhID0gdGhpcy5lbnYgJiYgdGhpcy5lbnYuRm9ybURhdGE7XG4gICAgICByZXR1cm4gdG9Gb3JtRGF0YShpc0ZpbGVMaXN0ID8geydmaWxlc1tdJzogZGF0YX0gOiBkYXRhLCBfRm9ybURhdGEgJiYgbmV3IF9Gb3JtRGF0YSgpKTtcbiAgICB9IGVsc2UgaWYgKGlzT2JqZWN0UGF5bG9hZCB8fCBjb250ZW50VHlwZSA9PT0gJ2FwcGxpY2F0aW9uL2pzb24nKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgICAgIHJldHVybiBzdHJpbmdpZnlTYWZlbHkoZGF0YSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1dLFxuXG4gIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gdHJhbnNmb3JtUmVzcG9uc2UoZGF0YSkge1xuICAgIHZhciB0cmFuc2l0aW9uYWwgPSB0aGlzLnRyYW5zaXRpb25hbCB8fCBkZWZhdWx0cy50cmFuc2l0aW9uYWw7XG4gICAgdmFyIHNpbGVudEpTT05QYXJzaW5nID0gdHJhbnNpdGlvbmFsICYmIHRyYW5zaXRpb25hbC5zaWxlbnRKU09OUGFyc2luZztcbiAgICB2YXIgZm9yY2VkSlNPTlBhcnNpbmcgPSB0cmFuc2l0aW9uYWwgJiYgdHJhbnNpdGlvbmFsLmZvcmNlZEpTT05QYXJzaW5nO1xuICAgIHZhciBzdHJpY3RKU09OUGFyc2luZyA9ICFzaWxlbnRKU09OUGFyc2luZyAmJiB0aGlzLnJlc3BvbnNlVHlwZSA9PT0gJ2pzb24nO1xuXG4gICAgaWYgKHN0cmljdEpTT05QYXJzaW5nIHx8IChmb3JjZWRKU09OUGFyc2luZyAmJiB1dGlscy5pc1N0cmluZyhkYXRhKSAmJiBkYXRhLmxlbmd0aCkpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGRhdGEpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoc3RyaWN0SlNPTlBhcnNpbmcpIHtcbiAgICAgICAgICBpZiAoZS5uYW1lID09PSAnU3ludGF4RXJyb3InKSB7XG4gICAgICAgICAgICB0aHJvdyBBeGlvc0Vycm9yLmZyb20oZSwgQXhpb3NFcnJvci5FUlJfQkFEX1JFU1BPTlNFLCB0aGlzLCBudWxsLCB0aGlzLnJlc3BvbnNlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICAvKipcbiAgICogQSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byBhYm9ydCBhIHJlcXVlc3QuIElmIHNldCB0byAwIChkZWZhdWx0KSBhXG4gICAqIHRpbWVvdXQgaXMgbm90IGNyZWF0ZWQuXG4gICAqL1xuICB0aW1lb3V0OiAwLFxuXG4gIHhzcmZDb29raWVOYW1lOiAnWFNSRi1UT0tFTicsXG4gIHhzcmZIZWFkZXJOYW1lOiAnWC1YU1JGLVRPS0VOJyxcblxuICBtYXhDb250ZW50TGVuZ3RoOiAtMSxcbiAgbWF4Qm9keUxlbmd0aDogLTEsXG5cbiAgZW52OiB7XG4gICAgRm9ybURhdGE6IHJlcXVpcmUoJy4vZW52L0Zvcm1EYXRhJylcbiAgfSxcblxuICB2YWxpZGF0ZVN0YXR1czogZnVuY3Rpb24gdmFsaWRhdGVTdGF0dXMoc3RhdHVzKSB7XG4gICAgcmV0dXJuIHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwO1xuICB9LFxuXG4gIGhlYWRlcnM6IHtcbiAgICBjb21tb246IHtcbiAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICAgIH1cbiAgfVxufTtcblxudXRpbHMuZm9yRWFjaChbJ2RlbGV0ZScsICdnZXQnLCAnaGVhZCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kTm9EYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB7fTtcbn0pO1xuXG51dGlscy5mb3JFYWNoKFsncG9zdCcsICdwdXQnLCAncGF0Y2gnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZFdpdGhEYXRhKG1ldGhvZCkge1xuICBkZWZhdWx0cy5oZWFkZXJzW21ldGhvZF0gPSB1dGlscy5tZXJnZShERUZBVUxUX0NPTlRFTlRfVFlQRSk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBkZWZhdWx0cztcbiIsIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNpbGVudEpTT05QYXJzaW5nOiB0cnVlLFxuICBmb3JjZWRKU09OUGFyc2luZzogdHJ1ZSxcbiAgY2xhcmlmeVRpbWVvdXRFcnJvcjogZmFsc2Vcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgXCJ2ZXJzaW9uXCI6IFwiMC4yNy4yXCJcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJpbmQoZm4sIHRoaXNBcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm4uYXBwbHkodGhpc0FyZywgYXJncyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbmZ1bmN0aW9uIGVuY29kZSh2YWwpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWwpLlxuICAgIHJlcGxhY2UoLyUzQS9naSwgJzonKS5cbiAgICByZXBsYWNlKC8lMjQvZywgJyQnKS5cbiAgICByZXBsYWNlKC8lMkMvZ2ksICcsJykuXG4gICAgcmVwbGFjZSgvJTIwL2csICcrJykuXG4gICAgcmVwbGFjZSgvJTVCL2dpLCAnWycpLlxuICAgIHJlcGxhY2UoLyU1RC9naSwgJ10nKTtcbn1cblxuLyoqXG4gKiBCdWlsZCBhIFVSTCBieSBhcHBlbmRpbmcgcGFyYW1zIHRvIHRoZSBlbmRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsIFRoZSBiYXNlIG9mIHRoZSB1cmwgKGUuZy4sIGh0dHA6Ly93d3cuZ29vZ2xlLmNvbSlcbiAqIEBwYXJhbSB7b2JqZWN0fSBbcGFyYW1zXSBUaGUgcGFyYW1zIHRvIGJlIGFwcGVuZGVkXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJ1aWxkVVJMKHVybCwgcGFyYW1zLCBwYXJhbXNTZXJpYWxpemVyKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICBpZiAoIXBhcmFtcykge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB2YXIgc2VyaWFsaXplZFBhcmFtcztcbiAgaWYgKHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zU2VyaWFsaXplcihwYXJhbXMpO1xuICB9IGVsc2UgaWYgKHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykpIHtcbiAgICBzZXJpYWxpemVkUGFyYW1zID0gcGFyYW1zLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHBhcnRzID0gW107XG5cbiAgICB1dGlscy5mb3JFYWNoKHBhcmFtcywgZnVuY3Rpb24gc2VyaWFsaXplKHZhbCwga2V5KSB7XG4gICAgICBpZiAodmFsID09PSBudWxsIHx8IHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHV0aWxzLmlzQXJyYXkodmFsKSkge1xuICAgICAgICBrZXkgPSBrZXkgKyAnW10nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsID0gW3ZhbF07XG4gICAgICB9XG5cbiAgICAgIHV0aWxzLmZvckVhY2godmFsLCBmdW5jdGlvbiBwYXJzZVZhbHVlKHYpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzRGF0ZSh2KSkge1xuICAgICAgICAgIHYgPSB2LnRvSVNPU3RyaW5nKCk7XG4gICAgICAgIH0gZWxzZSBpZiAodXRpbHMuaXNPYmplY3QodikpIHtcbiAgICAgICAgICB2ID0gSlNPTi5zdHJpbmdpZnkodik7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMucHVzaChlbmNvZGUoa2V5KSArICc9JyArIGVuY29kZSh2KSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJ0cy5qb2luKCcmJyk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIHZhciBoYXNobWFya0luZGV4ID0gdXJsLmluZGV4T2YoJyMnKTtcbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG5cbiAgICB1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPT09IC0xID8gJz8nIDogJyYnKSArIHNlcmlhbGl6ZWRQYXJhbXM7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFVSTCBieSBjb21iaW5pbmcgdGhlIHNwZWNpZmllZCBVUkxzXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVsYXRpdmVVUkwgVGhlIHJlbGF0aXZlIFVSTFxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvbWJpbmVVUkxzKGJhc2VVUkwsIHJlbGF0aXZlVVJMKSB7XG4gIHJldHVybiByZWxhdGl2ZVVSTFxuICAgID8gYmFzZVVSTC5yZXBsYWNlKC9cXC8rJC8sICcnKSArICcvJyArIHJlbGF0aXZlVVJMLnJlcGxhY2UoL15cXC8rLywgJycpXG4gICAgOiBiYXNlVVJMO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChcbiAgdXRpbHMuaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSA/XG5cbiAgLy8gU3RhbmRhcmQgYnJvd3NlciBlbnZzIHN1cHBvcnQgZG9jdW1lbnQuY29va2llXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZShuYW1lLCB2YWx1ZSwgZXhwaXJlcywgcGF0aCwgZG9tYWluLCBzZWN1cmUpIHtcbiAgICAgICAgICB2YXIgY29va2llID0gW107XG4gICAgICAgICAgY29va2llLnB1c2gobmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkpO1xuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzTnVtYmVyKGV4cGlyZXMpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKHBhdGgpKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgncGF0aD0nICsgcGF0aCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHV0aWxzLmlzU3RyaW5nKGRvbWFpbikpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdkb21haW49JyArIGRvbWFpbik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKHNlY3VyZSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ3NlY3VyZScpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IGNvb2tpZS5qb2luKCc7ICcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQobmFtZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICAgICAgcmV0dXJuIChtYXRjaCA/IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFszXSkgOiBudWxsKTtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShuYW1lKSB7XG4gICAgICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnYgKHdlYiB3b3JrZXJzLCByZWFjdC1uYXRpdmUpIGxhY2sgbmVlZGVkIHN1cHBvcnQuXG4gICAgKGZ1bmN0aW9uIG5vblN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdyaXRlOiBmdW5jdGlvbiB3cml0ZSgpIHt9LFxuICAgICAgICByZWFkOiBmdW5jdGlvbiByZWFkKCkgeyByZXR1cm4gbnVsbDsgfSxcbiAgICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgICAgfTtcbiAgICB9KSgpXG4pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGQrXFwtLl0qOik/XFwvXFwvL2kudGVzdCh1cmwpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3NcbiAqXG4gKiBAcGFyYW0geyp9IHBheWxvYWQgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBwYXlsb2FkIGlzIGFuIGVycm9yIHRocm93biBieSBBeGlvcywgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBeGlvc0Vycm9yKHBheWxvYWQpIHtcbiAgcmV0dXJuIHV0aWxzLmlzT2JqZWN0KHBheWxvYWQpICYmIChwYXlsb2FkLmlzQXhpb3NFcnJvciA9PT0gdHJ1ZSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3RcbiAgLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgICAgZnVuY3Rpb24gcmVzb2x2ZVVSTCh1cmwpIHtcbiAgICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuICAgICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG5cbiAgICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsXG4gICAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cXD8vLCAnJykgOiAnJyxcbiAgICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgICBwb3J0OiB1cmxQYXJzaW5nTm9kZS5wb3J0LFxuICAgICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4ocmVxdWVzdFVSTCkge1xuICAgICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBub3JtYWxpemVIZWFkZXJOYW1lKGhlYWRlcnMsIG5vcm1hbGl6ZWROYW1lKSB7XG4gIHV0aWxzLmZvckVhY2goaGVhZGVycywgZnVuY3Rpb24gcHJvY2Vzc0hlYWRlcih2YWx1ZSwgbmFtZSkge1xuICAgIGlmIChuYW1lICE9PSBub3JtYWxpemVkTmFtZSAmJiBuYW1lLnRvVXBwZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWROYW1lLnRvVXBwZXJDYXNlKCkpIHtcbiAgICAgIGhlYWRlcnNbbm9ybWFsaXplZE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWxldGUgaGVhZGVyc1tuYW1lXTtcbiAgICB9XG4gIH0pO1xufTtcbiIsIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzdHJpY3Rcbm1vZHVsZS5leHBvcnRzID0gbnVsbDtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG4vLyBIZWFkZXJzIHdob3NlIGR1cGxpY2F0ZXMgYXJlIGlnbm9yZWQgYnkgbm9kZVxuLy8gYy5mLiBodHRwczovL25vZGVqcy5vcmcvYXBpL2h0dHAuaHRtbCNodHRwX21lc3NhZ2VfaGVhZGVyc1xudmFyIGlnbm9yZUR1cGxpY2F0ZU9mID0gW1xuICAnYWdlJywgJ2F1dGhvcml6YXRpb24nLCAnY29udGVudC1sZW5ndGgnLCAnY29udGVudC10eXBlJywgJ2V0YWcnLFxuICAnZXhwaXJlcycsICdmcm9tJywgJ2hvc3QnLCAnaWYtbW9kaWZpZWQtc2luY2UnLCAnaWYtdW5tb2RpZmllZC1zaW5jZScsXG4gICdsYXN0LW1vZGlmaWVkJywgJ2xvY2F0aW9uJywgJ21heC1mb3J3YXJkcycsICdwcm94eS1hdXRob3JpemF0aW9uJyxcbiAgJ3JlZmVyZXInLCAncmV0cnktYWZ0ZXInLCAndXNlci1hZ2VudCdcbl07XG5cbi8qKlxuICogUGFyc2UgaGVhZGVycyBpbnRvIGFuIG9iamVjdFxuICpcbiAqIGBgYFxuICogRGF0ZTogV2VkLCAyNyBBdWcgMjAxNCAwODo1ODo0OSBHTVRcbiAqIENvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuICogQ29ubmVjdGlvbjoga2VlcC1hbGl2ZVxuICogVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWRcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBoZWFkZXJzIEhlYWRlcnMgbmVlZGluZyB0byBiZSBwYXJzZWRcbiAqIEByZXR1cm5zIHtPYmplY3R9IEhlYWRlcnMgcGFyc2VkIGludG8gYW4gb2JqZWN0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2VIZWFkZXJzKGhlYWRlcnMpIHtcbiAgdmFyIHBhcnNlZCA9IHt9O1xuICB2YXIga2V5O1xuICB2YXIgdmFsO1xuICB2YXIgaTtcblxuICBpZiAoIWhlYWRlcnMpIHsgcmV0dXJuIHBhcnNlZDsgfVxuXG4gIHV0aWxzLmZvckVhY2goaGVhZGVycy5zcGxpdCgnXFxuJyksIGZ1bmN0aW9uIHBhcnNlcihsaW5lKSB7XG4gICAgaSA9IGxpbmUuaW5kZXhPZignOicpO1xuICAgIGtleSA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoMCwgaSkpLnRvTG93ZXJDYXNlKCk7XG4gICAgdmFsID0gdXRpbHMudHJpbShsaW5lLnN1YnN0cihpICsgMSkpO1xuXG4gICAgaWYgKGtleSkge1xuICAgICAgaWYgKHBhcnNlZFtrZXldICYmIGlnbm9yZUR1cGxpY2F0ZU9mLmluZGV4T2Yoa2V5KSA+PSAwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICBwYXJzZWRba2V5XSA9IChwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldIDogW10pLmNvbmNhdChbdmFsXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwYXJzZWRba2V5XSA9IHBhcnNlZFtrZXldID8gcGFyc2VkW2tleV0gKyAnLCAnICsgdmFsIDogdmFsO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHBhcnNlZDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGFyc2VQcm90b2NvbCh1cmwpIHtcbiAgdmFyIG1hdGNoID0gL14oWy0rXFx3XXsxLDI1fSkoOj9cXC9cXC98OikvLmV4ZWModXJsKTtcbiAgcmV0dXJuIG1hdGNoICYmIG1hdGNoWzFdIHx8ICcnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTeW50YWN0aWMgc3VnYXIgZm9yIGludm9raW5nIGEgZnVuY3Rpb24gYW5kIGV4cGFuZGluZyBhbiBhcnJheSBmb3IgYXJndW1lbnRzLlxuICpcbiAqIENvbW1vbiB1c2UgY2FzZSB3b3VsZCBiZSB0byB1c2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseWAuXG4gKlxuICogIGBgYGpzXG4gKiAgZnVuY3Rpb24gZih4LCB5LCB6KSB7fVxuICogIHZhciBhcmdzID0gWzEsIDIsIDNdO1xuICogIGYuYXBwbHkobnVsbCwgYXJncyk7XG4gKiAgYGBgXG4gKlxuICogV2l0aCBgc3ByZWFkYCB0aGlzIGV4YW1wbGUgY2FuIGJlIHJlLXdyaXR0ZW4uXG4gKlxuICogIGBgYGpzXG4gKiAgc3ByZWFkKGZ1bmN0aW9uKHgsIHksIHopIHt9KShbMSwgMiwgM10pO1xuICogIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc3ByZWFkKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKGFycikge1xuICAgIHJldHVybiBjYWxsYmFjay5hcHBseShudWxsLCBhcnIpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb252ZXJ0IGEgZGF0YSBvYmplY3QgdG8gRm9ybURhdGFcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcbiAqIEBwYXJhbSB7P09iamVjdH0gW2Zvcm1EYXRhXVxuICogQHJldHVybnMge09iamVjdH1cbiAqKi9cblxuZnVuY3Rpb24gdG9Gb3JtRGF0YShvYmosIGZvcm1EYXRhKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICBmb3JtRGF0YSA9IGZvcm1EYXRhIHx8IG5ldyBGb3JtRGF0YSgpO1xuXG4gIHZhciBzdGFjayA9IFtdO1xuXG4gIGZ1bmN0aW9uIGNvbnZlcnRWYWx1ZSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkgcmV0dXJuICcnO1xuXG4gICAgaWYgKHV0aWxzLmlzRGF0ZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZS50b0lTT1N0cmluZygpO1xuICAgIH1cblxuICAgIGlmICh1dGlscy5pc0FycmF5QnVmZmVyKHZhbHVlKSB8fCB1dGlscy5pc1R5cGVkQXJyYXkodmFsdWUpKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIEJsb2IgPT09ICdmdW5jdGlvbicgPyBuZXcgQmxvYihbdmFsdWVdKSA6IEJ1ZmZlci5mcm9tKHZhbHVlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cblxuICBmdW5jdGlvbiBidWlsZChkYXRhLCBwYXJlbnRLZXkpIHtcbiAgICBpZiAodXRpbHMuaXNQbGFpbk9iamVjdChkYXRhKSB8fCB1dGlscy5pc0FycmF5KGRhdGEpKSB7XG4gICAgICBpZiAoc3RhY2suaW5kZXhPZihkYXRhKSAhPT0gLTEpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoJ0NpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3RlZCBpbiAnICsgcGFyZW50S2V5KTtcbiAgICAgIH1cblxuICAgICAgc3RhY2sucHVzaChkYXRhKTtcblxuICAgICAgdXRpbHMuZm9yRWFjaChkYXRhLCBmdW5jdGlvbiBlYWNoKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgaWYgKHV0aWxzLmlzVW5kZWZpbmVkKHZhbHVlKSkgcmV0dXJuO1xuICAgICAgICB2YXIgZnVsbEtleSA9IHBhcmVudEtleSA/IHBhcmVudEtleSArICcuJyArIGtleSA6IGtleTtcbiAgICAgICAgdmFyIGFycjtcblxuICAgICAgICBpZiAodmFsdWUgJiYgIXBhcmVudEtleSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgaWYgKHV0aWxzLmVuZHNXaXRoKGtleSwgJ3t9JykpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICAgICAgdmFsdWUgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgICAgICAgfSBlbHNlIGlmICh1dGlscy5lbmRzV2l0aChrZXksICdbXScpICYmIChhcnIgPSB1dGlscy50b0FycmF5KHZhbHVlKSkpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgICAgICAgICBhcnIuZm9yRWFjaChmdW5jdGlvbihlbCkge1xuICAgICAgICAgICAgICAhdXRpbHMuaXNVbmRlZmluZWQoZWwpICYmIGZvcm1EYXRhLmFwcGVuZChmdWxsS2V5LCBjb252ZXJ0VmFsdWUoZWwpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGJ1aWxkKHZhbHVlLCBmdWxsS2V5KTtcbiAgICAgIH0pO1xuXG4gICAgICBzdGFjay5wb3AoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9ybURhdGEuYXBwZW5kKHBhcmVudEtleSwgY29udmVydFZhbHVlKGRhdGEpKTtcbiAgICB9XG4gIH1cblxuICBidWlsZChvYmopO1xuXG4gIHJldHVybiBmb3JtRGF0YTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0b0Zvcm1EYXRhO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgVkVSU0lPTiA9IHJlcXVpcmUoJy4uL2Vudi9kYXRhJykudmVyc2lvbjtcbnZhciBBeGlvc0Vycm9yID0gcmVxdWlyZSgnLi4vY29yZS9BeGlvc0Vycm9yJyk7XG5cbnZhciB2YWxpZGF0b3JzID0ge307XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5bJ29iamVjdCcsICdib29sZWFuJywgJ251bWJlcicsICdmdW5jdGlvbicsICdzdHJpbmcnLCAnc3ltYm9sJ10uZm9yRWFjaChmdW5jdGlvbih0eXBlLCBpKSB7XG4gIHZhbGlkYXRvcnNbdHlwZV0gPSBmdW5jdGlvbiB2YWxpZGF0b3IodGhpbmcpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaW5nID09PSB0eXBlIHx8ICdhJyArIChpIDwgMSA/ICduICcgOiAnICcpICsgdHlwZTtcbiAgfTtcbn0pO1xuXG52YXIgZGVwcmVjYXRlZFdhcm5pbmdzID0ge307XG5cbi8qKlxuICogVHJhbnNpdGlvbmFsIG9wdGlvbiB2YWxpZGF0b3JcbiAqIEBwYXJhbSB7ZnVuY3Rpb258Ym9vbGVhbj99IHZhbGlkYXRvciAtIHNldCB0byBmYWxzZSBpZiB0aGUgdHJhbnNpdGlvbmFsIG9wdGlvbiBoYXMgYmVlbiByZW1vdmVkXG4gKiBAcGFyYW0ge3N0cmluZz99IHZlcnNpb24gLSBkZXByZWNhdGVkIHZlcnNpb24gLyByZW1vdmVkIHNpbmNlIHZlcnNpb25cbiAqIEBwYXJhbSB7c3RyaW5nP30gbWVzc2FnZSAtIHNvbWUgbWVzc2FnZSB3aXRoIGFkZGl0aW9uYWwgaW5mb1xuICogQHJldHVybnMge2Z1bmN0aW9ufVxuICovXG52YWxpZGF0b3JzLnRyYW5zaXRpb25hbCA9IGZ1bmN0aW9uIHRyYW5zaXRpb25hbCh2YWxpZGF0b3IsIHZlcnNpb24sIG1lc3NhZ2UpIHtcbiAgZnVuY3Rpb24gZm9ybWF0TWVzc2FnZShvcHQsIGRlc2MpIHtcbiAgICByZXR1cm4gJ1tBeGlvcyB2JyArIFZFUlNJT04gKyAnXSBUcmFuc2l0aW9uYWwgb3B0aW9uIFxcJycgKyBvcHQgKyAnXFwnJyArIGRlc2MgKyAobWVzc2FnZSA/ICcuICcgKyBtZXNzYWdlIDogJycpO1xuICB9XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCBvcHQsIG9wdHMpIHtcbiAgICBpZiAodmFsaWRhdG9yID09PSBmYWxzZSkge1xuICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoXG4gICAgICAgIGZvcm1hdE1lc3NhZ2Uob3B0LCAnIGhhcyBiZWVuIHJlbW92ZWQnICsgKHZlcnNpb24gPyAnIGluICcgKyB2ZXJzaW9uIDogJycpKSxcbiAgICAgICAgQXhpb3NFcnJvci5FUlJfREVQUkVDQVRFRFxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAodmVyc2lvbiAmJiAhZGVwcmVjYXRlZFdhcm5pbmdzW29wdF0pIHtcbiAgICAgIGRlcHJlY2F0ZWRXYXJuaW5nc1tvcHRdID0gdHJ1ZTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIGZvcm1hdE1lc3NhZ2UoXG4gICAgICAgICAgb3B0LFxuICAgICAgICAgICcgaGFzIGJlZW4gZGVwcmVjYXRlZCBzaW5jZSB2JyArIHZlcnNpb24gKyAnIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5lYXIgZnV0dXJlJ1xuICAgICAgICApXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB2YWxpZGF0b3IgPyB2YWxpZGF0b3IodmFsdWUsIG9wdCwgb3B0cykgOiB0cnVlO1xuICB9O1xufTtcblxuLyoqXG4gKiBBc3NlcnQgb2JqZWN0J3MgcHJvcGVydGllcyB0eXBlXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtvYmplY3R9IHNjaGVtYVxuICogQHBhcmFtIHtib29sZWFuP30gYWxsb3dVbmtub3duXG4gKi9cblxuZnVuY3Rpb24gYXNzZXJ0T3B0aW9ucyhvcHRpb25zLCBzY2hlbWEsIGFsbG93VW5rbm93bikge1xuICBpZiAodHlwZW9mIG9wdGlvbnMgIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoJ29wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QnLCBBeGlvc0Vycm9yLkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtcbiAgfVxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICB2YXIgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tID4gMCkge1xuICAgIHZhciBvcHQgPSBrZXlzW2ldO1xuICAgIHZhciB2YWxpZGF0b3IgPSBzY2hlbWFbb3B0XTtcbiAgICBpZiAodmFsaWRhdG9yKSB7XG4gICAgICB2YXIgdmFsdWUgPSBvcHRpb25zW29wdF07XG4gICAgICB2YXIgcmVzdWx0ID0gdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWxpZGF0b3IodmFsdWUsIG9wdCwgb3B0aW9ucyk7XG4gICAgICBpZiAocmVzdWx0ICE9PSB0cnVlKSB7XG4gICAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdvcHRpb24gJyArIG9wdCArICcgbXVzdCBiZSAnICsgcmVzdWx0LCBBeGlvc0Vycm9yLkVSUl9CQURfT1BUSU9OX1ZBTFVFKTtcbiAgICAgIH1cbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoYWxsb3dVbmtub3duICE9PSB0cnVlKSB7XG4gICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcignVW5rbm93biBvcHRpb24gJyArIG9wdCwgQXhpb3NFcnJvci5FUlJfQkFEX09QVElPTik7XG4gICAgfVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBhc3NlcnRPcHRpb25zOiBhc3NlcnRPcHRpb25zLFxuICB2YWxpZGF0b3JzOiB2YWxpZGF0b3JzXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG5cbi8vIHV0aWxzIGlzIGEgbGlicmFyeSBvZiBnZW5lcmljIGhlbHBlciBmdW5jdGlvbnMgbm9uLXNwZWNpZmljIHRvIGF4aW9zXG5cbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG52YXIga2luZE9mID0gKGZ1bmN0aW9uKGNhY2hlKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHJldHVybiBmdW5jdGlvbih0aGluZykge1xuICAgIHZhciBzdHIgPSB0b1N0cmluZy5jYWxsKHRoaW5nKTtcbiAgICByZXR1cm4gY2FjaGVbc3RyXSB8fCAoY2FjaGVbc3RyXSA9IHN0ci5zbGljZSg4LCAtMSkudG9Mb3dlckNhc2UoKSk7XG4gIH07XG59KShPYmplY3QuY3JlYXRlKG51bGwpKTtcblxuZnVuY3Rpb24ga2luZE9mVGVzdCh0eXBlKSB7XG4gIHR5cGUgPSB0eXBlLnRvTG93ZXJDYXNlKCk7XG4gIHJldHVybiBmdW5jdGlvbiBpc0tpbmRPZih0aGluZykge1xuICAgIHJldHVybiBraW5kT2YodGhpbmcpID09PSB0eXBlO1xuICB9O1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXksIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5KHZhbCkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIHVuZGVmaW5lZFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSB2YWx1ZSBpcyB1bmRlZmluZWQsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgQnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlcih2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gbnVsbCAmJiAhaXNVbmRlZmluZWQodmFsKSAmJiB2YWwuY29uc3RydWN0b3IgIT09IG51bGwgJiYgIWlzVW5kZWZpbmVkKHZhbC5jb25zdHJ1Y3RvcilcbiAgICAmJiB0eXBlb2YgdmFsLmNvbnN0cnVjdG9yLmlzQnVmZmVyID09PSAnZnVuY3Rpb24nICYmIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlcih2YWwpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbnZhciBpc0FycmF5QnVmZmVyID0ga2luZE9mVGVzdCgnQXJyYXlCdWZmZXInKTtcblxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlclxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgdmlldyBvbiBhbiBBcnJheUJ1ZmZlciwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KHZhbCkge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoKHR5cGVvZiBBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpICYmIChBcnJheUJ1ZmZlci5pc1ZpZXcpKSB7XG4gICAgcmVzdWx0ID0gQXJyYXlCdWZmZXIuaXNWaWV3KHZhbCk7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gKHZhbCkgJiYgKHZhbC5idWZmZXIpICYmIChpc0FycmF5QnVmZmVyKHZhbC5idWZmZXIpKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyaW5nXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJpbmcsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgTnVtYmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBOdW1iZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc051bWJlcih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgcGxhaW4gT2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsKSB7XG4gIGlmIChraW5kT2YodmFsKSAhPT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgcHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHZhbCk7XG4gIHJldHVybiBwcm90b3R5cGUgPT09IG51bGwgfHwgcHJvdG90eXBlID09PSBPYmplY3QucHJvdG90eXBlO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRGF0ZVxuICpcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBEYXRlLCBvdGhlcndpc2UgZmFsc2VcbiAqL1xudmFyIGlzRGF0ZSA9IGtpbmRPZlRlc3QoJ0RhdGUnKTtcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZpbGVcbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRmlsZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbnZhciBpc0ZpbGUgPSBraW5kT2ZUZXN0KCdGaWxlJyk7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBCbG9iXG4gKlxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEJsb2IsIG90aGVyd2lzZSBmYWxzZVxuICovXG52YXIgaXNCbG9iID0ga2luZE9mVGVzdCgnQmxvYicpO1xuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRmlsZUxpc3RcbiAqXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGEgRmlsZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbnZhciBpc0ZpbGVMaXN0ID0ga2luZE9mVGVzdCgnRmlsZUxpc3QnKTtcblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGdW5jdGlvbiwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBTdHJlYW1cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFN0cmVhbSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3RyZWFtKHZhbCkge1xuICByZXR1cm4gaXNPYmplY3QodmFsKSAmJiBpc0Z1bmN0aW9uKHZhbC5waXBlKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZvcm1EYXRhXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHRoaW5nIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBGb3JtRGF0YSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRm9ybURhdGEodGhpbmcpIHtcbiAgdmFyIHBhdHRlcm4gPSAnW29iamVjdCBGb3JtRGF0YV0nO1xuICByZXR1cm4gdGhpbmcgJiYgKFxuICAgICh0eXBlb2YgRm9ybURhdGEgPT09ICdmdW5jdGlvbicgJiYgdGhpbmcgaW5zdGFuY2VvZiBGb3JtRGF0YSkgfHxcbiAgICB0b1N0cmluZy5jYWxsKHRoaW5nKSA9PT0gcGF0dGVybiB8fFxuICAgIChpc0Z1bmN0aW9uKHRoaW5nLnRvU3RyaW5nKSAmJiB0aGluZy50b1N0cmluZygpID09PSBwYXR0ZXJuKVxuICApO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgVVJMU2VhcmNoUGFyYW1zIG9iamVjdFxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG52YXIgaXNVUkxTZWFyY2hQYXJhbXMgPSBraW5kT2ZUZXN0KCdVUkxTZWFyY2hQYXJhbXMnKTtcblxuLyoqXG4gKiBUcmltIGV4Y2VzcyB3aGl0ZXNwYWNlIG9mZiB0aGUgYmVnaW5uaW5nIGFuZCBlbmQgb2YgYSBzdHJpbmdcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyIFRoZSBTdHJpbmcgdG8gdHJpbVxuICogQHJldHVybnMge1N0cmluZ30gVGhlIFN0cmluZyBmcmVlZCBvZiBleGNlc3Mgd2hpdGVzcGFjZVxuICovXG5mdW5jdGlvbiB0cmltKHN0cikge1xuICByZXR1cm4gc3RyLnRyaW0gPyBzdHIudHJpbSgpIDogc3RyLnJlcGxhY2UoL15cXHMrfFxccyskL2csICcnKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgd2UncmUgcnVubmluZyBpbiBhIHN0YW5kYXJkIGJyb3dzZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBUaGlzIGFsbG93cyBheGlvcyB0byBydW4gaW4gYSB3ZWIgd29ya2VyLCBhbmQgcmVhY3QtbmF0aXZlLlxuICogQm90aCBlbnZpcm9ubWVudHMgc3VwcG9ydCBYTUxIdHRwUmVxdWVzdCwgYnV0IG5vdCBmdWxseSBzdGFuZGFyZCBnbG9iYWxzLlxuICpcbiAqIHdlYiB3b3JrZXJzOlxuICogIHR5cGVvZiB3aW5kb3cgLT4gdW5kZWZpbmVkXG4gKiAgdHlwZW9mIGRvY3VtZW50IC0+IHVuZGVmaW5lZFxuICpcbiAqIHJlYWN0LW5hdGl2ZTpcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnUmVhY3ROYXRpdmUnXG4gKiBuYXRpdmVzY3JpcHRcbiAqICBuYXZpZ2F0b3IucHJvZHVjdCAtPiAnTmF0aXZlU2NyaXB0JyBvciAnTlMnXG4gKi9cbmZ1bmN0aW9uIGlzU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgKG5hdmlnYXRvci5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOYXRpdmVTY3JpcHQnIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdOUycpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnXG4gICk7XG59XG5cbi8qKlxuICogSXRlcmF0ZSBvdmVyIGFuIEFycmF5IG9yIGFuIE9iamVjdCBpbnZva2luZyBhIGZ1bmN0aW9uIGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgYG9iamAgaXMgYW4gQXJyYXkgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBpbmRleCwgYW5kIGNvbXBsZXRlIGFycmF5IGZvciBlYWNoIGl0ZW0uXG4gKlxuICogSWYgJ29iaicgaXMgYW4gT2JqZWN0IGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHBhc3NpbmdcbiAqIHRoZSB2YWx1ZSwga2V5LCBhbmQgY29tcGxldGUgb2JqZWN0IGZvciBlYWNoIHByb3BlcnR5LlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBvYmogVGhlIG9iamVjdCB0byBpdGVyYXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgY2FsbGJhY2sgdG8gaW52b2tlIGZvciBlYWNoIGl0ZW1cbiAqL1xuZnVuY3Rpb24gZm9yRWFjaChvYmosIGZuKSB7XG4gIC8vIERvbid0IGJvdGhlciBpZiBubyB2YWx1ZSBwcm92aWRlZFxuICBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRm9yY2UgYW4gYXJyYXkgaWYgbm90IGFscmVhZHkgc29tZXRoaW5nIGl0ZXJhYmxlXG4gIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0Jykge1xuICAgIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICAgIG9iaiA9IFtvYmpdO1xuICB9XG5cbiAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBhcnJheSB2YWx1ZXNcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IG9iai5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2ldLCBpLCBvYmopO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJdGVyYXRlIG92ZXIgb2JqZWN0IGtleXNcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuICAgICAgICBmbi5jYWxsKG51bGwsIG9ialtrZXldLCBrZXksIG9iaik7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQWNjZXB0cyB2YXJhcmdzIGV4cGVjdGluZyBlYWNoIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCwgdGhlblxuICogaW1tdXRhYmx5IG1lcmdlcyB0aGUgcHJvcGVydGllcyBvZiBlYWNoIG9iamVjdCBhbmQgcmV0dXJucyByZXN1bHQuXG4gKlxuICogV2hlbiBtdWx0aXBsZSBvYmplY3RzIGNvbnRhaW4gdGhlIHNhbWUga2V5IHRoZSBsYXRlciBvYmplY3QgaW5cbiAqIHRoZSBhcmd1bWVudHMgbGlzdCB3aWxsIHRha2UgcHJlY2VkZW5jZS5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYGpzXG4gKiB2YXIgcmVzdWx0ID0gbWVyZ2Uoe2ZvbzogMTIzfSwge2ZvbzogNDU2fSk7XG4gKiBjb25zb2xlLmxvZyhyZXN1bHQuZm9vKTsgLy8gb3V0cHV0cyA0NTZcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIE9iamVjdCB0byBtZXJnZVxuICogQHJldHVybnMge09iamVjdH0gUmVzdWx0IG9mIGFsbCBtZXJnZSBwcm9wZXJ0aWVzXG4gKi9cbmZ1bmN0aW9uIG1lcmdlKC8qIG9iajEsIG9iajIsIG9iajMsIC4uLiAqLykge1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKGlzUGxhaW5PYmplY3QocmVzdWx0W2tleV0pICYmIGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZShyZXN1bHRba2V5XSwgdmFsKTtcbiAgICB9IGVsc2UgaWYgKGlzUGxhaW5PYmplY3QodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSBtZXJnZSh7fSwgdmFsKTtcbiAgICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsKSkge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWwuc2xpY2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzdWx0W2tleV0gPSB2YWw7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgZm9yRWFjaChhcmd1bWVudHNbaV0sIGFzc2lnblZhbHVlKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEV4dGVuZHMgb2JqZWN0IGEgYnkgbXV0YWJseSBhZGRpbmcgdG8gaXQgdGhlIHByb3BlcnRpZXMgb2Ygb2JqZWN0IGIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGEgVGhlIG9iamVjdCB0byBiZSBleHRlbmRlZFxuICogQHBhcmFtIHtPYmplY3R9IGIgVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgZnJvbVxuICogQHBhcmFtIHtPYmplY3R9IHRoaXNBcmcgVGhlIG9iamVjdCB0byBiaW5kIGZ1bmN0aW9uIHRvXG4gKiBAcmV0dXJuIHtPYmplY3R9IFRoZSByZXN1bHRpbmcgdmFsdWUgb2Ygb2JqZWN0IGFcbiAqL1xuZnVuY3Rpb24gZXh0ZW5kKGEsIGIsIHRoaXNBcmcpIHtcbiAgZm9yRWFjaChiLCBmdW5jdGlvbiBhc3NpZ25WYWx1ZSh2YWwsIGtleSkge1xuICAgIGlmICh0aGlzQXJnICYmIHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGFba2V5XSA9IGJpbmQodmFsLCB0aGlzQXJnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYVtrZXldID0gdmFsO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBhO1xufVxuXG4vKipcbiAqIFJlbW92ZSBieXRlIG9yZGVyIG1hcmtlci4gVGhpcyBjYXRjaGVzIEVGIEJCIEJGICh0aGUgVVRGLTggQk9NKVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50IHdpdGggQk9NXG4gKiBAcmV0dXJuIHtzdHJpbmd9IGNvbnRlbnQgdmFsdWUgd2l0aG91dCBCT01cbiAqL1xuZnVuY3Rpb24gc3RyaXBCT00oY29udGVudCkge1xuICBpZiAoY29udGVudC5jaGFyQ29kZUF0KDApID09PSAweEZFRkYpIHtcbiAgICBjb250ZW50ID0gY29udGVudC5zbGljZSgxKTtcbiAgfVxuICByZXR1cm4gY29udGVudDtcbn1cblxuLyoqXG4gKiBJbmhlcml0IHRoZSBwcm90b3R5cGUgbWV0aG9kcyBmcm9tIG9uZSBjb25zdHJ1Y3RvciBpbnRvIGFub3RoZXJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBzdXBlckNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge29iamVjdH0gW3Byb3BzXVxuICogQHBhcmFtIHtvYmplY3R9IFtkZXNjcmlwdG9yc11cbiAqL1xuXG5mdW5jdGlvbiBpbmhlcml0cyhjb25zdHJ1Y3Rvciwgc3VwZXJDb25zdHJ1Y3RvciwgcHJvcHMsIGRlc2NyaXB0b3JzKSB7XG4gIGNvbnN0cnVjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIGRlc2NyaXB0b3JzKTtcbiAgY29uc3RydWN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY29uc3RydWN0b3I7XG4gIHByb3BzICYmIE9iamVjdC5hc3NpZ24oY29uc3RydWN0b3IucHJvdG90eXBlLCBwcm9wcyk7XG59XG5cbi8qKlxuICogUmVzb2x2ZSBvYmplY3Qgd2l0aCBkZWVwIHByb3RvdHlwZSBjaGFpbiB0byBhIGZsYXQgb2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlT2JqIHNvdXJjZSBvYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBbZGVzdE9ial1cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtmaWx0ZXJdXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICovXG5cbmZ1bmN0aW9uIHRvRmxhdE9iamVjdChzb3VyY2VPYmosIGRlc3RPYmosIGZpbHRlcikge1xuICB2YXIgcHJvcHM7XG4gIHZhciBpO1xuICB2YXIgcHJvcDtcbiAgdmFyIG1lcmdlZCA9IHt9O1xuXG4gIGRlc3RPYmogPSBkZXN0T2JqIHx8IHt9O1xuXG4gIGRvIHtcbiAgICBwcm9wcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZU9iaik7XG4gICAgaSA9IHByb3BzLmxlbmd0aDtcbiAgICB3aGlsZSAoaS0tID4gMCkge1xuICAgICAgcHJvcCA9IHByb3BzW2ldO1xuICAgICAgaWYgKCFtZXJnZWRbcHJvcF0pIHtcbiAgICAgICAgZGVzdE9ialtwcm9wXSA9IHNvdXJjZU9ialtwcm9wXTtcbiAgICAgICAgbWVyZ2VkW3Byb3BdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgc291cmNlT2JqID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHNvdXJjZU9iaik7XG4gIH0gd2hpbGUgKHNvdXJjZU9iaiAmJiAoIWZpbHRlciB8fCBmaWx0ZXIoc291cmNlT2JqLCBkZXN0T2JqKSkgJiYgc291cmNlT2JqICE9PSBPYmplY3QucHJvdG90eXBlKTtcblxuICByZXR1cm4gZGVzdE9iajtcbn1cblxuLypcbiAqIGRldGVybWluZXMgd2hldGhlciBhIHN0cmluZyBlbmRzIHdpdGggdGhlIGNoYXJhY3RlcnMgb2YgYSBzcGVjaWZpZWQgc3RyaW5nXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcGFyYW0ge1N0cmluZ30gc2VhcmNoU3RyaW5nXG4gKiBAcGFyYW0ge051bWJlcn0gW3Bvc2l0aW9uPSAwXVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGVuZHNXaXRoKHN0ciwgc2VhcmNoU3RyaW5nLCBwb3NpdGlvbikge1xuICBzdHIgPSBTdHJpbmcoc3RyKTtcbiAgaWYgKHBvc2l0aW9uID09PSB1bmRlZmluZWQgfHwgcG9zaXRpb24gPiBzdHIubGVuZ3RoKSB7XG4gICAgcG9zaXRpb24gPSBzdHIubGVuZ3RoO1xuICB9XG4gIHBvc2l0aW9uIC09IHNlYXJjaFN0cmluZy5sZW5ndGg7XG4gIHZhciBsYXN0SW5kZXggPSBzdHIuaW5kZXhPZihzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKTtcbiAgcmV0dXJuIGxhc3RJbmRleCAhPT0gLTEgJiYgbGFzdEluZGV4ID09PSBwb3NpdGlvbjtcbn1cblxuXG4vKipcbiAqIFJldHVybnMgbmV3IGFycmF5IGZyb20gYXJyYXkgbGlrZSBvYmplY3RcbiAqIEBwYXJhbSB7Kn0gW3RoaW5nXVxuICogQHJldHVybnMge0FycmF5fVxuICovXG5mdW5jdGlvbiB0b0FycmF5KHRoaW5nKSB7XG4gIGlmICghdGhpbmcpIHJldHVybiBudWxsO1xuICB2YXIgaSA9IHRoaW5nLmxlbmd0aDtcbiAgaWYgKGlzVW5kZWZpbmVkKGkpKSByZXR1cm4gbnVsbDtcbiAgdmFyIGFyciA9IG5ldyBBcnJheShpKTtcbiAgd2hpbGUgKGktLSA+IDApIHtcbiAgICBhcnJbaV0gPSB0aGluZ1tpXTtcbiAgfVxuICByZXR1cm4gYXJyO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xudmFyIGlzVHlwZWRBcnJheSA9IChmdW5jdGlvbihUeXBlZEFycmF5KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHJldHVybiBmdW5jdGlvbih0aGluZykge1xuICAgIHJldHVybiBUeXBlZEFycmF5ICYmIHRoaW5nIGluc3RhbmNlb2YgVHlwZWRBcnJheTtcbiAgfTtcbn0pKHR5cGVvZiBVaW50OEFycmF5ICE9PSAndW5kZWZpbmVkJyAmJiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVWludDhBcnJheSkpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNBcnJheTogaXNBcnJheSxcbiAgaXNBcnJheUJ1ZmZlcjogaXNBcnJheUJ1ZmZlcixcbiAgaXNCdWZmZXI6IGlzQnVmZmVyLFxuICBpc0Zvcm1EYXRhOiBpc0Zvcm1EYXRhLFxuICBpc0FycmF5QnVmZmVyVmlldzogaXNBcnJheUJ1ZmZlclZpZXcsXG4gIGlzU3RyaW5nOiBpc1N0cmluZyxcbiAgaXNOdW1iZXI6IGlzTnVtYmVyLFxuICBpc09iamVjdDogaXNPYmplY3QsXG4gIGlzUGxhaW5PYmplY3Q6IGlzUGxhaW5PYmplY3QsXG4gIGlzVW5kZWZpbmVkOiBpc1VuZGVmaW5lZCxcbiAgaXNEYXRlOiBpc0RhdGUsXG4gIGlzRmlsZTogaXNGaWxlLFxuICBpc0Jsb2I6IGlzQmxvYixcbiAgaXNGdW5jdGlvbjogaXNGdW5jdGlvbixcbiAgaXNTdHJlYW06IGlzU3RyZWFtLFxuICBpc1VSTFNlYXJjaFBhcmFtczogaXNVUkxTZWFyY2hQYXJhbXMsXG4gIGlzU3RhbmRhcmRCcm93c2VyRW52OiBpc1N0YW5kYXJkQnJvd3NlckVudixcbiAgZm9yRWFjaDogZm9yRWFjaCxcbiAgbWVyZ2U6IG1lcmdlLFxuICBleHRlbmQ6IGV4dGVuZCxcbiAgdHJpbTogdHJpbSxcbiAgc3RyaXBCT006IHN0cmlwQk9NLFxuICBpbmhlcml0czogaW5oZXJpdHMsXG4gIHRvRmxhdE9iamVjdDogdG9GbGF0T2JqZWN0LFxuICBraW5kT2Y6IGtpbmRPZixcbiAga2luZE9mVGVzdDoga2luZE9mVGVzdCxcbiAgZW5kc1dpdGg6IGVuZHNXaXRoLFxuICB0b0FycmF5OiB0b0FycmF5LFxuICBpc1R5cGVkQXJyYXk6IGlzVHlwZWRBcnJheSxcbiAgaXNGaWxlTGlzdDogaXNGaWxlTGlzdFxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Eb2N0eXBlID0gZXhwb3J0cy5DREFUQSA9IGV4cG9ydHMuVGFnID0gZXhwb3J0cy5TdHlsZSA9IGV4cG9ydHMuU2NyaXB0ID0gZXhwb3J0cy5Db21tZW50ID0gZXhwb3J0cy5EaXJlY3RpdmUgPSBleHBvcnRzLlRleHQgPSBleHBvcnRzLlJvb3QgPSBleHBvcnRzLmlzVGFnID0gZXhwb3J0cy5FbGVtZW50VHlwZSA9IHZvaWQgMDtcbi8qKiBUeXBlcyBvZiBlbGVtZW50cyBmb3VuZCBpbiBodG1scGFyc2VyMidzIERPTSAqL1xudmFyIEVsZW1lbnRUeXBlO1xuKGZ1bmN0aW9uIChFbGVtZW50VHlwZSkge1xuICAgIC8qKiBUeXBlIGZvciB0aGUgcm9vdCBlbGVtZW50IG9mIGEgZG9jdW1lbnQgKi9cbiAgICBFbGVtZW50VHlwZVtcIlJvb3RcIl0gPSBcInJvb3RcIjtcbiAgICAvKiogVHlwZSBmb3IgVGV4dCAqL1xuICAgIEVsZW1lbnRUeXBlW1wiVGV4dFwiXSA9IFwidGV4dFwiO1xuICAgIC8qKiBUeXBlIGZvciA8PyAuLi4gPz4gKi9cbiAgICBFbGVtZW50VHlwZVtcIkRpcmVjdGl2ZVwiXSA9IFwiZGlyZWN0aXZlXCI7XG4gICAgLyoqIFR5cGUgZm9yIDwhLS0gLi4uIC0tPiAqL1xuICAgIEVsZW1lbnRUeXBlW1wiQ29tbWVudFwiXSA9IFwiY29tbWVudFwiO1xuICAgIC8qKiBUeXBlIGZvciA8c2NyaXB0PiB0YWdzICovXG4gICAgRWxlbWVudFR5cGVbXCJTY3JpcHRcIl0gPSBcInNjcmlwdFwiO1xuICAgIC8qKiBUeXBlIGZvciA8c3R5bGU+IHRhZ3MgKi9cbiAgICBFbGVtZW50VHlwZVtcIlN0eWxlXCJdID0gXCJzdHlsZVwiO1xuICAgIC8qKiBUeXBlIGZvciBBbnkgdGFnICovXG4gICAgRWxlbWVudFR5cGVbXCJUYWdcIl0gPSBcInRhZ1wiO1xuICAgIC8qKiBUeXBlIGZvciA8IVtDREFUQVsgLi4uIF1dPiAqL1xuICAgIEVsZW1lbnRUeXBlW1wiQ0RBVEFcIl0gPSBcImNkYXRhXCI7XG4gICAgLyoqIFR5cGUgZm9yIDwhZG9jdHlwZSAuLi4+ICovXG4gICAgRWxlbWVudFR5cGVbXCJEb2N0eXBlXCJdID0gXCJkb2N0eXBlXCI7XG59KShFbGVtZW50VHlwZSA9IGV4cG9ydHMuRWxlbWVudFR5cGUgfHwgKGV4cG9ydHMuRWxlbWVudFR5cGUgPSB7fSkpO1xuLyoqXG4gKiBUZXN0cyB3aGV0aGVyIGFuIGVsZW1lbnQgaXMgYSB0YWcgb3Igbm90LlxuICpcbiAqIEBwYXJhbSBlbGVtIEVsZW1lbnQgdG8gdGVzdFxuICovXG5mdW5jdGlvbiBpc1RhZyhlbGVtKSB7XG4gICAgcmV0dXJuIChlbGVtLnR5cGUgPT09IEVsZW1lbnRUeXBlLlRhZyB8fFxuICAgICAgICBlbGVtLnR5cGUgPT09IEVsZW1lbnRUeXBlLlNjcmlwdCB8fFxuICAgICAgICBlbGVtLnR5cGUgPT09IEVsZW1lbnRUeXBlLlN0eWxlKTtcbn1cbmV4cG9ydHMuaXNUYWcgPSBpc1RhZztcbi8vIEV4cG9ydHMgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4vKiogVHlwZSBmb3IgdGhlIHJvb3QgZWxlbWVudCBvZiBhIGRvY3VtZW50ICovXG5leHBvcnRzLlJvb3QgPSBFbGVtZW50VHlwZS5Sb290O1xuLyoqIFR5cGUgZm9yIFRleHQgKi9cbmV4cG9ydHMuVGV4dCA9IEVsZW1lbnRUeXBlLlRleHQ7XG4vKiogVHlwZSBmb3IgPD8gLi4uID8+ICovXG5leHBvcnRzLkRpcmVjdGl2ZSA9IEVsZW1lbnRUeXBlLkRpcmVjdGl2ZTtcbi8qKiBUeXBlIGZvciA8IS0tIC4uLiAtLT4gKi9cbmV4cG9ydHMuQ29tbWVudCA9IEVsZW1lbnRUeXBlLkNvbW1lbnQ7XG4vKiogVHlwZSBmb3IgPHNjcmlwdD4gdGFncyAqL1xuZXhwb3J0cy5TY3JpcHQgPSBFbGVtZW50VHlwZS5TY3JpcHQ7XG4vKiogVHlwZSBmb3IgPHN0eWxlPiB0YWdzICovXG5leHBvcnRzLlN0eWxlID0gRWxlbWVudFR5cGUuU3R5bGU7XG4vKiogVHlwZSBmb3IgQW55IHRhZyAqL1xuZXhwb3J0cy5UYWcgPSBFbGVtZW50VHlwZS5UYWc7XG4vKiogVHlwZSBmb3IgPCFbQ0RBVEFbIC4uLiBdXT4gKi9cbmV4cG9ydHMuQ0RBVEEgPSBFbGVtZW50VHlwZS5DREFUQTtcbi8qKiBUeXBlIGZvciA8IWRvY3R5cGUgLi4uPiAqL1xuZXhwb3J0cy5Eb2N0eXBlID0gRWxlbWVudFR5cGUuRG9jdHlwZTtcbiIsIi8qKlxuICogU1ZHIGVsZW1lbnRzIGFyZSBjYXNlLXNlbnNpdGl2ZS5cbiAqXG4gKiBAc2VlIHtAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9TVkcvRWxlbWVudCNzdmdfZWxlbWVudHNfYV90b196fVxuICovXG5leHBvcnRzLkNBU0VfU0VOU0lUSVZFX1RBR19OQU1FUyA9IFtcbiAgJ2FuaW1hdGVNb3Rpb24nLFxuICAnYW5pbWF0ZVRyYW5zZm9ybScsXG4gICdjbGlwUGF0aCcsXG4gICdmZUJsZW5kJyxcbiAgJ2ZlQ29sb3JNYXRyaXgnLFxuICAnZmVDb21wb25lbnRUcmFuc2ZlcicsXG4gICdmZUNvbXBvc2l0ZScsXG4gICdmZUNvbnZvbHZlTWF0cml4JyxcbiAgJ2ZlRGlmZnVzZUxpZ2h0aW5nJyxcbiAgJ2ZlRGlzcGxhY2VtZW50TWFwJyxcbiAgJ2ZlRHJvcFNoYWRvdycsXG4gICdmZUZsb29kJyxcbiAgJ2ZlRnVuY0EnLFxuICAnZmVGdW5jQicsXG4gICdmZUZ1bmNHJyxcbiAgJ2ZlRnVuY1InLFxuICAnZmVHYXVzc2FpbkJsdXInLFxuICAnZmVJbWFnZScsXG4gICdmZU1lcmdlJyxcbiAgJ2ZlTWVyZ2VOb2RlJyxcbiAgJ2ZlTW9ycGhvbG9neScsXG4gICdmZU9mZnNldCcsXG4gICdmZVBvaW50TGlnaHQnLFxuICAnZmVTcGVjdWxhckxpZ2h0aW5nJyxcbiAgJ2ZlU3BvdExpZ2h0JyxcbiAgJ2ZlVGlsZScsXG4gICdmZVR1cmJ1bGVuY2UnLFxuICAnZm9yZWlnbk9iamVjdCcsXG4gICdsaW5lYXJHcmFkaWVudCcsXG4gICdyYWRpYWxHcmFkaWVudCcsXG4gICd0ZXh0UGF0aCdcbl07XG4iLCIvLyBjb25zdGFudHNcbnZhciBIVE1MID0gJ2h0bWwnO1xudmFyIEhFQUQgPSAnaGVhZCc7XG52YXIgQk9EWSA9ICdib2R5JztcbnZhciBGSVJTVF9UQUdfUkVHRVggPSAvPChbYS16QS1aXStbMC05XT8pLzsgLy8gZS5nLiwgPGgxPlxuLy8gbWF0Y2gtYWxsLWNoYXJhY3RlcnMgaW4gY2FzZSBvZiBuZXdsaW5lcyAoRE9UQUxMKVxudmFyIEhFQURfVEFHX1JFR0VYID0gLzxoZWFkW15dKj4vaTtcbnZhciBCT0RZX1RBR19SRUdFWCA9IC88Ym9keVteXSo+L2k7XG5cbi8vIGZhbGxzIGJhY2sgdG8gYHBhcnNlRnJvbVN0cmluZ2AgaWYgYGNyZWF0ZUhUTUxEb2N1bWVudGAgY2Fubm90IGJlIHVzZWRcbnZhciBwYXJzZUZyb21Eb2N1bWVudCA9IGZ1bmN0aW9uICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKFxuICAgICdUaGlzIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50YCdcbiAgKTtcbn07XG5cbnZhciBwYXJzZUZyb21TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAnVGhpcyBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgYERPTVBhcnNlci5wcm90b3R5cGUucGFyc2VGcm9tU3RyaW5nYCdcbiAgKTtcbn07XG5cbnZhciBET01QYXJzZXIgPSB0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JyAmJiB3aW5kb3cuRE9NUGFyc2VyO1xuXG4vKipcbiAqIERPTVBhcnNlciAocGVyZm9ybWFuY2U6IHNsb3cpLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvQVBJL0RPTVBhcnNlciNQYXJzaW5nX2FuX1NWR19vcl9IVE1MX2RvY3VtZW50XG4gKi9cbmlmICh0eXBlb2YgRE9NUGFyc2VyID09PSAnZnVuY3Rpb24nKSB7XG4gIHZhciBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gIHZhciBtaW1lVHlwZSA9ICd0ZXh0L2h0bWwnO1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGFuIEhUTUwgZG9jdW1lbnQgdXNpbmcgYERPTVBhcnNlci5wYXJzZUZyb21TdHJpbmdgLlxuICAgKlxuICAgKiBAcGFyYW0gIHtzdHJpbmd9IGh0bWwgICAgICAtIFRoZSBIVE1MIHN0cmluZy5cbiAgICogQHBhcmFtICB7c3RyaW5nfSBbdGFnTmFtZV0gLSBUaGUgZWxlbWVudCB0byByZW5kZXIgdGhlIEhUTUwgKHdpdGggJ2JvZHknIGFzIGZhbGxiYWNrKS5cbiAgICogQHJldHVybiB7SFRNTERvY3VtZW50fVxuICAgKi9cbiAgcGFyc2VGcm9tU3RyaW5nID0gZnVuY3Rpb24gKGh0bWwsIHRhZ05hbWUpIHtcbiAgICBpZiAodGFnTmFtZSkge1xuICAgICAgaHRtbCA9ICc8JyArIHRhZ05hbWUgKyAnPicgKyBodG1sICsgJzwvJyArIHRhZ05hbWUgKyAnPic7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcoaHRtbCwgbWltZVR5cGUpO1xuICB9O1xuXG4gIHBhcnNlRnJvbURvY3VtZW50ID0gcGFyc2VGcm9tU3RyaW5nO1xufVxuXG4vKipcbiAqIERPTUltcGxlbWVudGF0aW9uIChwZXJmb3JtYW5jZTogZmFpcikuXG4gKlxuICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9BUEkvRE9NSW1wbGVtZW50YXRpb24vY3JlYXRlSFRNTERvY3VtZW50XG4gKi9cbmlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICdvYmplY3QnICYmIGRvY3VtZW50LmltcGxlbWVudGF0aW9uKSB7XG4gIHZhciBkb2MgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoKTtcblxuICAvKipcbiAgICogVXNlIEhUTUwgZG9jdW1lbnQgY3JlYXRlZCBieSBgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50YC5cbiAgICpcbiAgICogQHBhcmFtICB7c3RyaW5nfSBodG1sICAgICAgLSBUaGUgSFRNTCBzdHJpbmcuXG4gICAqIEBwYXJhbSAge3N0cmluZ30gW3RhZ05hbWVdIC0gVGhlIGVsZW1lbnQgdG8gcmVuZGVyIHRoZSBIVE1MICh3aXRoICdib2R5JyBhcyBmYWxsYmFjaykuXG4gICAqIEByZXR1cm4ge0hUTUxEb2N1bWVudH1cbiAgICovXG4gIHBhcnNlRnJvbURvY3VtZW50ID0gZnVuY3Rpb24gKGh0bWwsIHRhZ05hbWUpIHtcbiAgICBpZiAodGFnTmFtZSkge1xuICAgICAgdmFyIGVsZW1lbnQgPSBkb2MuZG9jdW1lbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGFnTmFtZSk7XG4gICAgICBlbGVtZW50LmlubmVySFRNTCA9IGh0bWw7XG4gICAgICByZXR1cm4gZG9jO1xuICAgIH1cblxuICAgIGRvYy5kb2N1bWVudEVsZW1lbnQuaW5uZXJIVE1MID0gaHRtbDtcbiAgICByZXR1cm4gZG9jO1xuICB9O1xufVxuXG4vKipcbiAqIFRlbXBsYXRlIChwZXJmb3JtYW5jZTogZmFzdCkuXG4gKlxuICogQHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9kb2NzL1dlYi9IVE1ML0VsZW1lbnQvdGVtcGxhdGVcbiAqL1xudmFyIHRlbXBsYXRlID1cbiAgdHlwZW9mIGRvY3VtZW50ID09PSAnb2JqZWN0JyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RlbXBsYXRlJykgOiB7fTtcblxudmFyIHBhcnNlRnJvbVRlbXBsYXRlO1xuXG5pZiAodGVtcGxhdGUuY29udGVudCkge1xuICAvKipcbiAgICogVXNlcyBhIHRlbXBsYXRlIGVsZW1lbnQgKGNvbnRlbnQgZnJhZ21lbnQpIHRvIHBhcnNlIEhUTUwuXG4gICAqXG4gICAqIEBwYXJhbSAge3N0cmluZ30gaHRtbCAtIFRoZSBIVE1MIHN0cmluZy5cbiAgICogQHJldHVybiB7Tm9kZUxpc3R9XG4gICAqL1xuICBwYXJzZUZyb21UZW1wbGF0ZSA9IGZ1bmN0aW9uIChodG1sKSB7XG4gICAgdGVtcGxhdGUuaW5uZXJIVE1MID0gaHRtbDtcbiAgICByZXR1cm4gdGVtcGxhdGUuY29udGVudC5jaGlsZE5vZGVzO1xuICB9O1xufVxuXG4vKipcbiAqIFBhcnNlcyBIVE1MIHN0cmluZyB0byBET00gbm9kZXMuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgIGh0bWwgLSBIVE1MIG1hcmt1cC5cbiAqIEByZXR1cm4ge05vZGVMaXN0fVxuICovXG5mdW5jdGlvbiBkb21wYXJzZXIoaHRtbCkge1xuICB2YXIgZmlyc3RUYWdOYW1lO1xuICB2YXIgbWF0Y2ggPSBodG1sLm1hdGNoKEZJUlNUX1RBR19SRUdFWCk7XG5cbiAgaWYgKG1hdGNoICYmIG1hdGNoWzFdKSB7XG4gICAgZmlyc3RUYWdOYW1lID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKTtcbiAgfVxuXG4gIHZhciBkb2M7XG4gIHZhciBlbGVtZW50O1xuICB2YXIgZWxlbWVudHM7XG5cbiAgc3dpdGNoIChmaXJzdFRhZ05hbWUpIHtcbiAgICBjYXNlIEhUTUw6XG4gICAgICBkb2MgPSBwYXJzZUZyb21TdHJpbmcoaHRtbCk7XG5cbiAgICAgIC8vIHRoZSBjcmVhdGVkIGRvY3VtZW50IG1heSBjb21lIHdpdGggZmlsbGVyIGhlYWQvYm9keSBlbGVtZW50cyxcbiAgICAgIC8vIHNvIG1ha2Ugc3VyZSB0byByZW1vdmUgdGhlbSBpZiB0aGV5IGRvbid0IGFjdHVhbGx5IGV4aXN0XG4gICAgICBpZiAoIUhFQURfVEFHX1JFR0VYLnRlc3QoaHRtbCkpIHtcbiAgICAgICAgZWxlbWVudCA9IGRvYy5xdWVyeVNlbGVjdG9yKEhFQUQpO1xuICAgICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIUJPRFlfVEFHX1JFR0VYLnRlc3QoaHRtbCkpIHtcbiAgICAgICAgZWxlbWVudCA9IGRvYy5xdWVyeVNlbGVjdG9yKEJPRFkpO1xuICAgICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZG9jLnF1ZXJ5U2VsZWN0b3JBbGwoSFRNTCk7XG5cbiAgICBjYXNlIEhFQUQ6XG4gICAgY2FzZSBCT0RZOlxuICAgICAgZG9jID0gcGFyc2VGcm9tRG9jdW1lbnQoaHRtbCk7XG4gICAgICBlbGVtZW50cyA9IGRvYy5xdWVyeVNlbGVjdG9yQWxsKGZpcnN0VGFnTmFtZSk7XG5cbiAgICAgIC8vIGlmIHRoZXJlJ3MgYSBzaWJsaW5nIGVsZW1lbnQsIHRoZW4gcmV0dXJuIGJvdGggZWxlbWVudHNcbiAgICAgIGlmIChCT0RZX1RBR19SRUdFWC50ZXN0KGh0bWwpICYmIEhFQURfVEFHX1JFR0VYLnRlc3QoaHRtbCkpIHtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnRzWzBdLnBhcmVudE5vZGUuY2hpbGROb2RlcztcbiAgICAgIH1cbiAgICAgIHJldHVybiBlbGVtZW50cztcblxuICAgIC8vIGxvdy1sZXZlbCB0YWcgb3IgdGV4dFxuICAgIGRlZmF1bHQ6XG4gICAgICBpZiAocGFyc2VGcm9tVGVtcGxhdGUpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlRnJvbVRlbXBsYXRlKGh0bWwpO1xuICAgICAgfVxuICAgICAgZWxlbWVudCA9IHBhcnNlRnJvbURvY3VtZW50KGh0bWwsIEJPRFkpLnF1ZXJ5U2VsZWN0b3IoQk9EWSk7XG4gICAgICByZXR1cm4gZWxlbWVudC5jaGlsZE5vZGVzO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tcGFyc2VyO1xuIiwidmFyIGRvbXBhcnNlciA9IHJlcXVpcmUoJy4vZG9tcGFyc2VyJyk7XG52YXIgdXRpbGl0aWVzID0gcmVxdWlyZSgnLi91dGlsaXRpZXMnKTtcblxudmFyIGZvcm1hdERPTSA9IHV0aWxpdGllcy5mb3JtYXRET007XG5cbnZhciBESVJFQ1RJVkVfUkVHRVggPSAvPCghW2EtekEtWlxcc10rKT4vOyAvLyBlLmcuLCA8IWRvY3R5cGUgaHRtbD5cblxuLyoqXG4gKiBQYXJzZXMgSFRNTCBzdHJpbmcgdG8gRE9NIG5vZGVzIGluIGJyb3dzZXIuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSBodG1sICAtIEhUTUwgbWFya3VwLlxuICogQHJldHVybiB7RG9tRWxlbWVudFtdfSAtIERPTSBlbGVtZW50cy5cbiAqL1xuZnVuY3Rpb24gSFRNTERPTVBhcnNlcihodG1sKSB7XG4gIGlmICh0eXBlb2YgaHRtbCAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gIH1cblxuICBpZiAoaHRtbCA9PT0gJycpIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICAvLyBtYXRjaCBkaXJlY3RpdmVcbiAgdmFyIG1hdGNoID0gaHRtbC5tYXRjaChESVJFQ1RJVkVfUkVHRVgpO1xuICB2YXIgZGlyZWN0aXZlO1xuXG4gIGlmIChtYXRjaCAmJiBtYXRjaFsxXSkge1xuICAgIGRpcmVjdGl2ZSA9IG1hdGNoWzFdO1xuICB9XG5cbiAgcmV0dXJuIGZvcm1hdERPTShkb21wYXJzZXIoaHRtbCksIG51bGwsIGRpcmVjdGl2ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gSFRNTERPTVBhcnNlcjtcbiIsInZhciBkb21oYW5kbGVyID0gcmVxdWlyZSgnZG9taGFuZGxlcicpO1xudmFyIGNvbnN0YW50cyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJyk7XG5cbnZhciBDQVNFX1NFTlNJVElWRV9UQUdfTkFNRVMgPSBjb25zdGFudHMuQ0FTRV9TRU5TSVRJVkVfVEFHX05BTUVTO1xuXG52YXIgQ29tbWVudCA9IGRvbWhhbmRsZXIuQ29tbWVudDtcbnZhciBFbGVtZW50ID0gZG9taGFuZGxlci5FbGVtZW50O1xudmFyIFByb2Nlc3NpbmdJbnN0cnVjdGlvbiA9IGRvbWhhbmRsZXIuUHJvY2Vzc2luZ0luc3RydWN0aW9uO1xudmFyIFRleHQgPSBkb21oYW5kbGVyLlRleHQ7XG5cbnZhciBjYXNlU2Vuc2l0aXZlVGFnTmFtZXNNYXAgPSB7fTtcbnZhciB0YWdOYW1lO1xuXG5mb3IgKHZhciBpID0gMCwgbGVuID0gQ0FTRV9TRU5TSVRJVkVfVEFHX05BTUVTLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gIHRhZ05hbWUgPSBDQVNFX1NFTlNJVElWRV9UQUdfTkFNRVNbaV07XG4gIGNhc2VTZW5zaXRpdmVUYWdOYW1lc01hcFt0YWdOYW1lLnRvTG93ZXJDYXNlKCldID0gdGFnTmFtZTtcbn1cblxuLyoqXG4gKiBHZXRzIGNhc2Utc2Vuc2l0aXZlIHRhZyBuYW1lLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0YWdOYW1lIC0gVGFnIG5hbWUgaW4gbG93ZXJjYXNlLlxuICogQHJldHVybnMge3N0cmluZ3x1bmRlZmluZWR9IC0gQ2FzZS1zZW5zaXRpdmUgdGFnIG5hbWUuXG4gKi9cbmZ1bmN0aW9uIGdldENhc2VTZW5zaXRpdmVUYWdOYW1lKHRhZ05hbWUpIHtcbiAgcmV0dXJuIGNhc2VTZW5zaXRpdmVUYWdOYW1lc01hcFt0YWdOYW1lXTtcbn1cblxuLyoqXG4gKiBGb3JtYXRzIERPTSBhdHRyaWJ1dGVzIHRvIGEgaGFzaCBtYXAuXG4gKlxuICogQHBhcmFtIHtOYW1lZE5vZGVNYXB9IGF0dHJpYnV0ZXMgLSBMaXN0IG9mIGF0dHJpYnV0ZXMuXG4gKiBAcmV0dXJucyB7b2JqZWN0fSAtIE1hcCBvZiBhdHRyaWJ1dGUgbmFtZSB0byB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gZm9ybWF0QXR0cmlidXRlcyhhdHRyaWJ1dGVzKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgdmFyIGF0dHJpYnV0ZTtcbiAgLy8gYE5hbWVkTm9kZU1hcGAgaXMgYXJyYXktbGlrZVxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gYXR0cmlidXRlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgIGF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNbaV07XG4gICAgcmVzdWx0W2F0dHJpYnV0ZS5uYW1lXSA9IGF0dHJpYnV0ZS52YWx1ZTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENvcnJlY3RzIHRoZSB0YWcgbmFtZSBpZiBpdCBpcyBjYXNlLXNlbnNpdGl2ZSAoU1ZHKS5cbiAqIE90aGVyd2lzZSwgcmV0dXJucyB0aGUgbG93ZXJjYXNlIHRhZyBuYW1lIChIVE1MKS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnTmFtZSAtIExvd2VyY2FzZSB0YWcgbmFtZS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gRm9ybWF0dGVkIHRhZyBuYW1lLlxuICovXG5mdW5jdGlvbiBmb3JtYXRUYWdOYW1lKHRhZ05hbWUpIHtcbiAgdGFnTmFtZSA9IHRhZ05hbWUudG9Mb3dlckNhc2UoKTtcbiAgdmFyIGNhc2VTZW5zaXRpdmVUYWdOYW1lID0gZ2V0Q2FzZVNlbnNpdGl2ZVRhZ05hbWUodGFnTmFtZSk7XG4gIGlmIChjYXNlU2Vuc2l0aXZlVGFnTmFtZSkge1xuICAgIHJldHVybiBjYXNlU2Vuc2l0aXZlVGFnTmFtZTtcbiAgfVxuICByZXR1cm4gdGFnTmFtZTtcbn1cblxuLyoqXG4gKiBUcmFuc2Zvcm1zIERPTSBub2RlcyB0byBgZG9taGFuZGxlcmAgbm9kZXMuXG4gKlxuICogQHBhcmFtIHtOb2RlTGlzdH0gbm9kZXMgLSBET00gbm9kZXMuXG4gKiBAcGFyYW0ge0VsZW1lbnR8bnVsbH0gW3BhcmVudD1udWxsXSAtIFBhcmVudCBub2RlLlxuICogQHBhcmFtIHtzdHJpbmd9IFtkaXJlY3RpdmVdIC0gRGlyZWN0aXZlLlxuICogQHJldHVybnMge0FycmF5PENvbW1lbnR8RWxlbWVudHxQcm9jZXNzaW5nSW5zdHJ1Y3Rpb258VGV4dD59XG4gKi9cbmZ1bmN0aW9uIGZvcm1hdERPTShub2RlcywgcGFyZW50LCBkaXJlY3RpdmUpIHtcbiAgcGFyZW50ID0gcGFyZW50IHx8IG51bGw7XG4gIHZhciByZXN1bHQgPSBbXTtcblxuICBmb3IgKHZhciBpbmRleCA9IDAsIGxlbiA9IG5vZGVzLmxlbmd0aDsgaW5kZXggPCBsZW47IGluZGV4KyspIHtcbiAgICB2YXIgbm9kZSA9IG5vZGVzW2luZGV4XTtcbiAgICB2YXIgY3VycmVudDtcblxuICAgIC8vIHNldCB0aGUgbm9kZSBkYXRhIGdpdmVuIHRoZSB0eXBlXG4gICAgc3dpdGNoIChub2RlLm5vZGVUeXBlKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIC8vIHNjcmlwdCwgc3R5bGUsIG9yIHRhZ1xuICAgICAgICBjdXJyZW50ID0gbmV3IEVsZW1lbnQoXG4gICAgICAgICAgZm9ybWF0VGFnTmFtZShub2RlLm5vZGVOYW1lKSxcbiAgICAgICAgICBmb3JtYXRBdHRyaWJ1dGVzKG5vZGUuYXR0cmlidXRlcylcbiAgICAgICAgKTtcbiAgICAgICAgY3VycmVudC5jaGlsZHJlbiA9IGZvcm1hdERPTShcbiAgICAgICAgICAvLyB0ZW1wbGF0ZSBjaGlsZHJlbiBhcmUgb24gY29udGVudFxuICAgICAgICAgIG5vZGUuY29udGVudCA/IG5vZGUuY29udGVudC5jaGlsZE5vZGVzIDogbm9kZS5jaGlsZE5vZGVzLFxuICAgICAgICAgIGN1cnJlbnRcbiAgICAgICAgKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgMzpcbiAgICAgICAgY3VycmVudCA9IG5ldyBUZXh0KG5vZGUubm9kZVZhbHVlKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgODpcbiAgICAgICAgY3VycmVudCA9IG5ldyBDb21tZW50KG5vZGUubm9kZVZhbHVlKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIHNldCBwcmV2aW91cyBub2RlIG5leHRcbiAgICB2YXIgcHJldiA9IHJlc3VsdFtpbmRleCAtIDFdIHx8IG51bGw7XG4gICAgaWYgKHByZXYpIHtcbiAgICAgIHByZXYubmV4dCA9IGN1cnJlbnQ7XG4gICAgfVxuXG4gICAgLy8gc2V0IHByb3BlcnRpZXMgZm9yIGN1cnJlbnQgbm9kZVxuICAgIGN1cnJlbnQucGFyZW50ID0gcGFyZW50O1xuICAgIGN1cnJlbnQucHJldiA9IHByZXY7XG4gICAgY3VycmVudC5uZXh0ID0gbnVsbDtcblxuICAgIHJlc3VsdC5wdXNoKGN1cnJlbnQpO1xuICB9XG5cbiAgaWYgKGRpcmVjdGl2ZSkge1xuICAgIGN1cnJlbnQgPSBuZXcgUHJvY2Vzc2luZ0luc3RydWN0aW9uKFxuICAgICAgZGlyZWN0aXZlLnN1YnN0cmluZygwLCBkaXJlY3RpdmUuaW5kZXhPZignICcpKS50b0xvd2VyQ2FzZSgpLFxuICAgICAgZGlyZWN0aXZlXG4gICAgKTtcbiAgICBjdXJyZW50Lm5leHQgPSByZXN1bHRbMF0gfHwgbnVsbDtcbiAgICBjdXJyZW50LnBhcmVudCA9IHBhcmVudDtcbiAgICByZXN1bHQudW5zaGlmdChjdXJyZW50KTtcblxuICAgIGlmIChyZXN1bHRbMV0pIHtcbiAgICAgIHJlc3VsdFsxXS5wcmV2ID0gcmVzdWx0WzBdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydHMuZm9ybWF0QXR0cmlidXRlcyA9IGZvcm1hdEF0dHJpYnV0ZXM7XG5leHBvcnRzLmZvcm1hdERPTSA9IGZvcm1hdERPTTtcbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRvbUhhbmRsZXIgPSB2b2lkIDA7XG52YXIgZG9tZWxlbWVudHR5cGVfMSA9IHJlcXVpcmUoXCJkb21lbGVtZW50dHlwZVwiKTtcbnZhciBub2RlX2pzXzEgPSByZXF1aXJlKFwiLi9ub2RlLmpzXCIpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL25vZGUuanNcIiksIGV4cG9ydHMpO1xuLy8gRGVmYXVsdCBvcHRpb25zXG52YXIgZGVmYXVsdE9wdHMgPSB7XG4gICAgd2l0aFN0YXJ0SW5kaWNlczogZmFsc2UsXG4gICAgd2l0aEVuZEluZGljZXM6IGZhbHNlLFxuICAgIHhtbE1vZGU6IGZhbHNlLFxufTtcbnZhciBEb21IYW5kbGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBDYWxsZWQgb25jZSBwYXJzaW5nIGhhcyBjb21wbGV0ZWQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgU2V0dGluZ3MgZm9yIHRoZSBoYW5kbGVyLlxuICAgICAqIEBwYXJhbSBlbGVtZW50Q0IgQ2FsbGJhY2sgd2hlbmV2ZXIgYSB0YWcgaXMgY2xvc2VkLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIERvbUhhbmRsZXIoY2FsbGJhY2ssIG9wdGlvbnMsIGVsZW1lbnRDQikge1xuICAgICAgICAvKiogVGhlIGVsZW1lbnRzIG9mIHRoZSBET00gKi9cbiAgICAgICAgdGhpcy5kb20gPSBbXTtcbiAgICAgICAgLyoqIFRoZSByb290IGVsZW1lbnQgZm9yIHRoZSBET00gKi9cbiAgICAgICAgdGhpcy5yb290ID0gbmV3IG5vZGVfanNfMS5Eb2N1bWVudCh0aGlzLmRvbSk7XG4gICAgICAgIC8qKiBJbmRpY2F0ZWQgd2hldGhlciBwYXJzaW5nIGhhcyBiZWVuIGNvbXBsZXRlZC4gKi9cbiAgICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICAgIC8qKiBTdGFjayBvZiBvcGVuIHRhZ3MuICovXG4gICAgICAgIHRoaXMudGFnU3RhY2sgPSBbdGhpcy5yb290XTtcbiAgICAgICAgLyoqIEEgZGF0YSBub2RlIHRoYXQgaXMgc3RpbGwgYmVpbmcgd3JpdHRlbiB0by4gKi9cbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgICAgIC8qKiBSZWZlcmVuY2UgdG8gdGhlIHBhcnNlciBpbnN0YW5jZS4gVXNlZCBmb3IgbG9jYXRpb24gaW5mb3JtYXRpb24uICovXG4gICAgICAgIHRoaXMucGFyc2VyID0gbnVsbDtcbiAgICAgICAgLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBza2lwIGFyZ3VtZW50cywgZm9yIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBlbGVtZW50Q0IgPSBvcHRpb25zO1xuICAgICAgICAgICAgb3B0aW9ucyA9IGRlZmF1bHRPcHRzO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBjYWxsYmFjaztcbiAgICAgICAgICAgIGNhbGxiYWNrID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjayAhPT0gbnVsbCAmJiBjYWxsYmFjayAhPT0gdm9pZCAwID8gY2FsbGJhY2sgOiBudWxsO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiBkZWZhdWx0T3B0cztcbiAgICAgICAgdGhpcy5lbGVtZW50Q0IgPSBlbGVtZW50Q0IgIT09IG51bGwgJiYgZWxlbWVudENCICE9PSB2b2lkIDAgPyBlbGVtZW50Q0IgOiBudWxsO1xuICAgIH1cbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnBhcnNlcmluaXQgPSBmdW5jdGlvbiAocGFyc2VyKSB7XG4gICAgICAgIHRoaXMucGFyc2VyID0gcGFyc2VyO1xuICAgIH07XG4gICAgLy8gUmVzZXRzIHRoZSBoYW5kbGVyIGJhY2sgdG8gc3RhcnRpbmcgc3RhdGVcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRvbSA9IFtdO1xuICAgICAgICB0aGlzLnJvb3QgPSBuZXcgbm9kZV9qc18xLkRvY3VtZW50KHRoaXMuZG9tKTtcbiAgICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICAgIHRoaXMudGFnU3RhY2sgPSBbdGhpcy5yb290XTtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgICAgIHRoaXMucGFyc2VyID0gbnVsbDtcbiAgICB9O1xuICAgIC8vIFNpZ25hbHMgdGhlIGhhbmRsZXIgdGhhdCBwYXJzaW5nIGlzIGRvbmVcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbmVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuZG9uZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5wYXJzZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmhhbmRsZUNhbGxiYWNrKG51bGwpO1xuICAgIH07XG4gICAgRG9tSGFuZGxlci5wcm90b3R5cGUub25lcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICB0aGlzLmhhbmRsZUNhbGxiYWNrKGVycm9yKTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9uY2xvc2V0YWcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMubGFzdE5vZGUgPSBudWxsO1xuICAgICAgICB2YXIgZWxlbSA9IHRoaXMudGFnU3RhY2sucG9wKCk7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMud2l0aEVuZEluZGljZXMpIHtcbiAgICAgICAgICAgIGVsZW0uZW5kSW5kZXggPSB0aGlzLnBhcnNlci5lbmRJbmRleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5lbGVtZW50Q0IpXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRDQihlbGVtKTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9ub3BlbnRhZyA9IGZ1bmN0aW9uIChuYW1lLCBhdHRyaWJzKSB7XG4gICAgICAgIHZhciB0eXBlID0gdGhpcy5vcHRpb25zLnhtbE1vZGUgPyBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlRhZyA6IHVuZGVmaW5lZDtcbiAgICAgICAgdmFyIGVsZW1lbnQgPSBuZXcgbm9kZV9qc18xLkVsZW1lbnQobmFtZSwgYXR0cmlicywgdW5kZWZpbmVkLCB0eXBlKTtcbiAgICAgICAgdGhpcy5hZGROb2RlKGVsZW1lbnQpO1xuICAgICAgICB0aGlzLnRhZ1N0YWNrLnB1c2goZWxlbWVudCk7XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnRleHQgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICB2YXIgbGFzdE5vZGUgPSB0aGlzLmxhc3ROb2RlO1xuICAgICAgICBpZiAobGFzdE5vZGUgJiYgbGFzdE5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5UZXh0KSB7XG4gICAgICAgICAgICBsYXN0Tm9kZS5kYXRhICs9IGRhdGE7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLndpdGhFbmRJbmRpY2VzKSB7XG4gICAgICAgICAgICAgICAgbGFzdE5vZGUuZW5kSW5kZXggPSB0aGlzLnBhcnNlci5lbmRJbmRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gbmV3IG5vZGVfanNfMS5UZXh0KGRhdGEpO1xuICAgICAgICAgICAgdGhpcy5hZGROb2RlKG5vZGUpO1xuICAgICAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG5vZGU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9uY29tbWVudCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmICh0aGlzLmxhc3ROb2RlICYmIHRoaXMubGFzdE5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5Db21tZW50KSB7XG4gICAgICAgICAgICB0aGlzLmxhc3ROb2RlLmRhdGEgKz0gZGF0YTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbm9kZSA9IG5ldyBub2RlX2pzXzEuQ29tbWVudChkYXRhKTtcbiAgICAgICAgdGhpcy5hZGROb2RlKG5vZGUpO1xuICAgICAgICB0aGlzLmxhc3ROb2RlID0gbm9kZTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9uY29tbWVudGVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbmNkYXRhc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gbmV3IG5vZGVfanNfMS5UZXh0KFwiXCIpO1xuICAgICAgICB2YXIgbm9kZSA9IG5ldyBub2RlX2pzXzEuQ0RBVEEoW3RleHRdKTtcbiAgICAgICAgdGhpcy5hZGROb2RlKG5vZGUpO1xuICAgICAgICB0ZXh0LnBhcmVudCA9IG5vZGU7XG4gICAgICAgIHRoaXMubGFzdE5vZGUgPSB0ZXh0O1xuICAgIH07XG4gICAgRG9tSGFuZGxlci5wcm90b3R5cGUub25jZGF0YWVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnByb2Nlc3NpbmdpbnN0cnVjdGlvbiA9IGZ1bmN0aW9uIChuYW1lLCBkYXRhKSB7XG4gICAgICAgIHZhciBub2RlID0gbmV3IG5vZGVfanNfMS5Qcm9jZXNzaW5nSW5zdHJ1Y3Rpb24obmFtZSwgZGF0YSk7XG4gICAgICAgIHRoaXMuYWRkTm9kZShub2RlKTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLmhhbmRsZUNhbGxiYWNrID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5jYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrKGVycm9yLCB0aGlzLmRvbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5hZGROb2RlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgdmFyIHBhcmVudCA9IHRoaXMudGFnU3RhY2tbdGhpcy50YWdTdGFjay5sZW5ndGggLSAxXTtcbiAgICAgICAgdmFyIHByZXZpb3VzU2libGluZyA9IHBhcmVudC5jaGlsZHJlbltwYXJlbnQuY2hpbGRyZW4ubGVuZ3RoIC0gMV07XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMud2l0aFN0YXJ0SW5kaWNlcykge1xuICAgICAgICAgICAgbm9kZS5zdGFydEluZGV4ID0gdGhpcy5wYXJzZXIuc3RhcnRJbmRleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLndpdGhFbmRJbmRpY2VzKSB7XG4gICAgICAgICAgICBub2RlLmVuZEluZGV4ID0gdGhpcy5wYXJzZXIuZW5kSW5kZXg7XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50LmNoaWxkcmVuLnB1c2gobm9kZSk7XG4gICAgICAgIGlmIChwcmV2aW91c1NpYmxpbmcpIHtcbiAgICAgICAgICAgIG5vZGUucHJldiA9IHByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgIHByZXZpb3VzU2libGluZy5uZXh0ID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBub2RlLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfTtcbiAgICByZXR1cm4gRG9tSGFuZGxlcjtcbn0oKSk7XG5leHBvcnRzLkRvbUhhbmRsZXIgPSBEb21IYW5kbGVyO1xuZXhwb3J0cy5kZWZhdWx0ID0gRG9tSGFuZGxlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNsb25lTm9kZSA9IGV4cG9ydHMuaGFzQ2hpbGRyZW4gPSBleHBvcnRzLmlzRG9jdW1lbnQgPSBleHBvcnRzLmlzRGlyZWN0aXZlID0gZXhwb3J0cy5pc0NvbW1lbnQgPSBleHBvcnRzLmlzVGV4dCA9IGV4cG9ydHMuaXNDREFUQSA9IGV4cG9ydHMuaXNUYWcgPSBleHBvcnRzLkVsZW1lbnQgPSBleHBvcnRzLkRvY3VtZW50ID0gZXhwb3J0cy5DREFUQSA9IGV4cG9ydHMuTm9kZVdpdGhDaGlsZHJlbiA9IGV4cG9ydHMuUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gZXhwb3J0cy5Db21tZW50ID0gZXhwb3J0cy5UZXh0ID0gZXhwb3J0cy5EYXRhTm9kZSA9IGV4cG9ydHMuTm9kZSA9IHZvaWQgMDtcbnZhciBkb21lbGVtZW50dHlwZV8xID0gcmVxdWlyZShcImRvbWVsZW1lbnR0eXBlXCIpO1xuLyoqXG4gKiBUaGlzIG9iamVjdCB3aWxsIGJlIHVzZWQgYXMgdGhlIHByb3RvdHlwZSBmb3IgTm9kZXMgd2hlbiBjcmVhdGluZyBhXG4gKiBET00tTGV2ZWwtMS1jb21wbGlhbnQgc3RydWN0dXJlLlxuICovXG52YXIgTm9kZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb2RlKCkge1xuICAgICAgICAvKiogUGFyZW50IG9mIHRoZSBub2RlICovXG4gICAgICAgIHRoaXMucGFyZW50ID0gbnVsbDtcbiAgICAgICAgLyoqIFByZXZpb3VzIHNpYmxpbmcgKi9cbiAgICAgICAgdGhpcy5wcmV2ID0gbnVsbDtcbiAgICAgICAgLyoqIE5leHQgc2libGluZyAqL1xuICAgICAgICB0aGlzLm5leHQgPSBudWxsO1xuICAgICAgICAvKiogVGhlIHN0YXJ0IGluZGV4IG9mIHRoZSBub2RlLiBSZXF1aXJlcyBgd2l0aFN0YXJ0SW5kaWNlc2Agb24gdGhlIGhhbmRsZXIgdG8gYmUgYHRydWUuICovXG4gICAgICAgIHRoaXMuc3RhcnRJbmRleCA9IG51bGw7XG4gICAgICAgIC8qKiBUaGUgZW5kIGluZGV4IG9mIHRoZSBub2RlLiBSZXF1aXJlcyBgd2l0aEVuZEluZGljZXNgIG9uIHRoZSBoYW5kbGVyIHRvIGJlIGB0cnVlLiAqL1xuICAgICAgICB0aGlzLmVuZEluZGV4ID0gbnVsbDtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGUucHJvdG90eXBlLCBcInBhcmVudE5vZGVcIiwge1xuICAgICAgICAvLyBSZWFkLXdyaXRlIGFsaWFzZXMgZm9yIHByb3BlcnRpZXNcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIHBhcmVudH0uXG4gICAgICAgICAqIFtET00gc3BlY10oaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnKS1jb21wYXRpYmxlIGFsaWFzLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHBhcmVudCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZS5wcm90b3R5cGUsIFwicHJldmlvdXNTaWJsaW5nXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIHByZXZ9LlxuICAgICAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJldjtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAocHJldikge1xuICAgICAgICAgICAgdGhpcy5wcmV2ID0gcHJldjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlLnByb3RvdHlwZSwgXCJuZXh0U2libGluZ1wiLCB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTYW1lIGFzIHtAbGluayBuZXh0fS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5leHQ7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKG5leHQpIHtcbiAgICAgICAgICAgIHRoaXMubmV4dCA9IG5leHQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBDbG9uZSB0aGlzIG5vZGUsIGFuZCBvcHRpb25hbGx5IGl0cyBjaGlsZHJlbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSByZWN1cnNpdmUgQ2xvbmUgY2hpbGQgbm9kZXMgYXMgd2VsbC5cbiAgICAgKiBAcmV0dXJucyBBIGNsb25lIG9mIHRoZSBub2RlLlxuICAgICAqL1xuICAgIE5vZGUucHJvdG90eXBlLmNsb25lTm9kZSA9IGZ1bmN0aW9uIChyZWN1cnNpdmUpIHtcbiAgICAgICAgaWYgKHJlY3Vyc2l2ZSA9PT0gdm9pZCAwKSB7IHJlY3Vyc2l2ZSA9IGZhbHNlOyB9XG4gICAgICAgIHJldHVybiBjbG9uZU5vZGUodGhpcywgcmVjdXJzaXZlKTtcbiAgICB9O1xuICAgIHJldHVybiBOb2RlO1xufSgpKTtcbmV4cG9ydHMuTm9kZSA9IE5vZGU7XG4vKipcbiAqIEEgbm9kZSB0aGF0IGNvbnRhaW5zIHNvbWUgZGF0YS5cbiAqL1xudmFyIERhdGFOb2RlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEYXRhTm9kZSwgX3N1cGVyKTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gZGF0YSBUaGUgY29udGVudCBvZiB0aGUgZGF0YSBub2RlXG4gICAgICovXG4gICAgZnVuY3Rpb24gRGF0YU5vZGUoZGF0YSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0YU5vZGUucHJvdG90eXBlLCBcIm5vZGVWYWx1ZVwiLCB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTYW1lIGFzIHtAbGluayBkYXRhfS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGE7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gRGF0YU5vZGU7XG59KE5vZGUpKTtcbmV4cG9ydHMuRGF0YU5vZGUgPSBEYXRhTm9kZTtcbi8qKlxuICogVGV4dCB3aXRoaW4gdGhlIGRvY3VtZW50LlxuICovXG52YXIgVGV4dCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVGV4dCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBUZXh0KCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudHlwZSA9IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuVGV4dDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVGV4dC5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAzO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFRleHQ7XG59KERhdGFOb2RlKSk7XG5leHBvcnRzLlRleHQgPSBUZXh0O1xuLyoqXG4gKiBDb21tZW50cyB3aXRoaW4gdGhlIGRvY3VtZW50LlxuICovXG52YXIgQ29tbWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ29tbWVudCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDb21tZW50KCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudHlwZSA9IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuQ29tbWVudDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29tbWVudC5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiA4O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIENvbW1lbnQ7XG59KERhdGFOb2RlKSk7XG5leHBvcnRzLkNvbW1lbnQgPSBDb21tZW50O1xuLyoqXG4gKiBQcm9jZXNzaW5nIGluc3RydWN0aW9ucywgaW5jbHVkaW5nIGRvYyB0eXBlcy5cbiAqL1xudmFyIFByb2Nlc3NpbmdJbnN0cnVjdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUHJvY2Vzc2luZ0luc3RydWN0aW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFByb2Nlc3NpbmdJbnN0cnVjdGlvbihuYW1lLCBkYXRhKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGRhdGEpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICBfdGhpcy50eXBlID0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5EaXJlY3RpdmU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFByb2Nlc3NpbmdJbnN0cnVjdGlvbjtcbn0oRGF0YU5vZGUpKTtcbmV4cG9ydHMuUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gUHJvY2Vzc2luZ0luc3RydWN0aW9uO1xuLyoqXG4gKiBBIGBOb2RlYCB0aGF0IGNhbiBoYXZlIGNoaWxkcmVuLlxuICovXG52YXIgTm9kZVdpdGhDaGlsZHJlbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTm9kZVdpdGhDaGlsZHJlbiwgX3N1cGVyKTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY2hpbGRyZW4gQ2hpbGRyZW4gb2YgdGhlIG5vZGUuIE9ubHkgY2VydGFpbiBub2RlIHR5cGVzIGNhbiBoYXZlIGNoaWxkcmVuLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIE5vZGVXaXRoQ2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZVdpdGhDaGlsZHJlbi5wcm90b3R5cGUsIFwiZmlyc3RDaGlsZFwiLCB7XG4gICAgICAgIC8vIEFsaWFzZXNcbiAgICAgICAgLyoqIEZpcnN0IGNoaWxkIG9mIHRoZSBub2RlLiAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHJldHVybiAoX2EgPSB0aGlzLmNoaWxkcmVuWzBdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGVXaXRoQ2hpbGRyZW4ucHJvdG90eXBlLCBcImxhc3RDaGlsZFwiLCB7XG4gICAgICAgIC8qKiBMYXN0IGNoaWxkIG9mIHRoZSBub2RlLiAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuLmxlbmd0aCA+IDBcbiAgICAgICAgICAgICAgICA/IHRoaXMuY2hpbGRyZW5bdGhpcy5jaGlsZHJlbi5sZW5ndGggLSAxXVxuICAgICAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlV2l0aENoaWxkcmVuLnByb3RvdHlwZSwgXCJjaGlsZE5vZGVzXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIGNoaWxkcmVufS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChjaGlsZHJlbikge1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIE5vZGVXaXRoQ2hpbGRyZW47XG59KE5vZGUpKTtcbmV4cG9ydHMuTm9kZVdpdGhDaGlsZHJlbiA9IE5vZGVXaXRoQ2hpbGRyZW47XG52YXIgQ0RBVEEgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENEQVRBLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENEQVRBKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudHlwZSA9IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuQ0RBVEE7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENEQVRBLnByb3RvdHlwZSwgXCJub2RlVHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIDQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gQ0RBVEE7XG59KE5vZGVXaXRoQ2hpbGRyZW4pKTtcbmV4cG9ydHMuQ0RBVEEgPSBDREFUQTtcbi8qKlxuICogVGhlIHJvb3Qgbm9kZSBvZiB0aGUgZG9jdW1lbnQuXG4gKi9cbnZhciBEb2N1bWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRG9jdW1lbnQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRG9jdW1lbnQoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy50eXBlID0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5Sb290O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEb2N1bWVudC5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiA5O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIERvY3VtZW50O1xufShOb2RlV2l0aENoaWxkcmVuKSk7XG5leHBvcnRzLkRvY3VtZW50ID0gRG9jdW1lbnQ7XG4vKipcbiAqIEFuIGVsZW1lbnQgd2l0aGluIHRoZSBET00uXG4gKi9cbnZhciBFbGVtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhFbGVtZW50LCBfc3VwZXIpO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIHRhZywgZWcuIGBkaXZgLCBgc3BhbmAuXG4gICAgICogQHBhcmFtIGF0dHJpYnMgT2JqZWN0IG1hcHBpbmcgYXR0cmlidXRlIG5hbWVzIHRvIGF0dHJpYnV0ZSB2YWx1ZXMuXG4gICAgICogQHBhcmFtIGNoaWxkcmVuIENoaWxkcmVuIG9mIHRoZSBub2RlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIEVsZW1lbnQobmFtZSwgYXR0cmlicywgY2hpbGRyZW4sIHR5cGUpIHtcbiAgICAgICAgaWYgKGNoaWxkcmVuID09PSB2b2lkIDApIHsgY2hpbGRyZW4gPSBbXTsgfVxuICAgICAgICBpZiAodHlwZSA9PT0gdm9pZCAwKSB7IHR5cGUgPSBuYW1lID09PSBcInNjcmlwdFwiXG4gICAgICAgICAgICA/IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuU2NyaXB0XG4gICAgICAgICAgICA6IG5hbWUgPT09IFwic3R5bGVcIlxuICAgICAgICAgICAgICAgID8gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5TdHlsZVxuICAgICAgICAgICAgICAgIDogZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5UYWc7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY2hpbGRyZW4pIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICBfdGhpcy5hdHRyaWJzID0gYXR0cmlicztcbiAgICAgICAgX3RoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEVsZW1lbnQucHJvdG90eXBlLCBcIm5vZGVUeXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFbGVtZW50LnByb3RvdHlwZSwgXCJ0YWdOYW1lXCIsIHtcbiAgICAgICAgLy8gRE9NIExldmVsIDEgYWxpYXNlc1xuICAgICAgICAvKipcbiAgICAgICAgICogU2FtZSBhcyB7QGxpbmsgbmFtZX0uXG4gICAgICAgICAqIFtET00gc3BlY10oaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnKS1jb21wYXRpYmxlIGFsaWFzLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uYW1lO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEVsZW1lbnQucHJvdG90eXBlLCBcImF0dHJpYnV0ZXNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5hdHRyaWJzKS5tYXAoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgIHJldHVybiAoe1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3RoaXMuYXR0cmlic1tuYW1lXSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZXNwYWNlOiAoX2EgPSBfdGhpc1tcIngtYXR0cmlic05hbWVzcGFjZVwiXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW25hbWVdLFxuICAgICAgICAgICAgICAgICAgICBwcmVmaXg6IChfYiA9IF90aGlzW1wieC1hdHRyaWJzUHJlZml4XCJdKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2JbbmFtZV0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBFbGVtZW50O1xufShOb2RlV2l0aENoaWxkcmVuKSk7XG5leHBvcnRzLkVsZW1lbnQgPSBFbGVtZW50O1xuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGlzIGEgYEVsZW1lbnRgLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNUYWcobm9kZSkge1xuICAgIHJldHVybiAoMCwgZG9tZWxlbWVudHR5cGVfMS5pc1RhZykobm9kZSk7XG59XG5leHBvcnRzLmlzVGFnID0gaXNUYWc7XG4vKipcbiAqIEBwYXJhbSBub2RlIE5vZGUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG5vZGUgaGFzIHRoZSB0eXBlIGBDREFUQWAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0NEQVRBKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLkNEQVRBO1xufVxuZXhwb3J0cy5pc0NEQVRBID0gaXNDREFUQTtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYFRleHRgLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNUZXh0KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlRleHQ7XG59XG5leHBvcnRzLmlzVGV4dCA9IGlzVGV4dDtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYENvbW1lbnRgLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNDb21tZW50KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLkNvbW1lbnQ7XG59XG5leHBvcnRzLmlzQ29tbWVudCA9IGlzQ29tbWVudDtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYFByb2Nlc3NpbmdJbnN0cnVjdGlvbmAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0RpcmVjdGl2ZShub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5EaXJlY3RpdmU7XG59XG5leHBvcnRzLmlzRGlyZWN0aXZlID0gaXNEaXJlY3RpdmU7XG4vKipcbiAqIEBwYXJhbSBub2RlIE5vZGUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG5vZGUgaGFzIHRoZSB0eXBlIGBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb25gLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNEb2N1bWVudChub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5Sb290O1xufVxuZXhwb3J0cy5pc0RvY3VtZW50ID0gaXNEb2N1bWVudDtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgY2hpbGRyZW4sIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBoYXNDaGlsZHJlbihub2RlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChub2RlLCBcImNoaWxkcmVuXCIpO1xufVxuZXhwb3J0cy5oYXNDaGlsZHJlbiA9IGhhc0NoaWxkcmVuO1xuLyoqXG4gKiBDbG9uZSBhIG5vZGUsIGFuZCBvcHRpb25hbGx5IGl0cyBjaGlsZHJlbi5cbiAqXG4gKiBAcGFyYW0gcmVjdXJzaXZlIENsb25lIGNoaWxkIG5vZGVzIGFzIHdlbGwuXG4gKiBAcmV0dXJucyBBIGNsb25lIG9mIHRoZSBub2RlLlxuICovXG5mdW5jdGlvbiBjbG9uZU5vZGUobm9kZSwgcmVjdXJzaXZlKSB7XG4gICAgaWYgKHJlY3Vyc2l2ZSA9PT0gdm9pZCAwKSB7IHJlY3Vyc2l2ZSA9IGZhbHNlOyB9XG4gICAgdmFyIHJlc3VsdDtcbiAgICBpZiAoaXNUZXh0KG5vZGUpKSB7XG4gICAgICAgIHJlc3VsdCA9IG5ldyBUZXh0KG5vZGUuZGF0YSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ29tbWVudChub2RlKSkge1xuICAgICAgICByZXN1bHQgPSBuZXcgQ29tbWVudChub2RlLmRhdGEpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc1RhZyhub2RlKSkge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSByZWN1cnNpdmUgPyBjbG9uZUNoaWxkcmVuKG5vZGUuY2hpbGRyZW4pIDogW107XG4gICAgICAgIHZhciBjbG9uZV8xID0gbmV3IEVsZW1lbnQobm9kZS5uYW1lLCBfX2Fzc2lnbih7fSwgbm9kZS5hdHRyaWJzKSwgY2hpbGRyZW4pO1xuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkgeyByZXR1cm4gKGNoaWxkLnBhcmVudCA9IGNsb25lXzEpOyB9KTtcbiAgICAgICAgaWYgKG5vZGUubmFtZXNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNsb25lXzEubmFtZXNwYWNlID0gbm9kZS5uYW1lc3BhY2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGVbXCJ4LWF0dHJpYnNOYW1lc3BhY2VcIl0pIHtcbiAgICAgICAgICAgIGNsb25lXzFbXCJ4LWF0dHJpYnNOYW1lc3BhY2VcIl0gPSBfX2Fzc2lnbih7fSwgbm9kZVtcIngtYXR0cmlic05hbWVzcGFjZVwiXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGVbXCJ4LWF0dHJpYnNQcmVmaXhcIl0pIHtcbiAgICAgICAgICAgIGNsb25lXzFbXCJ4LWF0dHJpYnNQcmVmaXhcIl0gPSBfX2Fzc2lnbih7fSwgbm9kZVtcIngtYXR0cmlic1ByZWZpeFwiXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gY2xvbmVfMTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDREFUQShub2RlKSkge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSByZWN1cnNpdmUgPyBjbG9uZUNoaWxkcmVuKG5vZGUuY2hpbGRyZW4pIDogW107XG4gICAgICAgIHZhciBjbG9uZV8yID0gbmV3IENEQVRBKGNoaWxkcmVuKTtcbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHsgcmV0dXJuIChjaGlsZC5wYXJlbnQgPSBjbG9uZV8yKTsgfSk7XG4gICAgICAgIHJlc3VsdCA9IGNsb25lXzI7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzRG9jdW1lbnQobm9kZSkpIHtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gcmVjdXJzaXZlID8gY2xvbmVDaGlsZHJlbihub2RlLmNoaWxkcmVuKSA6IFtdO1xuICAgICAgICB2YXIgY2xvbmVfMyA9IG5ldyBEb2N1bWVudChjaGlsZHJlbik7XG4gICAgICAgIGNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiAoY2hpbGQucGFyZW50ID0gY2xvbmVfMyk7IH0pO1xuICAgICAgICBpZiAobm9kZVtcIngtbW9kZVwiXSkge1xuICAgICAgICAgICAgY2xvbmVfM1tcIngtbW9kZVwiXSA9IG5vZGVbXCJ4LW1vZGVcIl07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gY2xvbmVfMztcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNEaXJlY3RpdmUobm9kZSkpIHtcbiAgICAgICAgdmFyIGluc3RydWN0aW9uID0gbmV3IFByb2Nlc3NpbmdJbnN0cnVjdGlvbihub2RlLm5hbWUsIG5vZGUuZGF0YSk7XG4gICAgICAgIGlmIChub2RlW1wieC1uYW1lXCJdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGluc3RydWN0aW9uW1wieC1uYW1lXCJdID0gbm9kZVtcIngtbmFtZVwiXTtcbiAgICAgICAgICAgIGluc3RydWN0aW9uW1wieC1wdWJsaWNJZFwiXSA9IG5vZGVbXCJ4LXB1YmxpY0lkXCJdO1xuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25bXCJ4LXN5c3RlbUlkXCJdID0gbm9kZVtcIngtc3lzdGVtSWRcIl07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gaW5zdHJ1Y3Rpb247XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0OiBcIi5jb25jYXQobm9kZS50eXBlKSk7XG4gICAgfVxuICAgIHJlc3VsdC5zdGFydEluZGV4ID0gbm9kZS5zdGFydEluZGV4O1xuICAgIHJlc3VsdC5lbmRJbmRleCA9IG5vZGUuZW5kSW5kZXg7XG4gICAgaWYgKG5vZGUuc291cmNlQ29kZUxvY2F0aW9uICE9IG51bGwpIHtcbiAgICAgICAgcmVzdWx0LnNvdXJjZUNvZGVMb2NhdGlvbiA9IG5vZGUuc291cmNlQ29kZUxvY2F0aW9uO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5jbG9uZU5vZGUgPSBjbG9uZU5vZGU7XG5mdW5jdGlvbiBjbG9uZUNoaWxkcmVuKGNoaWxkcykge1xuICAgIHZhciBjaGlsZHJlbiA9IGNoaWxkcy5tYXAoZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiBjbG9uZU5vZGUoY2hpbGQsIHRydWUpOyB9KTtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNoaWxkcmVuW2ldLnByZXYgPSBjaGlsZHJlbltpIC0gMV07XG4gICAgICAgIGNoaWxkcmVuW2kgLSAxXS5uZXh0ID0gY2hpbGRyZW5baV07XG4gICAgfVxuICAgIHJldHVybiBjaGlsZHJlbjtcbn1cbiIsInZhciBkb21oYW5kbGVyID0gcmVxdWlyZSgnZG9taGFuZGxlcicpO1xudmFyIGh0bWxUb0RPTSA9IHJlcXVpcmUoJ2h0bWwtZG9tLXBhcnNlcicpO1xuXG52YXIgYXR0cmlidXRlc1RvUHJvcHMgPSByZXF1aXJlKCcuL2xpYi9hdHRyaWJ1dGVzLXRvLXByb3BzJyk7XG52YXIgZG9tVG9SZWFjdCA9IHJlcXVpcmUoJy4vbGliL2RvbS10by1yZWFjdCcpO1xuXG4vLyBzdXBwb3J0IGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5IGZvciBFUyBNb2R1bGVcbmh0bWxUb0RPTSA9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIHR5cGVvZiBodG1sVG9ET00uZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyA/IGh0bWxUb0RPTS5kZWZhdWx0IDogaHRtbFRvRE9NO1xuXG52YXIgZG9tUGFyc2VyT3B0aW9ucyA9IHsgbG93ZXJDYXNlQXR0cmlidXRlTmFtZXM6IGZhbHNlIH07XG5cbi8qKlxuICogQ29udmVydHMgSFRNTCBzdHJpbmcgdG8gUmVhY3QgZWxlbWVudHMuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGh0bWwgLSBIVE1MIHN0cmluZy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc10gLSBQYXJzZXIgb3B0aW9ucy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9ucy5odG1scGFyc2VyMl0gLSBodG1scGFyc2VyMiBvcHRpb25zLlxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLmxpYnJhcnldIC0gTGlicmFyeSBmb3IgUmVhY3QsIFByZWFjdCwgZXRjLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMucmVwbGFjZV0gLSBSZXBsYWNlIG1ldGhvZC5cbiAqIEByZXR1cm5zIHtKU1guRWxlbWVudHxKU1guRWxlbWVudFtdfHN0cmluZ30gLSBSZWFjdCBlbGVtZW50KHMpLCBlbXB0eSBhcnJheSwgb3Igc3RyaW5nLlxuICovXG5mdW5jdGlvbiBIVE1MUmVhY3RQYXJzZXIoaHRtbCwgb3B0aW9ucykge1xuICBpZiAodHlwZW9mIGh0bWwgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHN0cmluZycpO1xuICB9XG4gIGlmIChodG1sID09PSAnJykge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgcmV0dXJuIGRvbVRvUmVhY3QoXG4gICAgaHRtbFRvRE9NKGh0bWwsIG9wdGlvbnMuaHRtbHBhcnNlcjIgfHwgZG9tUGFyc2VyT3B0aW9ucyksXG4gICAgb3B0aW9uc1xuICApO1xufVxuXG5IVE1MUmVhY3RQYXJzZXIuZG9tVG9SZWFjdCA9IGRvbVRvUmVhY3Q7XG5IVE1MUmVhY3RQYXJzZXIuaHRtbFRvRE9NID0gaHRtbFRvRE9NO1xuSFRNTFJlYWN0UGFyc2VyLmF0dHJpYnV0ZXNUb1Byb3BzID0gYXR0cmlidXRlc1RvUHJvcHM7XG5cbi8vIGRvbWhhbmRsZXJcbkhUTUxSZWFjdFBhcnNlci5Db21tZW50ID0gZG9taGFuZGxlci5Db21tZW50O1xuSFRNTFJlYWN0UGFyc2VyLkVsZW1lbnQgPSBkb21oYW5kbGVyLkVsZW1lbnQ7XG5IVE1MUmVhY3RQYXJzZXIuUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gZG9taGFuZGxlci5Qcm9jZXNzaW5nSW5zdHJ1Y3Rpb247XG5IVE1MUmVhY3RQYXJzZXIuVGV4dCA9IGRvbWhhbmRsZXIuVGV4dDtcblxuLy8gc3VwcG9ydCBDb21tb25KUyBhbmQgRVMgTW9kdWxlc1xubW9kdWxlLmV4cG9ydHMgPSBIVE1MUmVhY3RQYXJzZXI7XG5IVE1MUmVhY3RQYXJzZXIuZGVmYXVsdCA9IEhUTUxSZWFjdFBhcnNlcjtcbiIsInZhciByZWFjdFByb3BlcnR5ID0gcmVxdWlyZSgncmVhY3QtcHJvcGVydHknKTtcbnZhciB1dGlsaXRpZXMgPSByZXF1aXJlKCcuL3V0aWxpdGllcycpO1xuXG4vLyBodHRwczovL3JlYWN0anMub3JnL2RvY3MvdW5jb250cm9sbGVkLWNvbXBvbmVudHMuaHRtbFxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZG9jcy9XZWIvSFRNTC9BdHRyaWJ1dGVzXG52YXIgVU5DT05UUk9MTEVEX0NPTVBPTkVOVF9BVFRSSUJVVEVTID0gWydjaGVja2VkJywgJ3ZhbHVlJ107XG52YXIgVU5DT05UUk9MTEVEX0NPTVBPTkVOVF9OQU1FUyA9IFsnaW5wdXQnLCAnc2VsZWN0JywgJ3RleHRhcmVhJ107XG5cbnZhciBWQUxVRV9PTkxZX0lOUFVUUyA9IHtcbiAgcmVzZXQ6IHRydWUsXG4gIHN1Ym1pdDogdHJ1ZVxufTtcblxuLyoqXG4gKiBDb252ZXJ0cyBIVE1ML1NWRyBET00gYXR0cmlidXRlcyB0byBSZWFjdCBwcm9wcy5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gW2F0dHJpYnV0ZXM9e31dIC0gSFRNTC9TVkcgRE9NIGF0dHJpYnV0ZXMuXG4gKiBAcGFyYW0ge3N0cmluZ30gW25vZGVOYW1lXSAtIERPTSBub2RlIG5hbWUuXG4gKiBAcmV0dXJucyAtIFJlYWN0IHByb3BzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGF0dHJpYnV0ZXNUb1Byb3BzKGF0dHJpYnV0ZXMsIG5vZGVOYW1lKSB7XG4gIGF0dHJpYnV0ZXMgPSBhdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIHZhciBhdHRyaWJ1dGVOYW1lO1xuICB2YXIgYXR0cmlidXRlTmFtZUxvd2VyQ2FzZWQ7XG4gIHZhciBhdHRyaWJ1dGVWYWx1ZTtcbiAgdmFyIHByb3BOYW1lO1xuICB2YXIgcHJvcGVydHlJbmZvO1xuICB2YXIgcHJvcHMgPSB7fTtcbiAgdmFyIGlucHV0SXNWYWx1ZU9ubHkgPSBhdHRyaWJ1dGVzLnR5cGUgJiYgVkFMVUVfT05MWV9JTlBVVFNbYXR0cmlidXRlcy50eXBlXTtcblxuICBmb3IgKGF0dHJpYnV0ZU5hbWUgaW4gYXR0cmlidXRlcykge1xuICAgIGF0dHJpYnV0ZVZhbHVlID0gYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXTtcblxuICAgIC8vIEFSSUEgKGFyaWEtKikgb3IgY3VzdG9tIGRhdGEgKGRhdGEtKikgYXR0cmlidXRlXG4gICAgaWYgKHJlYWN0UHJvcGVydHkuaXNDdXN0b21BdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkpIHtcbiAgICAgIHByb3BzW2F0dHJpYnV0ZU5hbWVdID0gYXR0cmlidXRlVmFsdWU7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICAvLyBjb252ZXJ0IEhUTUwvU1ZHIGF0dHJpYnV0ZSB0byBSZWFjdCBwcm9wXG4gICAgYXR0cmlidXRlTmFtZUxvd2VyQ2FzZWQgPSBhdHRyaWJ1dGVOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgcHJvcE5hbWUgPSBnZXRQcm9wTmFtZShhdHRyaWJ1dGVOYW1lTG93ZXJDYXNlZCk7XG5cbiAgICBpZiAocHJvcE5hbWUpIHtcbiAgICAgIHByb3BlcnR5SW5mbyA9IHJlYWN0UHJvcGVydHkuZ2V0UHJvcGVydHlJbmZvKHByb3BOYW1lKTtcblxuICAgICAgLy8gY29udmVydCBhdHRyaWJ1dGUgdG8gdW5jb250cm9sbGVkIGNvbXBvbmVudCBwcm9wIChlLmcuLCBgdmFsdWVgIHRvIGBkZWZhdWx0VmFsdWVgKVxuICAgICAgaWYgKFxuICAgICAgICBVTkNPTlRST0xMRURfQ09NUE9ORU5UX0FUVFJJQlVURVMuaW5kZXhPZihwcm9wTmFtZSkgIT09IC0xICYmXG4gICAgICAgIFVOQ09OVFJPTExFRF9DT01QT05FTlRfTkFNRVMuaW5kZXhPZihub2RlTmFtZSkgIT09IC0xICYmXG4gICAgICAgICFpbnB1dElzVmFsdWVPbmx5XG4gICAgICApIHtcbiAgICAgICAgcHJvcE5hbWUgPSBnZXRQcm9wTmFtZSgnZGVmYXVsdCcgKyBhdHRyaWJ1dGVOYW1lTG93ZXJDYXNlZCk7XG4gICAgICB9XG5cbiAgICAgIHByb3BzW3Byb3BOYW1lXSA9IGF0dHJpYnV0ZVZhbHVlO1xuXG4gICAgICBzd2l0Y2ggKHByb3BlcnR5SW5mbyAmJiBwcm9wZXJ0eUluZm8udHlwZSkge1xuICAgICAgICBjYXNlIHJlYWN0UHJvcGVydHkuQk9PTEVBTjpcbiAgICAgICAgICBwcm9wc1twcm9wTmFtZV0gPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIHJlYWN0UHJvcGVydHkuT1ZFUkxPQURFRF9CT09MRUFOOlxuICAgICAgICAgIGlmIChhdHRyaWJ1dGVWYWx1ZSA9PT0gJycpIHtcbiAgICAgICAgICAgIHByb3BzW3Byb3BOYW1lXSA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gcHJlc2VydmUgY3VzdG9tIGF0dHJpYnV0ZSBpZiBSZWFjdCA+PTE2XG4gICAgaWYgKHV0aWxpdGllcy5QUkVTRVJWRV9DVVNUT01fQVRUUklCVVRFUykge1xuICAgICAgcHJvcHNbYXR0cmlidXRlTmFtZV0gPSBhdHRyaWJ1dGVWYWx1ZTtcbiAgICB9XG4gIH1cblxuICAvLyB0cmFuc2Zvcm0gaW5saW5lIHN0eWxlIHRvIG9iamVjdFxuICB1dGlsaXRpZXMuc2V0U3R5bGVQcm9wKGF0dHJpYnV0ZXMuc3R5bGUsIHByb3BzKTtcblxuICByZXR1cm4gcHJvcHM7XG59O1xuXG4vKipcbiAqIEdldHMgcHJvcCBuYW1lIGZyb20gbG93ZXJjYXNlZCBhdHRyaWJ1dGUgbmFtZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0cmlidXRlTmFtZSAtIExvd2VyY2FzZWQgYXR0cmlidXRlIG5hbWUuXG4gKiBAcmV0dXJucyAtIFByb3AgbmFtZS5cbiAqL1xuZnVuY3Rpb24gZ2V0UHJvcE5hbWUoYXR0cmlidXRlTmFtZSkge1xuICByZXR1cm4gcmVhY3RQcm9wZXJ0eS5wb3NzaWJsZVN0YW5kYXJkTmFtZXNbYXR0cmlidXRlTmFtZV07XG59XG4iLCJ2YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xudmFyIGF0dHJpYnV0ZXNUb1Byb3BzID0gcmVxdWlyZSgnLi9hdHRyaWJ1dGVzLXRvLXByb3BzJyk7XG52YXIgdXRpbGl0aWVzID0gcmVxdWlyZSgnLi91dGlsaXRpZXMnKTtcblxudmFyIHNldFN0eWxlUHJvcCA9IHV0aWxpdGllcy5zZXRTdHlsZVByb3A7XG52YXIgY2FuVGV4dEJlQ2hpbGRPZk5vZGUgPSB1dGlsaXRpZXMuY2FuVGV4dEJlQ2hpbGRPZk5vZGU7XG5cbi8qKlxuICogQ29udmVydHMgRE9NIG5vZGVzIHRvIEpTWCBlbGVtZW50KHMpLlxuICpcbiAqIEBwYXJhbSB7RG9tRWxlbWVudFtdfSBub2RlcyAtIERPTSBub2Rlcy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9ucz17fV0gLSBPcHRpb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMucmVwbGFjZV0gLSBSZXBsYWNlci5cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9ucy5saWJyYXJ5XSAtIExpYnJhcnkgKFJlYWN0LCBQcmVhY3QsIGV0Yy4pLlxuICogQHJldHVybnMgLSBTdHJpbmcgb3IgSlNYIGVsZW1lbnQocykuXG4gKi9cbmZ1bmN0aW9uIGRvbVRvUmVhY3Qobm9kZXMsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgdmFyIGxpYnJhcnkgPSBvcHRpb25zLmxpYnJhcnkgfHwgUmVhY3Q7XG4gIHZhciBjbG9uZUVsZW1lbnQgPSBsaWJyYXJ5LmNsb25lRWxlbWVudDtcbiAgdmFyIGNyZWF0ZUVsZW1lbnQgPSBsaWJyYXJ5LmNyZWF0ZUVsZW1lbnQ7XG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGxpYnJhcnkuaXNWYWxpZEVsZW1lbnQ7XG5cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgbm9kZTtcbiAgdmFyIGlzV2hpdGVzcGFjZTtcbiAgdmFyIGhhc1JlcGxhY2UgPSB0eXBlb2Ygb3B0aW9ucy5yZXBsYWNlID09PSAnZnVuY3Rpb24nO1xuICB2YXIgcmVwbGFjZUVsZW1lbnQ7XG4gIHZhciBwcm9wcztcbiAgdmFyIGNoaWxkcmVuO1xuICB2YXIgdHJpbSA9IG9wdGlvbnMudHJpbTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gbm9kZXMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBub2RlID0gbm9kZXNbaV07XG5cbiAgICAvLyByZXBsYWNlIHdpdGggY3VzdG9tIFJlYWN0IGVsZW1lbnQgKGlmIHByZXNlbnQpXG4gICAgaWYgKGhhc1JlcGxhY2UpIHtcbiAgICAgIHJlcGxhY2VFbGVtZW50ID0gb3B0aW9ucy5yZXBsYWNlKG5vZGUpO1xuXG4gICAgICBpZiAoaXNWYWxpZEVsZW1lbnQocmVwbGFjZUVsZW1lbnQpKSB7XG4gICAgICAgIC8vIHNldCBcImtleVwiIHByb3AgZm9yIHNpYmxpbmcgZWxlbWVudHNcbiAgICAgICAgLy8gaHR0cHM6Ly9mYi5tZS9yZWFjdC13YXJuaW5nLWtleXNcbiAgICAgICAgaWYgKGxlbiA+IDEpIHtcbiAgICAgICAgICByZXBsYWNlRWxlbWVudCA9IGNsb25lRWxlbWVudChyZXBsYWNlRWxlbWVudCwge1xuICAgICAgICAgICAga2V5OiByZXBsYWNlRWxlbWVudC5rZXkgfHwgaVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdC5wdXNoKHJlcGxhY2VFbGVtZW50KTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG5vZGUudHlwZSA9PT0gJ3RleHQnKSB7XG4gICAgICBpc1doaXRlc3BhY2UgPSAhbm9kZS5kYXRhLnRyaW0oKS5sZW5ndGg7XG5cbiAgICAgIGlmIChpc1doaXRlc3BhY2UgJiYgbm9kZS5wYXJlbnQgJiYgIWNhblRleHRCZUNoaWxkT2ZOb2RlKG5vZGUucGFyZW50KSkge1xuICAgICAgICAvLyBXZSBoYXZlIGEgd2hpdGVzcGFjZSBub2RlIHRoYXQgY2FuJ3QgYmUgbmVzdGVkIGluIGl0cyBwYXJlbnRcbiAgICAgICAgLy8gc28gc2tpcCBpdFxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHRyaW0gJiYgaXNXaGl0ZXNwYWNlKSB7XG4gICAgICAgIC8vIFRyaW0gaXMgZW5hYmxlZCBhbmQgd2UgaGF2ZSBhIHdoaXRlc3BhY2Ugbm9kZVxuICAgICAgICAvLyBzbyBza2lwIGl0XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICAvLyBXZSBoYXZlIGEgdGV4dCBub2RlIHRoYXQncyBub3Qgd2hpdGVzcGFjZSBhbmQgaXQgY2FuIGJlIG5lc3RlZFxuICAgICAgLy8gaW4gaXRzIHBhcmVudCBzbyBhZGQgaXQgdG8gdGhlIHJlc3VsdHNcbiAgICAgIHJlc3VsdC5wdXNoKG5vZGUuZGF0YSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBwcm9wcyA9IG5vZGUuYXR0cmlicztcbiAgICBpZiAoc2tpcEF0dHJpYnV0ZXNUb1Byb3BzKG5vZGUpKSB7XG4gICAgICBzZXRTdHlsZVByb3AocHJvcHMuc3R5bGUsIHByb3BzKTtcbiAgICB9IGVsc2UgaWYgKHByb3BzKSB7XG4gICAgICBwcm9wcyA9IGF0dHJpYnV0ZXNUb1Byb3BzKHByb3BzLCBub2RlLm5hbWUpO1xuICAgIH1cblxuICAgIGNoaWxkcmVuID0gbnVsbDtcblxuICAgIHN3aXRjaCAobm9kZS50eXBlKSB7XG4gICAgICBjYXNlICdzY3JpcHQnOlxuICAgICAgY2FzZSAnc3R5bGUnOlxuICAgICAgICAvLyBwcmV2ZW50IHRleHQgaW4gPHNjcmlwdD4gb3IgPHN0eWxlPiBmcm9tIGJlaW5nIGVzY2FwZWRcbiAgICAgICAgLy8gaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2RvbS1lbGVtZW50cy5odG1sI2Rhbmdlcm91c2x5c2V0aW5uZXJodG1sXG4gICAgICAgIGlmIChub2RlLmNoaWxkcmVuWzBdKSB7XG4gICAgICAgICAgcHJvcHMuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgPSB7XG4gICAgICAgICAgICBfX2h0bWw6IG5vZGUuY2hpbGRyZW5bMF0uZGF0YVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3RhZyc6XG4gICAgICAgIC8vIHNldHRpbmcgdGV4dGFyZWEgdmFsdWUgaW4gY2hpbGRyZW4gaXMgYW4gYW50aXBhdHRlcm4gaW4gUmVhY3RcbiAgICAgICAgLy8gaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Zvcm1zLmh0bWwjdGhlLXRleHRhcmVhLXRhZ1xuICAgICAgICBpZiAobm9kZS5uYW1lID09PSAndGV4dGFyZWEnICYmIG5vZGUuY2hpbGRyZW5bMF0pIHtcbiAgICAgICAgICBwcm9wcy5kZWZhdWx0VmFsdWUgPSBub2RlLmNoaWxkcmVuWzBdLmRhdGE7XG4gICAgICAgIH0gZWxzZSBpZiAobm9kZS5jaGlsZHJlbiAmJiBub2RlLmNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgIC8vIGNvbnRpbnVlIHJlY3Vyc2lvbiBvZiBjcmVhdGluZyBSZWFjdCBlbGVtZW50cyAoaWYgYXBwbGljYWJsZSlcbiAgICAgICAgICBjaGlsZHJlbiA9IGRvbVRvUmVhY3Qobm9kZS5jaGlsZHJlbiwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIC8vIHNraXAgYWxsIG90aGVyIGNhc2VzIChlLmcuLCBjb21tZW50KVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gc2V0IFwia2V5XCIgcHJvcCBmb3Igc2libGluZyBlbGVtZW50c1xuICAgIC8vIGh0dHBzOi8vZmIubWUvcmVhY3Qtd2FybmluZy1rZXlzXG4gICAgaWYgKGxlbiA+IDEpIHtcbiAgICAgIHByb3BzLmtleSA9IGk7XG4gICAgfVxuXG4gICAgcmVzdWx0LnB1c2goY3JlYXRlRWxlbWVudChub2RlLm5hbWUsIHByb3BzLCBjaGlsZHJlbikpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IDEgPyByZXN1bHRbMF0gOiByZXN1bHQ7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIERPTSBlbGVtZW50IGF0dHJpYnV0ZXMgc2hvdWxkIGJlIHRyYW5zZm9ybWVkIHRvIHByb3BzLlxuICogV2ViIENvbXBvbmVudHMgc2hvdWxkIG5vdCBoYXZlIHRoZWlyIGF0dHJpYnV0ZXMgdHJhbnNmb3JtZWQgZXhjZXB0IGZvciBgc3R5bGVgLlxuICpcbiAqIEBwYXJhbSB7RG9tRWxlbWVudH0gbm9kZVxuICogQHJldHVybnMgLSBXaGV0aGVyIG5vZGUgYXR0cmlidXRlcyBzaG91bGQgYmUgY29udmVydGVkIHRvIHByb3BzLlxuICovXG5mdW5jdGlvbiBza2lwQXR0cmlidXRlc1RvUHJvcHMobm9kZSkge1xuICByZXR1cm4gKFxuICAgIHV0aWxpdGllcy5QUkVTRVJWRV9DVVNUT01fQVRUUklCVVRFUyAmJlxuICAgIG5vZGUudHlwZSA9PT0gJ3RhZycgJiZcbiAgICB1dGlsaXRpZXMuaXNDdXN0b21Db21wb25lbnQobm9kZS5uYW1lLCBub2RlLmF0dHJpYnMpXG4gICk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tVG9SZWFjdDtcbiIsInZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG52YXIgc3R5bGVUb0pTID0gcmVxdWlyZSgnc3R5bGUtdG8tanMnKS5kZWZhdWx0O1xuXG4vKipcbiAqIFN3YXAga2V5IHdpdGggdmFsdWUgaW4gYW4gb2JqZWN0LlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvYmogLSBUaGUgb2JqZWN0LlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW292ZXJyaWRlXSAtIFRoZSBvdmVycmlkZSBtZXRob2QuXG4gKiBAcmV0dXJucyAtIFRoZSBpbnZlcnRlZCBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGludmVydE9iamVjdChvYmosIG92ZXJyaWRlKSB7XG4gIGlmICghb2JqIHx8IHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhbiBvYmplY3QnKTtcbiAgfVxuXG4gIHZhciBrZXk7XG4gIHZhciB2YWx1ZTtcbiAgdmFyIGlzT3ZlcnJpZGVQcmVzZW50ID0gdHlwZW9mIG92ZXJyaWRlID09PSAnZnVuY3Rpb24nO1xuICB2YXIgb3ZlcnJpZGVzID0ge307XG4gIHZhciByZXN1bHQgPSB7fTtcblxuICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICB2YWx1ZSA9IG9ialtrZXldO1xuXG4gICAgaWYgKGlzT3ZlcnJpZGVQcmVzZW50KSB7XG4gICAgICBvdmVycmlkZXMgPSBvdmVycmlkZShrZXksIHZhbHVlKTtcbiAgICAgIGlmIChvdmVycmlkZXMgJiYgb3ZlcnJpZGVzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICByZXN1bHRbb3ZlcnJpZGVzWzBdXSA9IG92ZXJyaWRlc1sxXTtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHJlc3VsdFt2YWx1ZV0gPSBrZXk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIHRhZyBpcyBhIGN1c3RvbSBjb21wb25lbnQuXG4gKlxuICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvdjE2LjYuMy9wYWNrYWdlcy9yZWFjdC1kb20vc3JjL3NoYXJlZC9pc0N1c3RvbUNvbXBvbmVudC5qc31cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSBodG1sIHRhZy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBwcm9wcyAtIFRoZSBwcm9wcyBiZWluZyBwYXNzZWQgdG8gdGhlIGVsZW1lbnQuXG4gKiBAcmV0dXJucyAtIFdoZXRoZXIgdGFnIGlzIGN1c3RvbSBjb21wb25lbnQuXG4gKi9cbmZ1bmN0aW9uIGlzQ3VzdG9tQ29tcG9uZW50KHRhZ05hbWUsIHByb3BzKSB7XG4gIGlmICh0YWdOYW1lLmluZGV4T2YoJy0nKSA9PT0gLTEpIHtcbiAgICByZXR1cm4gcHJvcHMgJiYgdHlwZW9mIHByb3BzLmlzID09PSAnc3RyaW5nJztcbiAgfVxuXG4gIHN3aXRjaCAodGFnTmFtZSkge1xuICAgIC8vIFRoZXNlIGFyZSByZXNlcnZlZCBTVkcgYW5kIE1hdGhNTCBlbGVtZW50cy5cbiAgICAvLyBXZSBkb24ndCBtaW5kIHRoaXMgd2hpdGVsaXN0IHRvbyBtdWNoIGJlY2F1c2Ugd2UgZXhwZWN0IGl0IHRvIG5ldmVyIGdyb3cuXG4gICAgLy8gVGhlIGFsdGVybmF0aXZlIGlzIHRvIHRyYWNrIHRoZSBuYW1lc3BhY2UgaW4gYSBmZXcgcGxhY2VzIHdoaWNoIGlzIGNvbnZvbHV0ZWQuXG4gICAgLy8gaHR0cHM6Ly93M2MuZ2l0aHViLmlvL3dlYmNvbXBvbmVudHMvc3BlYy9jdXN0b20vI2N1c3RvbS1lbGVtZW50cy1jb3JlLWNvbmNlcHRzXG4gICAgY2FzZSAnYW5ub3RhdGlvbi14bWwnOlxuICAgIGNhc2UgJ2NvbG9yLXByb2ZpbGUnOlxuICAgIGNhc2UgJ2ZvbnQtZmFjZSc6XG4gICAgY2FzZSAnZm9udC1mYWNlLXNyYyc6XG4gICAgY2FzZSAnZm9udC1mYWNlLXVyaSc6XG4gICAgY2FzZSAnZm9udC1mYWNlLWZvcm1hdCc6XG4gICAgY2FzZSAnZm9udC1mYWNlLW5hbWUnOlxuICAgIGNhc2UgJ21pc3NpbmctZ2x5cGgnOlxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufVxuXG52YXIgc3R5bGVUb0pTT3B0aW9ucyA9IHsgcmVhY3RDb21wYXQ6IHRydWUgfTtcblxuLyoqXG4gKiBTZXRzIHN0eWxlIHByb3AuXG4gKlxuICogQHBhcmFtIHtudWxsfHVuZGVmaW5lZHxzdHJpbmd9IHN0eWxlXG4gKiBAcGFyYW0ge29iamVjdH0gcHJvcHNcbiAqL1xuZnVuY3Rpb24gc2V0U3R5bGVQcm9wKHN0eWxlLCBwcm9wcykge1xuICBpZiAoc3R5bGUgPT09IG51bGwgfHwgc3R5bGUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybjtcbiAgfVxuICB0cnkge1xuICAgIHByb3BzLnN0eWxlID0gc3R5bGVUb0pTKHN0eWxlLCBzdHlsZVRvSlNPcHRpb25zKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcHJvcHMuc3R5bGUgPSB7fTtcbiAgfVxufVxuXG4vKipcbiAqIEBjb25zdGFudCB7Ym9vbGVhbn1cbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vcmVhY3Rqcy5vcmcvYmxvZy8yMDE3LzA5LzA4L2RvbS1hdHRyaWJ1dGVzLWluLXJlYWN0LTE2Lmh0bWx9XG4gKi9cbnZhciBQUkVTRVJWRV9DVVNUT01fQVRUUklCVVRFUyA9IFJlYWN0LnZlcnNpb24uc3BsaXQoJy4nKVswXSA+PSAxNjtcblxuLy8gVGFrZW4gZnJvbVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvY2FlNjM1MDU0ZTE3YTZmMTA3YTM5ZDMyODY0OTEzN2I4M2YyNTk3Mi9wYWNrYWdlcy9yZWFjdC1kb20vc3JjL2NsaWVudC92YWxpZGF0ZURPTU5lc3RpbmcuanMjTDIxM1xudmFyIGVsZW1lbnRzV2l0aE5vVGV4dENoaWxkcmVuID0gbmV3IFNldChbXG4gICd0cicsXG4gICd0Ym9keScsXG4gICd0aGVhZCcsXG4gICd0Zm9vdCcsXG4gICdjb2xncm91cCcsXG4gICd0YWJsZScsXG4gICdoZWFkJyxcbiAgJ2h0bWwnLFxuICAnZnJhbWVzZXQnXG5dKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGdpdmVuIG5vZGUgY2FuIGNvbnRhaW4gdGV4dCBub2Rlc1xuICpcbiAqIEBwYXJhbSB7RG9tRWxlbWVudH0gbm9kZSAtIE5vZGUuXG4gKiBAcmV0dXJucyAtIFdoZXRoZXIgbm9kZSBjYW4gY29udGFpbiB0ZXh0IG5vZGVzLlxuICovXG5mdW5jdGlvbiBjYW5UZXh0QmVDaGlsZE9mTm9kZShub2RlKSB7XG4gIHJldHVybiAhZWxlbWVudHNXaXRoTm9UZXh0Q2hpbGRyZW4uaGFzKG5vZGUubmFtZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBQUkVTRVJWRV9DVVNUT01fQVRUUklCVVRFUzogUFJFU0VSVkVfQ1VTVE9NX0FUVFJJQlVURVMsXG4gIGludmVydE9iamVjdDogaW52ZXJ0T2JqZWN0LFxuICBpc0N1c3RvbUNvbXBvbmVudDogaXNDdXN0b21Db21wb25lbnQsXG4gIHNldFN0eWxlUHJvcDogc2V0U3R5bGVQcm9wLFxuICBjYW5UZXh0QmVDaGlsZE9mTm9kZTogY2FuVGV4dEJlQ2hpbGRPZk5vZGUsXG4gIGVsZW1lbnRzV2l0aE5vVGV4dENoaWxkcmVuOiBlbGVtZW50c1dpdGhOb1RleHRDaGlsZHJlblxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRvbUhhbmRsZXIgPSB2b2lkIDA7XG52YXIgZG9tZWxlbWVudHR5cGVfMSA9IHJlcXVpcmUoXCJkb21lbGVtZW50dHlwZVwiKTtcbnZhciBub2RlX2pzXzEgPSByZXF1aXJlKFwiLi9ub2RlLmpzXCIpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL25vZGUuanNcIiksIGV4cG9ydHMpO1xuLy8gRGVmYXVsdCBvcHRpb25zXG52YXIgZGVmYXVsdE9wdHMgPSB7XG4gICAgd2l0aFN0YXJ0SW5kaWNlczogZmFsc2UsXG4gICAgd2l0aEVuZEluZGljZXM6IGZhbHNlLFxuICAgIHhtbE1vZGU6IGZhbHNlLFxufTtcbnZhciBEb21IYW5kbGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBDYWxsZWQgb25jZSBwYXJzaW5nIGhhcyBjb21wbGV0ZWQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgU2V0dGluZ3MgZm9yIHRoZSBoYW5kbGVyLlxuICAgICAqIEBwYXJhbSBlbGVtZW50Q0IgQ2FsbGJhY2sgd2hlbmV2ZXIgYSB0YWcgaXMgY2xvc2VkLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIERvbUhhbmRsZXIoY2FsbGJhY2ssIG9wdGlvbnMsIGVsZW1lbnRDQikge1xuICAgICAgICAvKiogVGhlIGVsZW1lbnRzIG9mIHRoZSBET00gKi9cbiAgICAgICAgdGhpcy5kb20gPSBbXTtcbiAgICAgICAgLyoqIFRoZSByb290IGVsZW1lbnQgZm9yIHRoZSBET00gKi9cbiAgICAgICAgdGhpcy5yb290ID0gbmV3IG5vZGVfanNfMS5Eb2N1bWVudCh0aGlzLmRvbSk7XG4gICAgICAgIC8qKiBJbmRpY2F0ZWQgd2hldGhlciBwYXJzaW5nIGhhcyBiZWVuIGNvbXBsZXRlZC4gKi9cbiAgICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICAgIC8qKiBTdGFjayBvZiBvcGVuIHRhZ3MuICovXG4gICAgICAgIHRoaXMudGFnU3RhY2sgPSBbdGhpcy5yb290XTtcbiAgICAgICAgLyoqIEEgZGF0YSBub2RlIHRoYXQgaXMgc3RpbGwgYmVpbmcgd3JpdHRlbiB0by4gKi9cbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgICAgIC8qKiBSZWZlcmVuY2UgdG8gdGhlIHBhcnNlciBpbnN0YW5jZS4gVXNlZCBmb3IgbG9jYXRpb24gaW5mb3JtYXRpb24uICovXG4gICAgICAgIHRoaXMucGFyc2VyID0gbnVsbDtcbiAgICAgICAgLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBza2lwIGFyZ3VtZW50cywgZm9yIGJhY2t3YXJkcy1jb21wYXRpYmlsaXR5XG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBlbGVtZW50Q0IgPSBvcHRpb25zO1xuICAgICAgICAgICAgb3B0aW9ucyA9IGRlZmF1bHRPcHRzO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgIG9wdGlvbnMgPSBjYWxsYmFjaztcbiAgICAgICAgICAgIGNhbGxiYWNrID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjayAhPT0gbnVsbCAmJiBjYWxsYmFjayAhPT0gdm9pZCAwID8gY2FsbGJhY2sgOiBudWxsO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zICE9PSBudWxsICYmIG9wdGlvbnMgIT09IHZvaWQgMCA/IG9wdGlvbnMgOiBkZWZhdWx0T3B0cztcbiAgICAgICAgdGhpcy5lbGVtZW50Q0IgPSBlbGVtZW50Q0IgIT09IG51bGwgJiYgZWxlbWVudENCICE9PSB2b2lkIDAgPyBlbGVtZW50Q0IgOiBudWxsO1xuICAgIH1cbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnBhcnNlcmluaXQgPSBmdW5jdGlvbiAocGFyc2VyKSB7XG4gICAgICAgIHRoaXMucGFyc2VyID0gcGFyc2VyO1xuICAgIH07XG4gICAgLy8gUmVzZXRzIHRoZSBoYW5kbGVyIGJhY2sgdG8gc3RhcnRpbmcgc3RhdGVcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmRvbSA9IFtdO1xuICAgICAgICB0aGlzLnJvb3QgPSBuZXcgbm9kZV9qc18xLkRvY3VtZW50KHRoaXMuZG9tKTtcbiAgICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICAgIHRoaXMudGFnU3RhY2sgPSBbdGhpcy5yb290XTtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgICAgIHRoaXMucGFyc2VyID0gbnVsbDtcbiAgICB9O1xuICAgIC8vIFNpZ25hbHMgdGhlIGhhbmRsZXIgdGhhdCBwYXJzaW5nIGlzIGRvbmVcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbmVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuZG9uZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5wYXJzZXIgPSBudWxsO1xuICAgICAgICB0aGlzLmhhbmRsZUNhbGxiYWNrKG51bGwpO1xuICAgIH07XG4gICAgRG9tSGFuZGxlci5wcm90b3R5cGUub25lcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICB0aGlzLmhhbmRsZUNhbGxiYWNrKGVycm9yKTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9uY2xvc2V0YWcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMubGFzdE5vZGUgPSBudWxsO1xuICAgICAgICB2YXIgZWxlbSA9IHRoaXMudGFnU3RhY2sucG9wKCk7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMud2l0aEVuZEluZGljZXMpIHtcbiAgICAgICAgICAgIGVsZW0uZW5kSW5kZXggPSB0aGlzLnBhcnNlci5lbmRJbmRleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5lbGVtZW50Q0IpXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRDQihlbGVtKTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9ub3BlbnRhZyA9IGZ1bmN0aW9uIChuYW1lLCBhdHRyaWJzKSB7XG4gICAgICAgIHZhciB0eXBlID0gdGhpcy5vcHRpb25zLnhtbE1vZGUgPyBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlRhZyA6IHVuZGVmaW5lZDtcbiAgICAgICAgdmFyIGVsZW1lbnQgPSBuZXcgbm9kZV9qc18xLkVsZW1lbnQobmFtZSwgYXR0cmlicywgdW5kZWZpbmVkLCB0eXBlKTtcbiAgICAgICAgdGhpcy5hZGROb2RlKGVsZW1lbnQpO1xuICAgICAgICB0aGlzLnRhZ1N0YWNrLnB1c2goZWxlbWVudCk7XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnRleHQgPSBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICB2YXIgbGFzdE5vZGUgPSB0aGlzLmxhc3ROb2RlO1xuICAgICAgICBpZiAobGFzdE5vZGUgJiYgbGFzdE5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5UZXh0KSB7XG4gICAgICAgICAgICBsYXN0Tm9kZS5kYXRhICs9IGRhdGE7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLndpdGhFbmRJbmRpY2VzKSB7XG4gICAgICAgICAgICAgICAgbGFzdE5vZGUuZW5kSW5kZXggPSB0aGlzLnBhcnNlci5lbmRJbmRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gbmV3IG5vZGVfanNfMS5UZXh0KGRhdGEpO1xuICAgICAgICAgICAgdGhpcy5hZGROb2RlKG5vZGUpO1xuICAgICAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG5vZGU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9uY29tbWVudCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmICh0aGlzLmxhc3ROb2RlICYmIHRoaXMubGFzdE5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5Db21tZW50KSB7XG4gICAgICAgICAgICB0aGlzLmxhc3ROb2RlLmRhdGEgKz0gZGF0YTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbm9kZSA9IG5ldyBub2RlX2pzXzEuQ29tbWVudChkYXRhKTtcbiAgICAgICAgdGhpcy5hZGROb2RlKG5vZGUpO1xuICAgICAgICB0aGlzLmxhc3ROb2RlID0gbm9kZTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLm9uY29tbWVudGVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbmNkYXRhc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gbmV3IG5vZGVfanNfMS5UZXh0KFwiXCIpO1xuICAgICAgICB2YXIgbm9kZSA9IG5ldyBub2RlX2pzXzEuQ0RBVEEoW3RleHRdKTtcbiAgICAgICAgdGhpcy5hZGROb2RlKG5vZGUpO1xuICAgICAgICB0ZXh0LnBhcmVudCA9IG5vZGU7XG4gICAgICAgIHRoaXMubGFzdE5vZGUgPSB0ZXh0O1xuICAgIH07XG4gICAgRG9tSGFuZGxlci5wcm90b3R5cGUub25jZGF0YWVuZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5vbnByb2Nlc3NpbmdpbnN0cnVjdGlvbiA9IGZ1bmN0aW9uIChuYW1lLCBkYXRhKSB7XG4gICAgICAgIHZhciBub2RlID0gbmV3IG5vZGVfanNfMS5Qcm9jZXNzaW5nSW5zdHJ1Y3Rpb24obmFtZSwgZGF0YSk7XG4gICAgICAgIHRoaXMuYWRkTm9kZShub2RlKTtcbiAgICB9O1xuICAgIERvbUhhbmRsZXIucHJvdG90eXBlLmhhbmRsZUNhbGxiYWNrID0gZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5jYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrKGVycm9yLCB0aGlzLmRvbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEb21IYW5kbGVyLnByb3RvdHlwZS5hZGROb2RlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgdmFyIHBhcmVudCA9IHRoaXMudGFnU3RhY2tbdGhpcy50YWdTdGFjay5sZW5ndGggLSAxXTtcbiAgICAgICAgdmFyIHByZXZpb3VzU2libGluZyA9IHBhcmVudC5jaGlsZHJlbltwYXJlbnQuY2hpbGRyZW4ubGVuZ3RoIC0gMV07XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMud2l0aFN0YXJ0SW5kaWNlcykge1xuICAgICAgICAgICAgbm9kZS5zdGFydEluZGV4ID0gdGhpcy5wYXJzZXIuc3RhcnRJbmRleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5vcHRpb25zLndpdGhFbmRJbmRpY2VzKSB7XG4gICAgICAgICAgICBub2RlLmVuZEluZGV4ID0gdGhpcy5wYXJzZXIuZW5kSW5kZXg7XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50LmNoaWxkcmVuLnB1c2gobm9kZSk7XG4gICAgICAgIGlmIChwcmV2aW91c1NpYmxpbmcpIHtcbiAgICAgICAgICAgIG5vZGUucHJldiA9IHByZXZpb3VzU2libGluZztcbiAgICAgICAgICAgIHByZXZpb3VzU2libGluZy5uZXh0ID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBub2RlLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgdGhpcy5sYXN0Tm9kZSA9IG51bGw7XG4gICAgfTtcbiAgICByZXR1cm4gRG9tSGFuZGxlcjtcbn0oKSk7XG5leHBvcnRzLkRvbUhhbmRsZXIgPSBEb21IYW5kbGVyO1xuZXhwb3J0cy5kZWZhdWx0ID0gRG9tSGFuZGxlcjtcbiIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNsb25lTm9kZSA9IGV4cG9ydHMuaGFzQ2hpbGRyZW4gPSBleHBvcnRzLmlzRG9jdW1lbnQgPSBleHBvcnRzLmlzRGlyZWN0aXZlID0gZXhwb3J0cy5pc0NvbW1lbnQgPSBleHBvcnRzLmlzVGV4dCA9IGV4cG9ydHMuaXNDREFUQSA9IGV4cG9ydHMuaXNUYWcgPSBleHBvcnRzLkVsZW1lbnQgPSBleHBvcnRzLkRvY3VtZW50ID0gZXhwb3J0cy5DREFUQSA9IGV4cG9ydHMuTm9kZVdpdGhDaGlsZHJlbiA9IGV4cG9ydHMuUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gZXhwb3J0cy5Db21tZW50ID0gZXhwb3J0cy5UZXh0ID0gZXhwb3J0cy5EYXRhTm9kZSA9IGV4cG9ydHMuTm9kZSA9IHZvaWQgMDtcbnZhciBkb21lbGVtZW50dHlwZV8xID0gcmVxdWlyZShcImRvbWVsZW1lbnR0eXBlXCIpO1xuLyoqXG4gKiBUaGlzIG9iamVjdCB3aWxsIGJlIHVzZWQgYXMgdGhlIHByb3RvdHlwZSBmb3IgTm9kZXMgd2hlbiBjcmVhdGluZyBhXG4gKiBET00tTGV2ZWwtMS1jb21wbGlhbnQgc3RydWN0dXJlLlxuICovXG52YXIgTm9kZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb2RlKCkge1xuICAgICAgICAvKiogUGFyZW50IG9mIHRoZSBub2RlICovXG4gICAgICAgIHRoaXMucGFyZW50ID0gbnVsbDtcbiAgICAgICAgLyoqIFByZXZpb3VzIHNpYmxpbmcgKi9cbiAgICAgICAgdGhpcy5wcmV2ID0gbnVsbDtcbiAgICAgICAgLyoqIE5leHQgc2libGluZyAqL1xuICAgICAgICB0aGlzLm5leHQgPSBudWxsO1xuICAgICAgICAvKiogVGhlIHN0YXJ0IGluZGV4IG9mIHRoZSBub2RlLiBSZXF1aXJlcyBgd2l0aFN0YXJ0SW5kaWNlc2Agb24gdGhlIGhhbmRsZXIgdG8gYmUgYHRydWUuICovXG4gICAgICAgIHRoaXMuc3RhcnRJbmRleCA9IG51bGw7XG4gICAgICAgIC8qKiBUaGUgZW5kIGluZGV4IG9mIHRoZSBub2RlLiBSZXF1aXJlcyBgd2l0aEVuZEluZGljZXNgIG9uIHRoZSBoYW5kbGVyIHRvIGJlIGB0cnVlLiAqL1xuICAgICAgICB0aGlzLmVuZEluZGV4ID0gbnVsbDtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGUucHJvdG90eXBlLCBcInBhcmVudE5vZGVcIiwge1xuICAgICAgICAvLyBSZWFkLXdyaXRlIGFsaWFzZXMgZm9yIHByb3BlcnRpZXNcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIHBhcmVudH0uXG4gICAgICAgICAqIFtET00gc3BlY10oaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnKS1jb21wYXRpYmxlIGFsaWFzLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHBhcmVudCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZS5wcm90b3R5cGUsIFwicHJldmlvdXNTaWJsaW5nXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIHByZXZ9LlxuICAgICAgICAgKiBbRE9NIHNwZWNdKGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZyktY29tcGF0aWJsZSBhbGlhcy5cbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJldjtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAocHJldikge1xuICAgICAgICAgICAgdGhpcy5wcmV2ID0gcHJldjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlLnByb3RvdHlwZSwgXCJuZXh0U2libGluZ1wiLCB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTYW1lIGFzIHtAbGluayBuZXh0fS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5leHQ7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKG5leHQpIHtcbiAgICAgICAgICAgIHRoaXMubmV4dCA9IG5leHQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBDbG9uZSB0aGlzIG5vZGUsIGFuZCBvcHRpb25hbGx5IGl0cyBjaGlsZHJlbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSByZWN1cnNpdmUgQ2xvbmUgY2hpbGQgbm9kZXMgYXMgd2VsbC5cbiAgICAgKiBAcmV0dXJucyBBIGNsb25lIG9mIHRoZSBub2RlLlxuICAgICAqL1xuICAgIE5vZGUucHJvdG90eXBlLmNsb25lTm9kZSA9IGZ1bmN0aW9uIChyZWN1cnNpdmUpIHtcbiAgICAgICAgaWYgKHJlY3Vyc2l2ZSA9PT0gdm9pZCAwKSB7IHJlY3Vyc2l2ZSA9IGZhbHNlOyB9XG4gICAgICAgIHJldHVybiBjbG9uZU5vZGUodGhpcywgcmVjdXJzaXZlKTtcbiAgICB9O1xuICAgIHJldHVybiBOb2RlO1xufSgpKTtcbmV4cG9ydHMuTm9kZSA9IE5vZGU7XG4vKipcbiAqIEEgbm9kZSB0aGF0IGNvbnRhaW5zIHNvbWUgZGF0YS5cbiAqL1xudmFyIERhdGFOb2RlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEYXRhTm9kZSwgX3N1cGVyKTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gZGF0YSBUaGUgY29udGVudCBvZiB0aGUgZGF0YSBub2RlXG4gICAgICovXG4gICAgZnVuY3Rpb24gRGF0YU5vZGUoZGF0YSkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5kYXRhID0gZGF0YTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRGF0YU5vZGUucHJvdG90eXBlLCBcIm5vZGVWYWx1ZVwiLCB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTYW1lIGFzIHtAbGluayBkYXRhfS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRhdGE7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gRGF0YU5vZGU7XG59KE5vZGUpKTtcbmV4cG9ydHMuRGF0YU5vZGUgPSBEYXRhTm9kZTtcbi8qKlxuICogVGV4dCB3aXRoaW4gdGhlIGRvY3VtZW50LlxuICovXG52YXIgVGV4dCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVGV4dCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBUZXh0KCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudHlwZSA9IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuVGV4dDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVGV4dC5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAzO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFRleHQ7XG59KERhdGFOb2RlKSk7XG5leHBvcnRzLlRleHQgPSBUZXh0O1xuLyoqXG4gKiBDb21tZW50cyB3aXRoaW4gdGhlIGRvY3VtZW50LlxuICovXG52YXIgQ29tbWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ29tbWVudCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDb21tZW50KCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudHlwZSA9IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuQ29tbWVudDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29tbWVudC5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiA4O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIENvbW1lbnQ7XG59KERhdGFOb2RlKSk7XG5leHBvcnRzLkNvbW1lbnQgPSBDb21tZW50O1xuLyoqXG4gKiBQcm9jZXNzaW5nIGluc3RydWN0aW9ucywgaW5jbHVkaW5nIGRvYyB0eXBlcy5cbiAqL1xudmFyIFByb2Nlc3NpbmdJbnN0cnVjdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUHJvY2Vzc2luZ0luc3RydWN0aW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFByb2Nlc3NpbmdJbnN0cnVjdGlvbihuYW1lLCBkYXRhKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGRhdGEpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICBfdGhpcy50eXBlID0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5EaXJlY3RpdmU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFByb2Nlc3NpbmdJbnN0cnVjdGlvbi5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFByb2Nlc3NpbmdJbnN0cnVjdGlvbjtcbn0oRGF0YU5vZGUpKTtcbmV4cG9ydHMuUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gUHJvY2Vzc2luZ0luc3RydWN0aW9uO1xuLyoqXG4gKiBBIGBOb2RlYCB0aGF0IGNhbiBoYXZlIGNoaWxkcmVuLlxuICovXG52YXIgTm9kZVdpdGhDaGlsZHJlbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTm9kZVdpdGhDaGlsZHJlbiwgX3N1cGVyKTtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY2hpbGRyZW4gQ2hpbGRyZW4gb2YgdGhlIG5vZGUuIE9ubHkgY2VydGFpbiBub2RlIHR5cGVzIGNhbiBoYXZlIGNoaWxkcmVuLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIE5vZGVXaXRoQ2hpbGRyZW4oY2hpbGRyZW4pIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuY2hpbGRyZW4gPSBjaGlsZHJlbjtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZVdpdGhDaGlsZHJlbi5wcm90b3R5cGUsIFwiZmlyc3RDaGlsZFwiLCB7XG4gICAgICAgIC8vIEFsaWFzZXNcbiAgICAgICAgLyoqIEZpcnN0IGNoaWxkIG9mIHRoZSBub2RlLiAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIHJldHVybiAoX2EgPSB0aGlzLmNoaWxkcmVuWzBdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGVXaXRoQ2hpbGRyZW4ucHJvdG90eXBlLCBcImxhc3RDaGlsZFwiLCB7XG4gICAgICAgIC8qKiBMYXN0IGNoaWxkIG9mIHRoZSBub2RlLiAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuLmxlbmd0aCA+IDBcbiAgICAgICAgICAgICAgICA/IHRoaXMuY2hpbGRyZW5bdGhpcy5jaGlsZHJlbi5sZW5ndGggLSAxXVxuICAgICAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlV2l0aENoaWxkcmVuLnByb3RvdHlwZSwgXCJjaGlsZE5vZGVzXCIsIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNhbWUgYXMge0BsaW5rIGNoaWxkcmVufS5cbiAgICAgICAgICogW0RPTSBzcGVjXShodHRwczovL2RvbS5zcGVjLndoYXR3Zy5vcmcpLWNvbXBhdGlibGUgYWxpYXMuXG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNoaWxkcmVuO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChjaGlsZHJlbikge1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IGNoaWxkcmVuO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIE5vZGVXaXRoQ2hpbGRyZW47XG59KE5vZGUpKTtcbmV4cG9ydHMuTm9kZVdpdGhDaGlsZHJlbiA9IE5vZGVXaXRoQ2hpbGRyZW47XG52YXIgQ0RBVEEgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENEQVRBLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENEQVRBKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMudHlwZSA9IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuQ0RBVEE7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENEQVRBLnByb3RvdHlwZSwgXCJub2RlVHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIDQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gQ0RBVEE7XG59KE5vZGVXaXRoQ2hpbGRyZW4pKTtcbmV4cG9ydHMuQ0RBVEEgPSBDREFUQTtcbi8qKlxuICogVGhlIHJvb3Qgbm9kZSBvZiB0aGUgZG9jdW1lbnQuXG4gKi9cbnZhciBEb2N1bWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRG9jdW1lbnQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRG9jdW1lbnQoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy50eXBlID0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5Sb290O1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEb2N1bWVudC5wcm90b3R5cGUsIFwibm9kZVR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiA5O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIERvY3VtZW50O1xufShOb2RlV2l0aENoaWxkcmVuKSk7XG5leHBvcnRzLkRvY3VtZW50ID0gRG9jdW1lbnQ7XG4vKipcbiAqIEFuIGVsZW1lbnQgd2l0aGluIHRoZSBET00uXG4gKi9cbnZhciBFbGVtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhFbGVtZW50LCBfc3VwZXIpO1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBuYW1lIE5hbWUgb2YgdGhlIHRhZywgZWcuIGBkaXZgLCBgc3BhbmAuXG4gICAgICogQHBhcmFtIGF0dHJpYnMgT2JqZWN0IG1hcHBpbmcgYXR0cmlidXRlIG5hbWVzIHRvIGF0dHJpYnV0ZSB2YWx1ZXMuXG4gICAgICogQHBhcmFtIGNoaWxkcmVuIENoaWxkcmVuIG9mIHRoZSBub2RlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIEVsZW1lbnQobmFtZSwgYXR0cmlicywgY2hpbGRyZW4sIHR5cGUpIHtcbiAgICAgICAgaWYgKGNoaWxkcmVuID09PSB2b2lkIDApIHsgY2hpbGRyZW4gPSBbXTsgfVxuICAgICAgICBpZiAodHlwZSA9PT0gdm9pZCAwKSB7IHR5cGUgPSBuYW1lID09PSBcInNjcmlwdFwiXG4gICAgICAgICAgICA/IGRvbWVsZW1lbnR0eXBlXzEuRWxlbWVudFR5cGUuU2NyaXB0XG4gICAgICAgICAgICA6IG5hbWUgPT09IFwic3R5bGVcIlxuICAgICAgICAgICAgICAgID8gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5TdHlsZVxuICAgICAgICAgICAgICAgIDogZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5UYWc7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgY2hpbGRyZW4pIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICBfdGhpcy5hdHRyaWJzID0gYXR0cmlicztcbiAgICAgICAgX3RoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEVsZW1lbnQucHJvdG90eXBlLCBcIm5vZGVUeXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFbGVtZW50LnByb3RvdHlwZSwgXCJ0YWdOYW1lXCIsIHtcbiAgICAgICAgLy8gRE9NIExldmVsIDEgYWxpYXNlc1xuICAgICAgICAvKipcbiAgICAgICAgICogU2FtZSBhcyB7QGxpbmsgbmFtZX0uXG4gICAgICAgICAqIFtET00gc3BlY10oaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnKS1jb21wYXRpYmxlIGFsaWFzLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5uYW1lO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEVsZW1lbnQucHJvdG90eXBlLCBcImF0dHJpYnV0ZXNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5hdHRyaWJzKS5tYXAoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgIHJldHVybiAoe1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3RoaXMuYXR0cmlic1tuYW1lXSxcbiAgICAgICAgICAgICAgICAgICAgbmFtZXNwYWNlOiAoX2EgPSBfdGhpc1tcIngtYXR0cmlic05hbWVzcGFjZVwiXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW25hbWVdLFxuICAgICAgICAgICAgICAgICAgICBwcmVmaXg6IChfYiA9IF90aGlzW1wieC1hdHRyaWJzUHJlZml4XCJdKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2JbbmFtZV0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBFbGVtZW50O1xufShOb2RlV2l0aENoaWxkcmVuKSk7XG5leHBvcnRzLkVsZW1lbnQgPSBFbGVtZW50O1xuLyoqXG4gKiBAcGFyYW0gbm9kZSBOb2RlIHRvIGNoZWNrLlxuICogQHJldHVybnMgYHRydWVgIGlmIHRoZSBub2RlIGlzIGEgYEVsZW1lbnRgLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNUYWcobm9kZSkge1xuICAgIHJldHVybiAoMCwgZG9tZWxlbWVudHR5cGVfMS5pc1RhZykobm9kZSk7XG59XG5leHBvcnRzLmlzVGFnID0gaXNUYWc7XG4vKipcbiAqIEBwYXJhbSBub2RlIE5vZGUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG5vZGUgaGFzIHRoZSB0eXBlIGBDREFUQWAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0NEQVRBKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLkNEQVRBO1xufVxuZXhwb3J0cy5pc0NEQVRBID0gaXNDREFUQTtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYFRleHRgLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNUZXh0KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLlRleHQ7XG59XG5leHBvcnRzLmlzVGV4dCA9IGlzVGV4dDtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYENvbW1lbnRgLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNDb21tZW50KG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50eXBlID09PSBkb21lbGVtZW50dHlwZV8xLkVsZW1lbnRUeXBlLkNvbW1lbnQ7XG59XG5leHBvcnRzLmlzQ29tbWVudCA9IGlzQ29tbWVudDtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgdGhlIHR5cGUgYFByb2Nlc3NpbmdJbnN0cnVjdGlvbmAsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBpc0RpcmVjdGl2ZShub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5EaXJlY3RpdmU7XG59XG5leHBvcnRzLmlzRGlyZWN0aXZlID0gaXNEaXJlY3RpdmU7XG4vKipcbiAqIEBwYXJhbSBub2RlIE5vZGUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG5vZGUgaGFzIHRoZSB0eXBlIGBQcm9jZXNzaW5nSW5zdHJ1Y3Rpb25gLCBgZmFsc2VgIG90aGVyd2lzZS5cbiAqL1xuZnVuY3Rpb24gaXNEb2N1bWVudChub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUudHlwZSA9PT0gZG9tZWxlbWVudHR5cGVfMS5FbGVtZW50VHlwZS5Sb290O1xufVxuZXhwb3J0cy5pc0RvY3VtZW50ID0gaXNEb2N1bWVudDtcbi8qKlxuICogQHBhcmFtIG5vZGUgTm9kZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgbm9kZSBoYXMgY2hpbGRyZW4sIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBoYXNDaGlsZHJlbihub2RlKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChub2RlLCBcImNoaWxkcmVuXCIpO1xufVxuZXhwb3J0cy5oYXNDaGlsZHJlbiA9IGhhc0NoaWxkcmVuO1xuLyoqXG4gKiBDbG9uZSBhIG5vZGUsIGFuZCBvcHRpb25hbGx5IGl0cyBjaGlsZHJlbi5cbiAqXG4gKiBAcGFyYW0gcmVjdXJzaXZlIENsb25lIGNoaWxkIG5vZGVzIGFzIHdlbGwuXG4gKiBAcmV0dXJucyBBIGNsb25lIG9mIHRoZSBub2RlLlxuICovXG5mdW5jdGlvbiBjbG9uZU5vZGUobm9kZSwgcmVjdXJzaXZlKSB7XG4gICAgaWYgKHJlY3Vyc2l2ZSA9PT0gdm9pZCAwKSB7IHJlY3Vyc2l2ZSA9IGZhbHNlOyB9XG4gICAgdmFyIHJlc3VsdDtcbiAgICBpZiAoaXNUZXh0KG5vZGUpKSB7XG4gICAgICAgIHJlc3VsdCA9IG5ldyBUZXh0KG5vZGUuZGF0YSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ29tbWVudChub2RlKSkge1xuICAgICAgICByZXN1bHQgPSBuZXcgQ29tbWVudChub2RlLmRhdGEpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc1RhZyhub2RlKSkge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSByZWN1cnNpdmUgPyBjbG9uZUNoaWxkcmVuKG5vZGUuY2hpbGRyZW4pIDogW107XG4gICAgICAgIHZhciBjbG9uZV8xID0gbmV3IEVsZW1lbnQobm9kZS5uYW1lLCBfX2Fzc2lnbih7fSwgbm9kZS5hdHRyaWJzKSwgY2hpbGRyZW4pO1xuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkgeyByZXR1cm4gKGNoaWxkLnBhcmVudCA9IGNsb25lXzEpOyB9KTtcbiAgICAgICAgaWYgKG5vZGUubmFtZXNwYWNlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNsb25lXzEubmFtZXNwYWNlID0gbm9kZS5uYW1lc3BhY2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGVbXCJ4LWF0dHJpYnNOYW1lc3BhY2VcIl0pIHtcbiAgICAgICAgICAgIGNsb25lXzFbXCJ4LWF0dHJpYnNOYW1lc3BhY2VcIl0gPSBfX2Fzc2lnbih7fSwgbm9kZVtcIngtYXR0cmlic05hbWVzcGFjZVwiXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5vZGVbXCJ4LWF0dHJpYnNQcmVmaXhcIl0pIHtcbiAgICAgICAgICAgIGNsb25lXzFbXCJ4LWF0dHJpYnNQcmVmaXhcIl0gPSBfX2Fzc2lnbih7fSwgbm9kZVtcIngtYXR0cmlic1ByZWZpeFwiXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gY2xvbmVfMTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDREFUQShub2RlKSkge1xuICAgICAgICB2YXIgY2hpbGRyZW4gPSByZWN1cnNpdmUgPyBjbG9uZUNoaWxkcmVuKG5vZGUuY2hpbGRyZW4pIDogW107XG4gICAgICAgIHZhciBjbG9uZV8yID0gbmV3IENEQVRBKGNoaWxkcmVuKTtcbiAgICAgICAgY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHsgcmV0dXJuIChjaGlsZC5wYXJlbnQgPSBjbG9uZV8yKTsgfSk7XG4gICAgICAgIHJlc3VsdCA9IGNsb25lXzI7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzRG9jdW1lbnQobm9kZSkpIHtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gcmVjdXJzaXZlID8gY2xvbmVDaGlsZHJlbihub2RlLmNoaWxkcmVuKSA6IFtdO1xuICAgICAgICB2YXIgY2xvbmVfMyA9IG5ldyBEb2N1bWVudChjaGlsZHJlbik7XG4gICAgICAgIGNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiAoY2hpbGQucGFyZW50ID0gY2xvbmVfMyk7IH0pO1xuICAgICAgICBpZiAobm9kZVtcIngtbW9kZVwiXSkge1xuICAgICAgICAgICAgY2xvbmVfM1tcIngtbW9kZVwiXSA9IG5vZGVbXCJ4LW1vZGVcIl07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gY2xvbmVfMztcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNEaXJlY3RpdmUobm9kZSkpIHtcbiAgICAgICAgdmFyIGluc3RydWN0aW9uID0gbmV3IFByb2Nlc3NpbmdJbnN0cnVjdGlvbihub2RlLm5hbWUsIG5vZGUuZGF0YSk7XG4gICAgICAgIGlmIChub2RlW1wieC1uYW1lXCJdICE9IG51bGwpIHtcbiAgICAgICAgICAgIGluc3RydWN0aW9uW1wieC1uYW1lXCJdID0gbm9kZVtcIngtbmFtZVwiXTtcbiAgICAgICAgICAgIGluc3RydWN0aW9uW1wieC1wdWJsaWNJZFwiXSA9IG5vZGVbXCJ4LXB1YmxpY0lkXCJdO1xuICAgICAgICAgICAgaW5zdHJ1Y3Rpb25bXCJ4LXN5c3RlbUlkXCJdID0gbm9kZVtcIngtc3lzdGVtSWRcIl07XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gaW5zdHJ1Y3Rpb247XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQgeWV0OiBcIi5jb25jYXQobm9kZS50eXBlKSk7XG4gICAgfVxuICAgIHJlc3VsdC5zdGFydEluZGV4ID0gbm9kZS5zdGFydEluZGV4O1xuICAgIHJlc3VsdC5lbmRJbmRleCA9IG5vZGUuZW5kSW5kZXg7XG4gICAgaWYgKG5vZGUuc291cmNlQ29kZUxvY2F0aW9uICE9IG51bGwpIHtcbiAgICAgICAgcmVzdWx0LnNvdXJjZUNvZGVMb2NhdGlvbiA9IG5vZGUuc291cmNlQ29kZUxvY2F0aW9uO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5jbG9uZU5vZGUgPSBjbG9uZU5vZGU7XG5mdW5jdGlvbiBjbG9uZUNoaWxkcmVuKGNoaWxkcykge1xuICAgIHZhciBjaGlsZHJlbiA9IGNoaWxkcy5tYXAoZnVuY3Rpb24gKGNoaWxkKSB7IHJldHVybiBjbG9uZU5vZGUoY2hpbGQsIHRydWUpOyB9KTtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNoaWxkcmVuW2ldLnByZXYgPSBjaGlsZHJlbltpIC0gMV07XG4gICAgICAgIGNoaWxkcmVuW2kgLSAxXS5uZXh0ID0gY2hpbGRyZW5baV07XG4gICAgfVxuICAgIHJldHVybiBjaGlsZHJlbjtcbn1cbiIsIi8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL2dyYW1tYXIuaHRtbFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3Zpc2lvbm1lZGlhL2Nzcy1wYXJzZS9wdWxsLzQ5I2lzc3VlY29tbWVudC0zMDA4ODAyN1xudmFyIENPTU1FTlRfUkVHRVggPSAvXFwvXFwqW14qXSpcXCorKFteLypdW14qXSpcXCorKSpcXC8vZztcblxudmFyIE5FV0xJTkVfUkVHRVggPSAvXFxuL2c7XG52YXIgV0hJVEVTUEFDRV9SRUdFWCA9IC9eXFxzKi87XG5cbi8vIGRlY2xhcmF0aW9uXG52YXIgUFJPUEVSVFlfUkVHRVggPSAvXihcXCo/Wy0jLypcXFxcXFx3XSsoXFxbWzAtOWEtel8tXStcXF0pPylcXHMqLztcbnZhciBDT0xPTl9SRUdFWCA9IC9eOlxccyovO1xudmFyIFZBTFVFX1JFR0VYID0gL14oKD86Jyg/OlxcXFwnfC4pKj8nfFwiKD86XFxcXFwifC4pKj9cInxcXChbXildKj9cXCl8W159O10pKykvO1xudmFyIFNFTUlDT0xPTl9SRUdFWCA9IC9eWztcXHNdKi87XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N0cmluZy9UcmltI1BvbHlmaWxsXG52YXIgVFJJTV9SRUdFWCA9IC9eXFxzK3xcXHMrJC9nO1xuXG4vLyBzdHJpbmdzXG52YXIgTkVXTElORSA9ICdcXG4nO1xudmFyIEZPUldBUkRfU0xBU0ggPSAnLyc7XG52YXIgQVNURVJJU0sgPSAnKic7XG52YXIgRU1QVFlfU1RSSU5HID0gJyc7XG5cbi8vIHR5cGVzXG52YXIgVFlQRV9DT01NRU5UID0gJ2NvbW1lbnQnO1xudmFyIFRZUEVfREVDTEFSQVRJT04gPSAnZGVjbGFyYXRpb24nO1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHlsZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7T2JqZWN0W119XG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9XG4gKiBAdGhyb3dzIHtFcnJvcn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihzdHlsZSwgb3B0aW9ucykge1xuICBpZiAodHlwZW9mIHN0eWxlICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIGlmICghc3R5bGUpIHJldHVybiBbXTtcblxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAvKipcbiAgICogUG9zaXRpb25hbC5cbiAgICovXG4gIHZhciBsaW5lbm8gPSAxO1xuICB2YXIgY29sdW1uID0gMTtcblxuICAvKipcbiAgICogVXBkYXRlIGxpbmVubyBhbmQgY29sdW1uIGJhc2VkIG9uIGBzdHJgLlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gICAqL1xuICBmdW5jdGlvbiB1cGRhdGVQb3NpdGlvbihzdHIpIHtcbiAgICB2YXIgbGluZXMgPSBzdHIubWF0Y2goTkVXTElORV9SRUdFWCk7XG4gICAgaWYgKGxpbmVzKSBsaW5lbm8gKz0gbGluZXMubGVuZ3RoO1xuICAgIHZhciBpID0gc3RyLmxhc3RJbmRleE9mKE5FV0xJTkUpO1xuICAgIGNvbHVtbiA9IH5pID8gc3RyLmxlbmd0aCAtIGkgOiBjb2x1bW4gKyBzdHIubGVuZ3RoO1xuICB9XG5cbiAgLyoqXG4gICAqIE1hcmsgcG9zaXRpb24gYW5kIHBhdGNoIGBub2RlLnBvc2l0aW9uYC5cbiAgICpcbiAgICogQHJldHVybiB7RnVuY3Rpb259XG4gICAqL1xuICBmdW5jdGlvbiBwb3NpdGlvbigpIHtcbiAgICB2YXIgc3RhcnQgPSB7IGxpbmU6IGxpbmVubywgY29sdW1uOiBjb2x1bW4gfTtcbiAgICByZXR1cm4gZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZS5wb3NpdGlvbiA9IG5ldyBQb3NpdGlvbihzdGFydCk7XG4gICAgICB3aGl0ZXNwYWNlKCk7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3JlIHBvc2l0aW9uIGluZm9ybWF0aW9uIGZvciBhIG5vZGUuXG4gICAqXG4gICAqIEBjb25zdHJ1Y3RvclxuICAgKiBAcHJvcGVydHkge09iamVjdH0gc3RhcnRcbiAgICogQHByb3BlcnR5IHtPYmplY3R9IGVuZFxuICAgKiBAcHJvcGVydHkge3VuZGVmaW5lZHxTdHJpbmd9IHNvdXJjZVxuICAgKi9cbiAgZnVuY3Rpb24gUG9zaXRpb24oc3RhcnQpIHtcbiAgICB0aGlzLnN0YXJ0ID0gc3RhcnQ7XG4gICAgdGhpcy5lbmQgPSB7IGxpbmU6IGxpbmVubywgY29sdW1uOiBjb2x1bW4gfTtcbiAgICB0aGlzLnNvdXJjZSA9IG9wdGlvbnMuc291cmNlO1xuICB9XG5cbiAgLyoqXG4gICAqIE5vbi1lbnVtZXJhYmxlIHNvdXJjZSBzdHJpbmcuXG4gICAqL1xuICBQb3NpdGlvbi5wcm90b3R5cGUuY29udGVudCA9IHN0eWxlO1xuXG4gIHZhciBlcnJvcnNMaXN0ID0gW107XG5cbiAgLyoqXG4gICAqIEVycm9yIGBtc2dgLlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbXNnXG4gICAqIEB0aHJvd3Mge0Vycm9yfVxuICAgKi9cbiAgZnVuY3Rpb24gZXJyb3IobXNnKSB7XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgIG9wdGlvbnMuc291cmNlICsgJzonICsgbGluZW5vICsgJzonICsgY29sdW1uICsgJzogJyArIG1zZ1xuICAgICk7XG4gICAgZXJyLnJlYXNvbiA9IG1zZztcbiAgICBlcnIuZmlsZW5hbWUgPSBvcHRpb25zLnNvdXJjZTtcbiAgICBlcnIubGluZSA9IGxpbmVubztcbiAgICBlcnIuY29sdW1uID0gY29sdW1uO1xuICAgIGVyci5zb3VyY2UgPSBzdHlsZTtcblxuICAgIGlmIChvcHRpb25zLnNpbGVudCkge1xuICAgICAgZXJyb3JzTGlzdC5wdXNoKGVycik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IGVycjtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTWF0Y2ggYHJlYCBhbmQgcmV0dXJuIGNhcHR1cmVzLlxuICAgKlxuICAgKiBAcGFyYW0ge1JlZ0V4cH0gcmVcbiAgICogQHJldHVybiB7dW5kZWZpbmVkfEFycmF5fVxuICAgKi9cbiAgZnVuY3Rpb24gbWF0Y2gocmUpIHtcbiAgICB2YXIgbSA9IHJlLmV4ZWMoc3R5bGUpO1xuICAgIGlmICghbSkgcmV0dXJuO1xuICAgIHZhciBzdHIgPSBtWzBdO1xuICAgIHVwZGF0ZVBvc2l0aW9uKHN0cik7XG4gICAgc3R5bGUgPSBzdHlsZS5zbGljZShzdHIubGVuZ3RoKTtcbiAgICByZXR1cm4gbTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQYXJzZSB3aGl0ZXNwYWNlLlxuICAgKi9cbiAgZnVuY3Rpb24gd2hpdGVzcGFjZSgpIHtcbiAgICBtYXRjaChXSElURVNQQUNFX1JFR0VYKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQYXJzZSBjb21tZW50cy5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3RbXX0gW3J1bGVzXVxuICAgKiBAcmV0dXJuIHtPYmplY3RbXX1cbiAgICovXG4gIGZ1bmN0aW9uIGNvbW1lbnRzKHJ1bGVzKSB7XG4gICAgdmFyIGM7XG4gICAgcnVsZXMgPSBydWxlcyB8fCBbXTtcbiAgICB3aGlsZSAoKGMgPSBjb21tZW50KCkpKSB7XG4gICAgICBpZiAoYyAhPT0gZmFsc2UpIHtcbiAgICAgICAgcnVsZXMucHVzaChjKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJ1bGVzO1xuICB9XG5cbiAgLyoqXG4gICAqIFBhcnNlIGNvbW1lbnQuXG4gICAqXG4gICAqIEByZXR1cm4ge09iamVjdH1cbiAgICogQHRocm93cyB7RXJyb3J9XG4gICAqL1xuICBmdW5jdGlvbiBjb21tZW50KCkge1xuICAgIHZhciBwb3MgPSBwb3NpdGlvbigpO1xuICAgIGlmIChGT1JXQVJEX1NMQVNIICE9IHN0eWxlLmNoYXJBdCgwKSB8fCBBU1RFUklTSyAhPSBzdHlsZS5jaGFyQXQoMSkpIHJldHVybjtcblxuICAgIHZhciBpID0gMjtcbiAgICB3aGlsZSAoXG4gICAgICBFTVBUWV9TVFJJTkcgIT0gc3R5bGUuY2hhckF0KGkpICYmXG4gICAgICAoQVNURVJJU0sgIT0gc3R5bGUuY2hhckF0KGkpIHx8IEZPUldBUkRfU0xBU0ggIT0gc3R5bGUuY2hhckF0KGkgKyAxKSlcbiAgICApIHtcbiAgICAgICsraTtcbiAgICB9XG4gICAgaSArPSAyO1xuXG4gICAgaWYgKEVNUFRZX1NUUklORyA9PT0gc3R5bGUuY2hhckF0KGkgLSAxKSkge1xuICAgICAgcmV0dXJuIGVycm9yKCdFbmQgb2YgY29tbWVudCBtaXNzaW5nJyk7XG4gICAgfVxuXG4gICAgdmFyIHN0ciA9IHN0eWxlLnNsaWNlKDIsIGkgLSAyKTtcbiAgICBjb2x1bW4gKz0gMjtcbiAgICB1cGRhdGVQb3NpdGlvbihzdHIpO1xuICAgIHN0eWxlID0gc3R5bGUuc2xpY2UoaSk7XG4gICAgY29sdW1uICs9IDI7XG5cbiAgICByZXR1cm4gcG9zKHtcbiAgICAgIHR5cGU6IFRZUEVfQ09NTUVOVCxcbiAgICAgIGNvbW1lbnQ6IHN0clxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFBhcnNlIGRlY2xhcmF0aW9uLlxuICAgKlxuICAgKiBAcmV0dXJuIHtPYmplY3R9XG4gICAqIEB0aHJvd3Mge0Vycm9yfVxuICAgKi9cbiAgZnVuY3Rpb24gZGVjbGFyYXRpb24oKSB7XG4gICAgdmFyIHBvcyA9IHBvc2l0aW9uKCk7XG5cbiAgICAvLyBwcm9wXG4gICAgdmFyIHByb3AgPSBtYXRjaChQUk9QRVJUWV9SRUdFWCk7XG4gICAgaWYgKCFwcm9wKSByZXR1cm47XG4gICAgY29tbWVudCgpO1xuXG4gICAgLy8gOlxuICAgIGlmICghbWF0Y2goQ09MT05fUkVHRVgpKSByZXR1cm4gZXJyb3IoXCJwcm9wZXJ0eSBtaXNzaW5nICc6J1wiKTtcblxuICAgIC8vIHZhbFxuICAgIHZhciB2YWwgPSBtYXRjaChWQUxVRV9SRUdFWCk7XG5cbiAgICB2YXIgcmV0ID0gcG9zKHtcbiAgICAgIHR5cGU6IFRZUEVfREVDTEFSQVRJT04sXG4gICAgICBwcm9wZXJ0eTogdHJpbShwcm9wWzBdLnJlcGxhY2UoQ09NTUVOVF9SRUdFWCwgRU1QVFlfU1RSSU5HKSksXG4gICAgICB2YWx1ZTogdmFsXG4gICAgICAgID8gdHJpbSh2YWxbMF0ucmVwbGFjZShDT01NRU5UX1JFR0VYLCBFTVBUWV9TVFJJTkcpKVxuICAgICAgICA6IEVNUFRZX1NUUklOR1xuICAgIH0pO1xuXG4gICAgLy8gO1xuICAgIG1hdGNoKFNFTUlDT0xPTl9SRUdFWCk7XG5cbiAgICByZXR1cm4gcmV0O1xuICB9XG5cbiAgLyoqXG4gICAqIFBhcnNlIGRlY2xhcmF0aW9ucy5cbiAgICpcbiAgICogQHJldHVybiB7T2JqZWN0W119XG4gICAqL1xuICBmdW5jdGlvbiBkZWNsYXJhdGlvbnMoKSB7XG4gICAgdmFyIGRlY2xzID0gW107XG5cbiAgICBjb21tZW50cyhkZWNscyk7XG5cbiAgICAvLyBkZWNsYXJhdGlvbnNcbiAgICB2YXIgZGVjbDtcbiAgICB3aGlsZSAoKGRlY2wgPSBkZWNsYXJhdGlvbigpKSkge1xuICAgICAgaWYgKGRlY2wgIT09IGZhbHNlKSB7XG4gICAgICAgIGRlY2xzLnB1c2goZGVjbCk7XG4gICAgICAgIGNvbW1lbnRzKGRlY2xzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGVjbHM7XG4gIH1cblxuICB3aGl0ZXNwYWNlKCk7XG4gIHJldHVybiBkZWNsYXJhdGlvbnMoKTtcbn07XG5cbi8qKlxuICogVHJpbSBgc3RyYC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIHRyaW0oc3RyKSB7XG4gIHJldHVybiBzdHIgPyBzdHIucmVwbGFjZShUUklNX1JFR0VYLCBFTVBUWV9TVFJJTkcpIDogRU1QVFlfU1RSSU5HO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksY2E9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBwKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBkYT1uZXcgU2V0LGVhPXt9O2Z1bmN0aW9uIGZhKGEsYil7aGEoYSxiKTtoYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gaGEoYSxiKXtlYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspZGEuYWRkKGJbYV0pfVxudmFyIGlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxqYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGthPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxsYT1cbnt9LG1hPXt9O2Z1bmN0aW9uIG9hKGEpe2lmKGphLmNhbGwobWEsYSkpcmV0dXJuITA7aWYoamEuY2FsbChsYSxhKSlyZXR1cm4hMTtpZihrYS50ZXN0KGEpKXJldHVybiBtYVthXT0hMDtsYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIHo9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07eltiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciByYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJhLFxuc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuei54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gdGEoYSxiLGMsZCl7dmFyIGU9ei5oYXNPd25Qcm9wZXJ0eShiKT96W2JdOm51bGw7aWYobnVsbCE9PWU/MCE9PWUudHlwZTpkfHwhKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0pcWEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP29hKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKX1cbnZhciB1YT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCx2YT1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSx3YT1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHlhPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSx6YT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksQWE9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLEJhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSxDYT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxEYT1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksRWE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLEZhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLEdhPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLEhhPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtcbnZhciBJYT1TeW1ib2wuZm9yKFwicmVhY3Qub2Zmc2NyZWVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5jYWNoZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QudHJhY2luZ19tYXJrZXJcIik7dmFyIEphPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBLYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9SmEmJmFbSmFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIEE9T2JqZWN0LmFzc2lnbixMYTtmdW5jdGlvbiBNYShhKXtpZih2b2lkIDA9PT1MYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtMYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTGErYX12YXIgTmE9ITE7XG5mdW5jdGlvbiBPYShhLGIpe2lmKCFhfHxOYSlyZXR1cm5cIlwiO05hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChsKXt2YXIgZD1sfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2gobCl7ZD1sfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2gobCl7ZD1sfWEoKX19Y2F0Y2gobCl7aWYobCYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBsLnN0YWNrKXtmb3IodmFyIGU9bC5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXt2YXIgaz1cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO2EuZGlzcGxheU5hbWUmJmsuaW5jbHVkZXMoXCI8YW5vbnltb3VzPlwiKSYmKGs9ay5yZXBsYWNlKFwiPGFub255bW91cz5cIixhLmRpc3BsYXlOYW1lKSk7cmV0dXJuIGt9d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e05hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TWEoYSk6XCJcIn1cbmZ1bmN0aW9uIFBhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBNYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE1hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBNYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE1hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1PYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1PYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1PYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFFhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgeWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2Ugd2E6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIEFhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHphOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgRWE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgRmE6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQ2E6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgQmE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgRGE6dmFyIGI9YS5yZW5kZXI7YT1hLmRpc3BsYXlOYW1lO2F8fChhPWIuZGlzcGxheU5hbWV8fFxuYi5uYW1lfHxcIlwiLGE9XCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO3JldHVybiBhO2Nhc2UgR2E6cmV0dXJuIGI9YS5kaXNwbGF5TmFtZXx8bnVsbCxudWxsIT09Yj9iOlFhKGEudHlwZSl8fFwiTWVtb1wiO2Nhc2UgSGE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFFhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSYShhKXt2YXIgYj1hLnR5cGU7c3dpdGNoKGEudGFnKXtjYXNlIDI0OnJldHVyblwiQ2FjaGVcIjtjYXNlIDk6cmV0dXJuKGIuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgMTA6cmV0dXJuKGIuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgMTg6cmV0dXJuXCJEZWh5ZHJhdGVkRnJhZ21lbnRcIjtjYXNlIDExOnJldHVybiBhPWIucmVuZGVyLGE9YS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIlwiLGIuZGlzcGxheU5hbWV8fChcIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSA3OnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIDU6cmV0dXJuIGI7Y2FzZSA0OnJldHVyblwiUG9ydGFsXCI7Y2FzZSAzOnJldHVyblwiUm9vdFwiO2Nhc2UgNjpyZXR1cm5cIlRleHRcIjtjYXNlIDE2OnJldHVybiBRYShiKTtjYXNlIDg6cmV0dXJuIGI9PT16YT9cIlN0cmljdE1vZGVcIjpcIk1vZGVcIjtjYXNlIDIyOnJldHVyblwiT2Zmc2NyZWVuXCI7XG5jYXNlIDEyOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIDIxOnJldHVyblwiU2NvcGVcIjtjYXNlIDEzOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIDE5OnJldHVyblwiU3VzcGVuc2VMaXN0XCI7Y2FzZSAyNTpyZXR1cm5cIlRyYWNpbmdNYXJrZXJcIjtjYXNlIDE6Y2FzZSAwOmNhc2UgMTc6Y2FzZSAyOmNhc2UgMTQ6Y2FzZSAxNTppZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYilyZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7Y2FzZSBcIm9iamVjdFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIEEoe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gYWIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYmIoYSxiKXthYihhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2NiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmNiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gZGIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBlYj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IocCg5MSkpO3JldHVybiBBKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHAoOTIpKTtpZihlYihjKSl7aWYoMTxjLmxlbmd0aCl0aHJvdyBFcnJvcihwKDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX1mdW5jdGlvbiBrYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fVxuZnVuY3Rpb24gbGIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2tiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG1iLG5iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIhPT1hLm5hbWVzcGFjZVVSSXx8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle21iPW1ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO21iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW1iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIG9iKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcGI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGFzcGVjdFJhdGlvOiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCxcbnpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scWI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHBiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3FiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cGJbYl09cGJbYV19KX0pO2Z1bmN0aW9uIHJiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxwYi5oYXNPd25Qcm9wZXJ0eShhKSYmcGJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gc2IoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9cmIoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdGI9QSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHViKGEsYil7aWYoYil7aWYodGJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcihwKDYwKSk7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfHwhKFwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcihwKDYyKSk7fX1cbmZ1bmN0aW9uIHZiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgd2I9bnVsbDtmdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHAoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKCl7fXZhciBJYj0hMTtmdW5jdGlvbiBKYihhLGIsYyl7aWYoSWIpcmV0dXJuIGEoYixjKTtJYj0hMDt0cnl7cmV0dXJuIEdiKGEsYixjKX1maW5hbGx5e2lmKEliPSExLG51bGwhPT16Ynx8bnVsbCE9PUFiKUhiKCksRmIoKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHAoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgTGI9ITE7aWYoaWEpdHJ5e3ZhciBNYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe0xiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLE1iLE1iKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixNYixNYil9Y2F0Y2goYSl7TGI9ITF9ZnVuY3Rpb24gTmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIE9iPSExLFBiPW51bGwsUWI9ITEsUmI9bnVsbCxTYj17b25FcnJvcjpmdW5jdGlvbihhKXtPYj0hMDtQYj1hfX07ZnVuY3Rpb24gVGIoYSxiLGMsZCxlLGYsZyxoLGspe09iPSExO1BiPW51bGw7TmIuYXBwbHkoU2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFViKGEsYixjLGQsZSxmLGcsaCxrKXtUYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoT2Ipe2lmKE9iKXt2YXIgbD1QYjtPYj0hMTtQYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IocCgxOTgpKTtRYnx8KFFiPSEwLFJiPWwpfX1mdW5jdGlvbiBWYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmNDA5OCkmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIFdiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gWGIoYSl7aWYoVmIoYSkhPT1hKXRocm93IEVycm9yKHAoMTg4KSk7fVxuZnVuY3Rpb24gWWIoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9VmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gWGIoZSksYTtpZihmPT09ZClyZXR1cm4gWGIoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcihwKDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHAoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IocCgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBaYihhKXthPVliKGEpO3JldHVybiBudWxsIT09YT8kYihhKTpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhO2ZvcihhPWEuY2hpbGQ7bnVsbCE9PWE7KXt2YXIgYj0kYihhKTtpZihudWxsIT09YilyZXR1cm4gYjthPWEuc2libGluZ31yZXR1cm4gbnVsbH1cbnZhciBhYz1jYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLGJjPWNhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLGNjPWNhLnVuc3RhYmxlX3Nob3VsZFlpZWxkLGRjPWNhLnVuc3RhYmxlX3JlcXVlc3RQYWludCxCPWNhLnVuc3RhYmxlX25vdyxlYz1jYS51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxmYz1jYS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxnYz1jYS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxoYz1jYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxpYz1jYS51bnN0YWJsZV9Mb3dQcmlvcml0eSxqYz1jYS51bnN0YWJsZV9JZGxlUHJpb3JpdHksa2M9bnVsbCxsYz1udWxsO2Z1bmN0aW9uIG1jKGEpe2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Db21taXRGaWJlclJvb3QpdHJ5e2xjLm9uQ29tbWl0RmliZXJSb290KGtjLGEsdm9pZCAwLDEyOD09PShhLmN1cnJlbnQuZmxhZ3MmMTI4KSl9Y2F0Y2goYil7fX1cbnZhciBvYz1NYXRoLmNsejMyP01hdGguY2x6MzI6bmMscGM9TWF0aC5sb2cscWM9TWF0aC5MTjI7ZnVuY3Rpb24gbmMoYSl7YT4+Pj0wO3JldHVybiAwPT09YT8zMjozMS0ocGMoYSkvcWN8MCl8MH12YXIgcmM9NjQsc2M9NDE5NDMwNDtcbmZ1bmN0aW9uIHRjKGEpe3N3aXRjaChhJi1hKXtjYXNlIDE6cmV0dXJuIDE7Y2FzZSAyOnJldHVybiAyO2Nhc2UgNDpyZXR1cm4gNDtjYXNlIDg6cmV0dXJuIDg7Y2FzZSAxNjpyZXR1cm4gMTY7Y2FzZSAzMjpyZXR1cm4gMzI7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYSY0MTk0MjQwO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuIGEmMTMwMDIzNDI0O2Nhc2UgMTM0MjE3NzI4OnJldHVybiAxMzQyMTc3Mjg7Y2FzZSAyNjg0MzU0NTY6cmV0dXJuIDI2ODQzNTQ1NjtjYXNlIDUzNjg3MDkxMjpyZXR1cm4gNTM2ODcwOTEyO2Nhc2UgMTA3Mzc0MTgyNDpyZXR1cm4gMTA3Mzc0MTgyNDtcbmRlZmF1bHQ6cmV0dXJuIGF9fWZ1bmN0aW9uIHVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIDA7dmFyIGQ9MCxlPWEuc3VzcGVuZGVkTGFuZXMsZj1hLnBpbmdlZExhbmVzLGc9YyYyNjg0MzU0NTU7aWYoMCE9PWcpe3ZhciBoPWcmfmU7MCE9PWg/ZD10YyhoKTooZiY9ZywwIT09ZiYmKGQ9dGMoZikpKX1lbHNlIGc9YyZ+ZSwwIT09Zz9kPXRjKGcpOjAhPT1mJiYoZD10YyhmKSk7aWYoMD09PWQpcmV0dXJuIDA7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZSkmJihlPWQmLWQsZj1iJi1iLGU+PWZ8fDE2PT09ZSYmMCE9PShmJjQxOTQyNDApKSlyZXR1cm4gYjswIT09KGQmNCkmJihkfD1jJjE2KTtiPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLW9jKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gdmMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6cmV0dXJuIGIrMjUwO2Nhc2UgODpjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYis1RTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4tMTtjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4tMX19XG5mdW5jdGlvbiB3YyhhLGIpe2Zvcih2YXIgYz1hLnN1c3BlbmRlZExhbmVzLGQ9YS5waW5nZWRMYW5lcyxlPWEuZXhwaXJhdGlvblRpbWVzLGY9YS5wZW5kaW5nTGFuZXM7MDxmOyl7dmFyIGc9MzEtb2MoZiksaD0xPDxnLGs9ZVtnXTtpZigtMT09PWspe2lmKDA9PT0oaCZjKXx8MCE9PShoJmQpKWVbZ109dmMoaCxiKX1lbHNlIGs8PWImJihhLmV4cGlyZWRMYW5lc3w9aCk7ZiY9fmh9fWZ1bmN0aW9uIHhjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiB5Yygpe3ZhciBhPXJjO3JjPDw9MTswPT09KHJjJjQxOTQyNDApJiYocmM9NjQpO3JldHVybiBhfWZ1bmN0aW9uIHpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gQWMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iOzUzNjg3MDkxMiE9PWImJihhLnN1c3BlbmRlZExhbmVzPTAsYS5waW5nZWRMYW5lcz0wKTthPWEuZXZlbnRUaW1lcztiPTMxLW9jKGIpO2FbYl09Y31mdW5jdGlvbiBCYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzJn5iO2EucGVuZGluZ0xhbmVzPWI7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9YjthLm11dGFibGVSZWFkTGFuZXMmPWI7YS5lbnRhbmdsZWRMYW5lcyY9YjtiPWEuZW50YW5nbGVtZW50czt2YXIgZD1hLmV2ZW50VGltZXM7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxjOyl7dmFyIGU9MzEtb2MoYyksZj0xPDxlO2JbZV09MDtkW2VdPS0xO2FbZV09LTE7YyY9fmZ9fVxuZnVuY3Rpb24gQ2MoYSxiKXt2YXIgYz1hLmVudGFuZ2xlZExhbmVzfD1iO2ZvcihhPWEuZW50YW5nbGVtZW50cztjOyl7dmFyIGQ9MzEtb2MoYyksZT0xPDxkO2UmYnxhW2RdJmImJihhW2RdfD1iKTtjJj1+ZX19dmFyIEM9MDtmdW5jdGlvbiBEYyhhKXthJj0tYTtyZXR1cm4gMTxhPzQ8YT8wIT09KGEmMjY4NDM1NDU1KT8xNjo1MzY4NzA5MTI6NDoxfXZhciBFYyxGYyxHYyxIYyxJYyxKYz0hMSxLYz1bXSxMYz1udWxsLE1jPW51bGwsTmM9bnVsbCxPYz1uZXcgTWFwLFBjPW5ldyBNYXAsUWM9W10sUmM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gU2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpMYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6TWM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6TmM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOk9jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOlBjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gVGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT17YmxvY2tlZE9uOmIsZG9tRXZlbnROYW1lOmMsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmYsdGFyZ2V0Q29udGFpbmVyczpbZV19LG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmRmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gVWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4gTGM9VGMoTGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIE1jPVRjKE1jLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBOYz1UYyhOYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO09jLnNldChmLFRjKE9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxQYy5zZXQoZixUYyhQYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBWYyhhKXt2YXIgYj1XYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVZiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPVdiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO0ljKGEucHJpb3JpdHksZnVuY3Rpb24oKXtHYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiBYYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9WWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbD09PWMpe2M9YS5uYXRpdmVFdmVudDt2YXIgZD1uZXcgYy5jb25zdHJ1Y3RvcihjLnR5cGUsYyk7d2I9ZDtjLnRhcmdldC5kaXNwYXRjaEV2ZW50KGQpO3diPW51bGx9ZWxzZSByZXR1cm4gYj1DYihjKSxudWxsIT09YiYmRmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gWmMoYSxiLGMpe1hjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiAkYygpe0pjPSExO251bGwhPT1MYyYmWGMoTGMpJiYoTGM9bnVsbCk7bnVsbCE9PU1jJiZYYyhNYykmJihNYz1udWxsKTtudWxsIT09TmMmJlhjKE5jKSYmKE5jPW51bGwpO09jLmZvckVhY2goWmMpO1BjLmZvckVhY2goWmMpfVxuZnVuY3Rpb24gYWQoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLEpjfHwoSmM9ITAsY2EudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhjYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSwkYykpKX1cbmZ1bmN0aW9uIGJkKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIGFkKGIsYSl9aWYoMDxLYy5sZW5ndGgpe2FkKEtjWzBdLGEpO2Zvcih2YXIgYz0xO2M8S2MubGVuZ3RoO2MrKyl7dmFyIGQ9S2NbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1MYyYmYWQoTGMsYSk7bnVsbCE9PU1jJiZhZChNYyxhKTtudWxsIT09TmMmJmFkKE5jLGEpO09jLmZvckVhY2goYik7UGMuZm9yRWFjaChiKTtmb3IoYz0wO2M8UWMubGVuZ3RoO2MrKylkPVFjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxRYy5sZW5ndGgmJihjPVFjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmUWMuc2hpZnQoKX12YXIgY2Q9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsZGQ9ITA7XG5mdW5jdGlvbiBlZChhLGIsYyxkKXt2YXIgZT1DLGY9Y2QudHJhbnNpdGlvbjtjZC50cmFuc2l0aW9uPW51bGw7dHJ5e0M9MSxmZChhLGIsYyxkKX1maW5hbGx5e0M9ZSxjZC50cmFuc2l0aW9uPWZ9fWZ1bmN0aW9uIGdkKGEsYixjLGQpe3ZhciBlPUMsZj1jZC50cmFuc2l0aW9uO2NkLnRyYW5zaXRpb249bnVsbDt0cnl7Qz00LGZkKGEsYixjLGQpfWZpbmFsbHl7Qz1lLGNkLnRyYW5zaXRpb249Zn19XG5mdW5jdGlvbiBmZChhLGIsYyxkKXtpZihkZCl7dmFyIGU9WWMoYSxiLGMsZCk7aWYobnVsbD09PWUpaGQoYSxiLGQsaWQsYyksU2MoYSxkKTtlbHNlIGlmKFVjKGUsYSxiLGMsZCkpZC5zdG9wUHJvcGFnYXRpb24oKTtlbHNlIGlmKFNjKGEsZCksYiY0JiYtMTxSYy5pbmRleE9mKGEpKXtmb3IoO251bGwhPT1lOyl7dmFyIGY9Q2IoZSk7bnVsbCE9PWYmJkVjKGYpO2Y9WWMoYSxiLGMsZCk7bnVsbD09PWYmJmhkKGEsYixkLGlkLGMpO2lmKGY9PT1lKWJyZWFrO2U9Zn1udWxsIT09ZSYmZC5zdG9wUHJvcGFnYXRpb24oKX1lbHNlIGhkKGEsYixkLG51bGwsYyl9fXZhciBpZD1udWxsO1xuZnVuY3Rpb24gWWMoYSxiLGMsZCl7aWQ9bnVsbDthPXhiKGQpO2E9V2MoYSk7aWYobnVsbCE9PWEpaWYoYj1WYihhKSxudWxsPT09YilhPW51bGw7ZWxzZSBpZihjPWIudGFnLDEzPT09Yyl7YT1XYihiKTtpZihudWxsIT09YSlyZXR1cm4gYTthPW51bGx9ZWxzZSBpZigzPT09Yyl7aWYoYi5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZClyZXR1cm4gMz09PWIudGFnP2Iuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDthPW51bGx9ZWxzZSBiIT09YSYmKGE9bnVsbCk7aWQ9YTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGpkKGEpe3N3aXRjaChhKXtjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsaWNrXCI6Y2FzZSBcImNsb3NlXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjpjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwia2V5dXBcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwicGFzdGVcIjpjYXNlIFwicGF1c2VcIjpjYXNlIFwicGxheVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmNhc2UgXCJyYXRlY2hhbmdlXCI6Y2FzZSBcInJlc2V0XCI6Y2FzZSBcInJlc2l6ZVwiOmNhc2UgXCJzZWVrZWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjpjYXNlIFwidm9sdW1lY2hhbmdlXCI6Y2FzZSBcImNoYW5nZVwiOmNhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjpjYXNlIFwidGV4dElucHV0XCI6Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjpjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjpjYXNlIFwiYmVmb3JlaW5wdXRcIjpjYXNlIFwiYmx1clwiOmNhc2UgXCJmdWxsc2NyZWVuY2hhbmdlXCI6Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImhhc2hjaGFuZ2VcIjpjYXNlIFwicG9wc3RhdGVcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInNlbGVjdHN0YXJ0XCI6cmV0dXJuIDE7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwic2Nyb2xsXCI6Y2FzZSBcInRvZ2dsZVwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwid2hlZWxcIjpjYXNlIFwibW91c2VlbnRlclwiOmNhc2UgXCJtb3VzZWxlYXZlXCI6Y2FzZSBcInBvaW50ZXJlbnRlclwiOmNhc2UgXCJwb2ludGVybGVhdmVcIjpyZXR1cm4gNDtcbmNhc2UgXCJtZXNzYWdlXCI6c3dpdGNoKGVjKCkpe2Nhc2UgZmM6cmV0dXJuIDE7Y2FzZSBnYzpyZXR1cm4gNDtjYXNlIGhjOmNhc2UgaWM6cmV0dXJuIDE2O2Nhc2UgamM6cmV0dXJuIDUzNjg3MDkxMjtkZWZhdWx0OnJldHVybiAxNn1kZWZhdWx0OnJldHVybiAxNn19dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO2Z1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1cbmZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9QShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9QSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPUEoe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPUEoe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPUEoe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1BKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9QSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1BKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9QSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1BKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1BKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9QSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9QSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9aWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9aWEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoaWEpe3ZhciB4ZTtpZihpYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO0piKHJlLGIpfX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlO1xuZnVuY3Rpb24gSWUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07aWYoIWphLmNhbGwoYixlKXx8IUhlKGFbZV0sYltlXSkpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gSmUoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gS2UoYSxiKXt2YXIgYz1KZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1KZShjKX19ZnVuY3Rpb24gTGUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9MZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBNZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBOZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gT2UoYSl7dmFyIGI9TWUoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZjJiZjLm93bmVyRG9jdW1lbnQmJkxlKGMub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG51bGwhPT1kJiZOZShjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGE9KGI9Yy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdyxhLmdldFNlbGVjdGlvbil7YT1hLmdldFNlbGVjdGlvbigpO3ZhciBlPWMudGV4dENvbnRlbnQubGVuZ3RoLGY9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2Y6TWF0aC5taW4oZC5lbmQsZSk7IWEuZXh0ZW5kJiZmPmQmJihlPWQsZD1mLGY9ZSk7ZT1LZShjLGYpO3ZhciBnPUtlKGMsXG5kKTtlJiZnJiYoMSE9PWEucmFuZ2VDb3VudHx8YS5hbmNob3JOb2RlIT09ZS5ub2RlfHxhLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxhLmZvY3VzTm9kZSE9PWcubm9kZXx8YS5mb2N1c09mZnNldCE9PWcub2Zmc2V0KSYmKGI9Yi5jcmVhdGVSYW5nZSgpLGIuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KSxhLnJlbW92ZUFsbFJhbmdlcygpLGY+ZD8oYS5hZGRSYW5nZShiKSxhLmV4dGVuZChnLm5vZGUsZy5vZmZzZXQpKTooYi5zZXRFbmQoZy5ub2RlLGcub2Zmc2V0KSxhLmFkZFJhbmdlKGIpKSl9Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZm9jdXMmJmMuZm9jdXMoKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1hLnRvcH19XG52YXIgUGU9aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk5lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkllKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cbmZ1bmN0aW9uIFZlKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFdlPXthbmltYXRpb25lbmQ6VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpWZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpWZShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFhlPXt9LFllPXt9O1xuaWEmJihZZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBXZS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBXZS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFplKGEpe2lmKFhlW2FdKXJldHVybiBYZVthXTtpZighV2VbYV0pcmV0dXJuIGE7dmFyIGI9V2VbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gWWUpcmV0dXJuIFhlW2FdPWJbY107cmV0dXJuIGF9dmFyICRlPVplKFwiYW5pbWF0aW9uZW5kXCIpLGFmPVplKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGJmPVplKFwiYW5pbWF0aW9uc3RhcnRcIiksY2Y9WmUoXCJ0cmFuc2l0aW9uZW5kXCIpLGRmPW5ldyBNYXAsZWY9XCJhYm9ydCBhdXhDbGljayBjYW5jZWwgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkcmFnIGRyYWdFbmQgZHJhZ0VudGVyIGRyYWdFeGl0IGRyYWdMZWF2ZSBkcmFnT3ZlciBkcmFnU3RhcnQgZHJvcCBkdXJhdGlvbkNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBnb3RQb2ludGVyQ2FwdHVyZSBpbnB1dCBpbnZhbGlkIGtleURvd24ga2V5UHJlc3Mga2V5VXAgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBsb3N0UG9pbnRlckNhcHR1cmUgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcG9pbnRlckNhbmNlbCBwb2ludGVyRG93biBwb2ludGVyTW92ZSBwb2ludGVyT3V0IHBvaW50ZXJPdmVyIHBvaW50ZXJVcCBwcm9ncmVzcyByYXRlQ2hhbmdlIHJlc2V0IHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1Ym1pdCBzdXNwZW5kIHRpbWVVcGRhdGUgdG91Y2hDYW5jZWwgdG91Y2hFbmQgdG91Y2hTdGFydCB2b2x1bWVDaGFuZ2Ugc2Nyb2xsIHRvZ2dsZSB0b3VjaE1vdmUgd2FpdGluZyB3aGVlbFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIGZmKGEsYil7ZGYuc2V0KGEsYik7ZmEoYixbYV0pfWZvcih2YXIgZ2Y9MDtnZjxlZi5sZW5ndGg7Z2YrKyl7dmFyIGhmPWVmW2dmXSxqZj1oZi50b0xvd2VyQ2FzZSgpLGtmPWhmWzBdLnRvVXBwZXJDYXNlKCkraGYuc2xpY2UoMSk7ZmYoamYsXCJvblwiK2tmKX1mZigkZSxcIm9uQW5pbWF0aW9uRW5kXCIpO2ZmKGFmLFwib25BbmltYXRpb25JdGVyYXRpb25cIik7ZmYoYmYsXCJvbkFuaW1hdGlvblN0YXJ0XCIpO2ZmKFwiZGJsY2xpY2tcIixcIm9uRG91YmxlQ2xpY2tcIik7ZmYoXCJmb2N1c2luXCIsXCJvbkZvY3VzXCIpO2ZmKFwiZm9jdXNvdXRcIixcIm9uQmx1clwiKTtmZihjZixcIm9uVHJhbnNpdGlvbkVuZFwiKTtoYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2hhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7aGEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtcbmhhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZmEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2ZhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtmYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5mYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgbGY9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxtZj1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChsZikpO1xuZnVuY3Rpb24gbmYoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7VWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7bmYoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtuZihlLGgsbCk7Zj1rfX19aWYoUWIpdGhyb3cgYT1SYixRYj0hMSxSYj1udWxsLGE7fVxuZnVuY3Rpb24gRChhLGIpe3ZhciBjPWJbb2ZdO3ZvaWQgMD09PWMmJihjPWJbb2ZdPW5ldyBTZXQpO3ZhciBkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwocGYoYixhLDIsITEpLGMuYWRkKGQpKX1mdW5jdGlvbiBxZihhLGIsYyl7dmFyIGQ9MDtiJiYoZHw9NCk7cGYoYyxhLGQsYil9dmFyIHJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gc2YoYSl7aWYoIWFbcmZdKXthW3JmXT0hMDtkYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1wic2VsZWN0aW9uY2hhbmdlXCIhPT1iJiYobWYuaGFzKGIpfHxxZihiLCExLGEpLHFmKGIsITAsYSkpfSk7dmFyIGI9OT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7bnVsbD09PWJ8fGJbcmZdfHwoYltyZl09ITAscWYoXCJzZWxlY3Rpb25jaGFuZ2VcIiwhMSxiKSl9fVxuZnVuY3Rpb24gcGYoYSxiLGMsZCl7c3dpdGNoKGpkKGIpKXtjYXNlIDE6dmFyIGU9ZWQ7YnJlYWs7Y2FzZSA0OmU9Z2Q7YnJlYWs7ZGVmYXVsdDplPWZkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFMYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPVdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1KYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9ZGYuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLG49YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6bj1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpuPVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSAkZTpjYXNlIGFmOmNhc2UgYmY6az1IZDticmVhaztjYXNlIGNmOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHQ9MCE9PShiJjQpLEo9IXQmJlwic2Nyb2xsXCI9PT1hLHg9dD9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt0PVtdO2Zvcih2YXIgdz1kLHU7bnVsbCE9PVxudzspe3U9dzt2YXIgRj11LnN0YXRlTm9kZTs1PT09dS50YWcmJm51bGwhPT1GJiYodT1GLG51bGwhPT14JiYoRj1LYih3LHgpLG51bGwhPUYmJnQucHVzaCh0Zih3LEYsdSkpKSk7aWYoSilicmVhazt3PXcucmV0dXJufTA8dC5sZW5ndGgmJihoPW5ldyBrKGgsbixudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp0fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmYyE9PXdiJiYobj1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYoV2Mobil8fG5bdWZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYobj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCxuPW4/V2Mobik6bnVsbCxudWxsIT09XG5uJiYoSj1WYihuKSxuIT09Snx8NSE9PW4udGFnJiY2IT09bi50YWcpKW49bnVsbH1lbHNlIGs9bnVsbCxuPWQ7aWYoayE9PW4pe3Q9QmQ7Rj1cIm9uTW91c2VMZWF2ZVwiO3g9XCJvbk1vdXNlRW50ZXJcIjt3PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdD1UZCxGPVwib25Qb2ludGVyTGVhdmVcIix4PVwib25Qb2ludGVyRW50ZXJcIix3PVwicG9pbnRlclwiO0o9bnVsbD09az9oOnVlKGspO3U9bnVsbD09bj9oOnVlKG4pO2g9bmV3IHQoRix3K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9SjtoLnJlbGF0ZWRUYXJnZXQ9dTtGPW51bGw7V2MoZSk9PT1kJiYodD1uZXcgdCh4LHcrXCJlbnRlclwiLG4sYyxlKSx0LnRhcmdldD11LHQucmVsYXRlZFRhcmdldD1KLEY9dCk7Sj1GO2lmKGsmJm4pYjp7dD1rO3g9bjt3PTA7Zm9yKHU9dDt1O3U9dmYodSkpdysrO3U9MDtmb3IoRj14O0Y7Rj12ZihGKSl1Kys7Zm9yKDswPHctdTspdD12Zih0KSx3LS07Zm9yKDswPHUtdzspeD1cbnZmKHgpLHUtLTtmb3IoO3ctLTspe2lmKHQ9PT14fHxudWxsIT09eCYmdD09PXguYWx0ZXJuYXRlKWJyZWFrIGI7dD12Zih0KTt4PXZmKHgpfXQ9bnVsbH1lbHNlIHQ9bnVsbDtudWxsIT09ayYmd2YoZyxoLGssdCwhMSk7bnVsbCE9PW4mJm51bGwhPT1KJiZ3ZihnLEosbix0LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBuYT12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKW5hPUZlO2Vsc2V7bmE9RGU7dmFyIHhhPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYobmE9RWUpO2lmKG5hJiYobmE9bmEoYSxkKSkpe25lKGcsbmEsYyxlKTticmVhayBhfXhhJiZ4YShhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKHhhPWguX3dyYXBwZXJTdGF0ZSkmJlxueGEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmY2IoaCxcIm51bWJlclwiLGgudmFsdWUpfXhhPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKHhhKXx8XCJ0cnVlXCI9PT14YS5jb250ZW50RWRpdGFibGUpUWU9eGEsUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciAkYTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgYmE9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmJhPVwib25Db21wb3NpdGlvbkVuZFwiO1xuYnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpiYT1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifWJhPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihiYT1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihiYT1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtiYSYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09YmE/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1iYSYmaWUmJigkYT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLHhhPW9lKGQsYmEpLDA8eGEubGVuZ3RoJiYoYmE9bmV3IExkKGJhLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6YmEsbGlzdGVuZXJzOnhhfSksJGE/YmEuZGF0YT0kYTooJGE9aGUoYyksbnVsbCE9PSRhJiYoYmEuZGF0YT0kYSkpKSk7aWYoJGE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksXG4wPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9JGEpfXNlKGcsYil9KX1mdW5jdGlvbiB0ZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9S2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQodGYoYSxmLGUpKSxmPUtiKGEsYiksbnVsbCE9ZiYmZC5wdXNoKHRmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gdmYoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIHdmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9S2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQodGYoYyxrLGgpKSk6ZXx8KGs9S2IoYyxmKSxudWxsIT1rJiZnLnB1c2godGYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX12YXIgeGY9L1xcclxcbj8vZyx5Zj0vXFx1MDAwMHxcXHVGRkZEL2c7ZnVuY3Rpb24gemYoYSl7cmV0dXJuKFwic3RyaW5nXCI9PT10eXBlb2YgYT9hOlwiXCIrYSkucmVwbGFjZSh4ZixcIlxcblwiKS5yZXBsYWNlKHlmLFwiXCIpfWZ1bmN0aW9uIEFmKGEsYixjKXtiPXpmKGIpO2lmKHpmKGEpIT09YiYmYyl0aHJvdyBFcnJvcihwKDQyNSkpO31mdW5jdGlvbiBCZigpe31cbnZhciBDZj1udWxsLERmPW51bGw7ZnVuY3Rpb24gRWYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgRmY9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsR2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEhmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBQcm9taXNlP1Byb21pc2U6dm9pZCAwLEpmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBxdWV1ZU1pY3JvdGFzaz9xdWV1ZU1pY3JvdGFzazpcInVuZGVmaW5lZFwiIT09dHlwZW9mIEhmP2Z1bmN0aW9uKGEpe3JldHVybiBIZi5yZXNvbHZlKG51bGwpLnRoZW4oYSkuY2F0Y2goSWYpfTpGZjtmdW5jdGlvbiBJZihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYTt9KX1cbmZ1bmN0aW9uIEtmKGEsYil7dmFyIGM9YixkPTA7ZG97dmFyIGU9Yy5uZXh0U2libGluZzthLnJlbW92ZUNoaWxkKGMpO2lmKGUmJjg9PT1lLm5vZGVUeXBlKWlmKGM9ZS5kYXRhLFwiLyRcIj09PWMpe2lmKDA9PT1kKXthLnJlbW92ZUNoaWxkKGUpO2JkKGIpO3JldHVybn1kLS19ZWxzZVwiJFwiIT09YyYmXCIkP1wiIT09YyYmXCIkIVwiIT09Y3x8ZCsrO2M9ZX13aGlsZShjKTtiZChiKX1mdW5jdGlvbiBMZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVhaztpZig4PT09Yil7Yj1hLmRhdGE7aWYoXCIkXCI9PT1ifHxcIiQhXCI9PT1ifHxcIiQ/XCI9PT1iKWJyZWFrO2lmKFwiLyRcIj09PWIpcmV0dXJuIG51bGx9fXJldHVybiBhfVxuZnVuY3Rpb24gTWYoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5mPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE9mPVwiX19yZWFjdEZpYmVyJFwiK05mLFBmPVwiX19yZWFjdFByb3BzJFwiK05mLHVmPVwiX19yZWFjdENvbnRhaW5lciRcIitOZixvZj1cIl9fcmVhY3RFdmVudHMkXCIrTmYsUWY9XCJfX3JlYWN0TGlzdGVuZXJzJFwiK05mLFJmPVwiX19yZWFjdEhhbmRsZXMkXCIrTmY7XG5mdW5jdGlvbiBXYyhhKXt2YXIgYj1hW09mXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1t1Zl18fGNbT2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9TWYoYSk7bnVsbCE9PWE7KXtpZihjPWFbT2ZdKXJldHVybiBjO2E9TWYoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVtPZl18fGFbdWZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IocCgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVtQZl18fG51bGx9dmFyIFNmPVtdLFRmPS0xO2Z1bmN0aW9uIFVmKGEpe3JldHVybntjdXJyZW50OmF9fVxuZnVuY3Rpb24gRShhKXswPlRmfHwoYS5jdXJyZW50PVNmW1RmXSxTZltUZl09bnVsbCxUZi0tKX1mdW5jdGlvbiBHKGEsYil7VGYrKztTZltUZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBWZj17fSxIPVVmKFZmKSxXZj1VZighMSksWGY9VmY7ZnVuY3Rpb24gWWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBWZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFpmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gJGYoKXtFKFdmKTtFKEgpfWZ1bmN0aW9uIGFnKGEsYixjKXtpZihILmN1cnJlbnQhPT1WZil0aHJvdyBFcnJvcihwKDE2OCkpO0coSCxiKTtHKFdmLGMpfWZ1bmN0aW9uIGJnKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtiPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYikpdGhyb3cgRXJyb3IocCgxMDgsUmEoYSl8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gQSh7fSxjLGQpfVxuZnVuY3Rpb24gY2coYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fFZmO1hmPUguY3VycmVudDtHKEgsYSk7RyhXZixXZi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBkZyhhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IocCgxNjkpKTtjPyhhPWJnKGEsYixYZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEUoV2YpLEUoSCksRyhILGEpKTpFKFdmKTtHKFdmLGMpfXZhciBlZz1udWxsLGZnPSExLGdnPSExO2Z1bmN0aW9uIGhnKGEpe251bGw9PT1lZz9lZz1bYV06ZWcucHVzaChhKX1mdW5jdGlvbiBpZyhhKXtmZz0hMDtoZyhhKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWdnJiZudWxsIT09ZWcpe2dnPSEwO3ZhciBhPTAsYj1DO3RyeXt2YXIgYz1lZztmb3IoQz0xO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdO2RvIGQ9ZCghMCk7d2hpbGUobnVsbCE9PWQpfWVnPW51bGw7Zmc9ITF9Y2F0Y2goZSl7dGhyb3cgbnVsbCE9PWVnJiYoZWc9ZWcuc2xpY2UoYSsxKSksYWMoZmMsamcpLGU7fWZpbmFsbHl7Qz1iLGdnPSExfX1yZXR1cm4gbnVsbH12YXIga2c9W10sbGc9MCxtZz1udWxsLG5nPTAsb2c9W10scGc9MCxxZz1udWxsLHJnPTEsc2c9XCJcIjtmdW5jdGlvbiB0ZyhhLGIpe2tnW2xnKytdPW5nO2tnW2xnKytdPW1nO21nPWE7bmc9Yn1cbmZ1bmN0aW9uIHVnKGEsYixjKXtvZ1twZysrXT1yZztvZ1twZysrXT1zZztvZ1twZysrXT1xZztxZz1hO3ZhciBkPXJnO2E9c2c7dmFyIGU9MzItb2MoZCktMTtkJj1+KDE8PGUpO2MrPTE7dmFyIGY9MzItb2MoYikrZTtpZigzMDxmKXt2YXIgZz1lLWUlNTtmPShkJigxPDxnKS0xKS50b1N0cmluZygzMik7ZD4+PWc7ZS09ZztyZz0xPDwzMi1vYyhiKStlfGM8PGV8ZDtzZz1mK2F9ZWxzZSByZz0xPDxmfGM8PGV8ZCxzZz1hfWZ1bmN0aW9uIHZnKGEpe251bGwhPT1hLnJldHVybiYmKHRnKGEsMSksdWcoYSwxLDApKX1mdW5jdGlvbiB3ZyhhKXtmb3IoO2E9PT1tZzspbWc9a2dbLS1sZ10sa2dbbGddPW51bGwsbmc9a2dbLS1sZ10sa2dbbGddPW51bGw7Zm9yKDthPT09cWc7KXFnPW9nWy0tcGddLG9nW3BnXT1udWxsLHNnPW9nWy0tcGddLG9nW3BnXT1udWxsLHJnPW9nWy0tcGddLG9nW3BnXT1udWxsfXZhciB4Zz1udWxsLHlnPW51bGwsST0hMSx6Zz1udWxsO1xuZnVuY3Rpb24gQWcoYSxiKXt2YXIgYz1CZyg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtiPWEuZGVsZXRpb25zO251bGw9PT1iPyhhLmRlbGV0aW9ucz1bY10sYS5mbGFnc3w9MTYpOmIucHVzaChjKX1cbmZ1bmN0aW9uIENnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9TGYoYi5maXJzdENoaWxkKSwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9bnVsbCwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4gYj04IT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGM9bnVsbCE9PXFnP3tpZDpyZyxvdmVyZmxvdzpzZ306bnVsbCxhLm1lbW9pemVkU3RhdGU9e2RlaHlkcmF0ZWQ6Yix0cmVlQ29udGV4dDpjLHJldHJ5TGFuZToxMDczNzQxODI0fSxjPUJnKDE4LG51bGwsbnVsbCwwKSxjLnN0YXRlTm9kZT1iLGMucmV0dXJuPWEsYS5jaGlsZD1jLHhnPWEseWc9XG5udWxsLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBEZyhhKXtyZXR1cm4gMCE9PShhLm1vZGUmMSkmJjA9PT0oYS5mbGFncyYxMjgpfWZ1bmN0aW9uIEVnKGEpe2lmKEkpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUNnKGEsYikpe2lmKERnKGEpKXRocm93IEVycm9yKHAoNDE4KSk7Yj1MZihjLm5leHRTaWJsaW5nKTt2YXIgZD14ZztiJiZDZyhhLGIpP0FnKGQsYyk6KGEuZmxhZ3M9YS5mbGFncyYtNDA5N3wyLEk9ITEseGc9YSl9fWVsc2V7aWYoRGcoYSkpdGhyb3cgRXJyb3IocCg0MTgpKTthLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MjtJPSExO3hnPWF9fX1mdW5jdGlvbiBGZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1cbmZ1bmN0aW9uIEdnKGEpe2lmKGEhPT14ZylyZXR1cm4hMTtpZighSSlyZXR1cm4gRmcoYSksST0hMCwhMTt2YXIgYjsoYj0zIT09YS50YWcpJiYhKGI9NSE9PWEudGFnKSYmKGI9YS50eXBlLGI9XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFFZihhLnR5cGUsYS5tZW1vaXplZFByb3BzKSk7aWYoYiYmKGI9eWcpKXtpZihEZyhhKSl0aHJvdyBIZygpLEVycm9yKHAoNDE4KSk7Zm9yKDtiOylBZyhhLGIpLGI9TGYoYi5uZXh0U2libGluZyl9RmcoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcihwKDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXt5Zz1MZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfXlnPVxubnVsbH19ZWxzZSB5Zz14Zz9MZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBIZygpe2Zvcih2YXIgYT15ZzthOylhPUxmKGEubmV4dFNpYmxpbmcpfWZ1bmN0aW9uIElnKCl7eWc9eGc9bnVsbDtJPSExfWZ1bmN0aW9uIEpnKGEpe251bGw9PT16Zz96Zz1bYV06emcucHVzaChhKX12YXIgS2c9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gTGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1BKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIE1nPVVmKG51bGwpLE5nPW51bGwsT2c9bnVsbCxQZz1udWxsO2Z1bmN0aW9uIFFnKCl7UGc9T2c9Tmc9bnVsbH1mdW5jdGlvbiBSZyhhKXt2YXIgYj1NZy5jdXJyZW50O0UoTWcpO2EuX2N1cnJlbnRWYWx1ZT1ifVxuZnVuY3Rpb24gU2coYSxiLGMpe2Zvcig7bnVsbCE9PWE7KXt2YXIgZD1hLmFsdGVybmF0ZTsoYS5jaGlsZExhbmVzJmIpIT09Yj8oYS5jaGlsZExhbmVzfD1iLG51bGwhPT1kJiYoZC5jaGlsZExhbmVzfD1iKSk6bnVsbCE9PWQmJihkLmNoaWxkTGFuZXMmYikhPT1iJiYoZC5jaGlsZExhbmVzfD1iKTtpZihhPT09YylicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBUZyhhLGIpe05nPWE7UGc9T2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJihVZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBWZyhhKXt2YXIgYj1hLl9jdXJyZW50VmFsdWU7aWYoUGchPT1hKWlmKGE9e2NvbnRleHQ6YSxtZW1vaXplZFZhbHVlOmIsbmV4dDpudWxsfSxudWxsPT09T2cpe2lmKG51bGw9PT1OZyl0aHJvdyBFcnJvcihwKDMwOCkpO09nPWE7TmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDphfX1lbHNlIE9nPU9nLm5leHQ9YTtyZXR1cm4gYn12YXIgV2c9bnVsbDtmdW5jdGlvbiBYZyhhKXtudWxsPT09V2c/V2c9W2FdOldnLnB1c2goYSl9ZnVuY3Rpb24gWWcoYSxiLGMsZCl7dmFyIGU9Yi5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYy5uZXh0PWMsWGcoYikpOihjLm5leHQ9ZS5uZXh0LGUubmV4dD1jKTtiLmludGVybGVhdmVkPWM7cmV0dXJuIFpnKGEsZCl9XG5mdW5jdGlvbiBaZyhhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9dmFyICRnPSExO2Z1bmN0aW9uIGFoKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjB9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiBiaChhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiBjaChhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1cbmZ1bmN0aW9uIGRoKGEsYixjKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Q9ZC5zaGFyZWQ7aWYoMCE9PShLJjIpKXt2YXIgZT1kLnBlbmRpbmc7bnVsbD09PWU/Yi5uZXh0PWI6KGIubmV4dD1lLm5leHQsZS5uZXh0PWIpO2QucGVuZGluZz1iO3JldHVybiBaZyhhLGMpfWU9ZC5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYi5uZXh0PWIsWGcoZCkpOihiLm5leHQ9ZS5uZXh0LGUubmV4dD1iKTtkLmludGVybGVhdmVkPWI7cmV0dXJuIFpnKGEsYyl9ZnVuY3Rpb24gZWgoYSxiLGMpe2I9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YiYmKGI9Yi5zaGFyZWQsMCE9PShjJjQxOTQyNDApKSl7dmFyIGQ9Yi5sYW5lcztkJj1hLnBlbmRpbmdMYW5lcztjfD1kO2IubGFuZXM9YztDYyhhLGMpfX1cbmZ1bmN0aW9uIGZoKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBnaChhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlOyRnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG09YS5hbHRlcm5hdGU7bnVsbCE9PW0mJihtPW0udXBkYXRlUXVldWUsaD1tLmxhc3RCYXNlVXBkYXRlLGghPT1nJiYobnVsbD09PWg/bS5maXJzdEJhc2VVcGRhdGU9bDpoLm5leHQ9bCxtLmxhc3RCYXNlVXBkYXRlPWspKX1pZihudWxsIT09Zil7dmFyIHE9ZS5iYXNlU3RhdGU7Zz0wO209bD1rPW51bGw7aD1mO2Rve3ZhciByPWgubGFuZSx5PWguZXZlbnRUaW1lO2lmKChkJnIpPT09cil7bnVsbCE9PW0mJihtPW0ubmV4dD17ZXZlbnRUaW1lOnksbGFuZTowLHRhZzpoLnRhZyxwYXlsb2FkOmgucGF5bG9hZCxjYWxsYmFjazpoLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIG49YSx0PWg7cj1iO3k9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpuPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbil7cT1uLmNhbGwoeSxxLHIpO2JyZWFrIGF9cT1uO2JyZWFrIGE7Y2FzZSAzOm4uZmxhZ3M9bi5mbGFncyYtNjU1Mzd8MTI4O2Nhc2UgMDpuPXQucGF5bG9hZDtyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBuP24uY2FsbCh5LHEscik6bjtpZihudWxsPT09cnx8dm9pZCAwPT09cilicmVhayBhO3E9QSh7fSxxLHIpO2JyZWFrIGE7Y2FzZSAyOiRnPSEwfX1udWxsIT09aC5jYWxsYmFjayYmMCE9PWgubGFuZSYmKGEuZmxhZ3N8PTY0LHI9ZS5lZmZlY3RzLG51bGw9PT1yP2UuZWZmZWN0cz1baF06ci5wdXNoKGgpKX1lbHNlIHk9e2V2ZW50VGltZTp5LGxhbmU6cix0YWc6aC50YWcscGF5bG9hZDpoLnBheWxvYWQsY2FsbGJhY2s6aC5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1tPyhsPW09eSxrPXEpOm09bS5uZXh0PXksZ3w9cjtcbmg9aC5uZXh0O2lmKG51bGw9PT1oKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIHI9aCxoPXIubmV4dCxyLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPXIsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1tJiYoaz1xKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1tO2I9ZS5zaGFyZWQuaW50ZXJsZWF2ZWQ7aWYobnVsbCE9PWIpe2U9YjtkbyBnfD1lLmxhbmUsZT1lLm5leHQ7d2hpbGUoZSE9PWIpfWVsc2UgbnVsbD09PWYmJihlLnNoYXJlZC5sYW5lcz0wKTtoaHw9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPXF9fVxuZnVuY3Rpb24gaWgoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHAoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgamg9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24ga2goYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOkEoe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIG5oPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1ZiKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7Yj1kaChhLGYsZSk7bnVsbCE9PWImJihtaChiLGEsZSxkKSxlaChiLGEsZSkpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtiPWRoKGEsZixlKTtudWxsIT09YiYmKG1oKGIsYSxlLGQpLGVoKGIsYSxlKSl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9TCgpLGQ9XG5saChhKSxlPWNoKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7Yj1kaChhLGUsZCk7bnVsbCE9PWImJihtaChiLGEsZCxjKSxlaChiLGEsZCkpfX07ZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSWUoYyxkKXx8IUllKGUsZik6ITB9XG5mdW5jdGlvbiBwaChhLGIsYyl7dmFyIGQ9ITEsZT1WZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1WZyhmKTooZT1aZihiKT9YZjpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9ZZihhLGUpOlZmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9bmg7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBxaChhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiByaChhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPWpoO2FoKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9VmcoZik6KGY9WmYoYik/WGY6SC5jdXJyZW50LGUuY29udGV4dD1ZZihhLGYpKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoa2goYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZ2goYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NDE5NDMwOCl9XG5mdW5jdGlvbiBzaChhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHAoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IocCgxNDcsYSkpO3ZhciBlPWQsZj1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZilyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1lLnJlZnM7Yj09PWpoJiYoYj1lLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2ZdOmJbZl09YX07Yi5fc3RyaW5nUmVmPWY7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHAoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHAoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiB0aChhLGIpe2E9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpO3Rocm93IEVycm9yKHAoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWE/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YSkpO31mdW5jdGlvbiB1aChhKXt2YXIgYj1hLl9pbml0O3JldHVybiBiKGEuX3BheWxvYWQpfVxuZnVuY3Rpb24gdmgoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIuZGVsZXRpb25zO251bGw9PT1kPyhiLmRlbGV0aW9ucz1bY10sYi5mbGFnc3w9MTYpOmQucHVzaChjKX19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9d2goYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBiLmZsYWdzfD0xMDQ4NTc2LGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFnc3w9MixjKTpkO2IuZmxhZ3N8PTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZcbm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3N8PTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj14aChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe3ZhciBmPWMudHlwZTtpZihmPT09eWEpcmV0dXJuIG0oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxjLmtleSk7aWYobnVsbCE9PWImJihiLmVsZW1lbnRUeXBlPT09Znx8XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi4kJHR5cGVvZj09PUhhJiZ1aChmKT09PWIudHlwZSkpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPXNoKGEsYixjKSxkLnJldHVybj1hLGQ7ZD15aChjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1zaChhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fFxuYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPXpoKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1BaChjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYiYmXCJcIiE9PWJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj14aChcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYz15aChiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxcbmMucmVmPXNoKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB3YTpyZXR1cm4gYj16aChiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7Y2FzZSBIYTp2YXIgZD1iLl9pbml0O3JldHVybiBxKGEsZChiLl9wYXlsb2FkKSxjKX1pZihlYihiKXx8S2EoYikpcmV0dXJuIGI9QWgoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7dGgoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiByKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjJiZcIlwiIT09Y3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbDtjYXNlIHdhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsO2Nhc2UgSGE6cmV0dXJuIGU9Yy5faW5pdCxyKGEsXG5iLGUoYy5fcGF5bG9hZCksZCl9aWYoZWIoYyl8fEthKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTt0aChhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGQmJlwiXCIhPT1kfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxrKGIsYSxkLGUpO2Nhc2Ugd2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSk7Y2FzZSBIYTp2YXIgZj1kLl9pbml0O3JldHVybiB5KGEsYixjLGYoZC5fcGF5bG9hZCksZSl9aWYoZWIoZCl8fEthKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTt0aChiLGQpfXJldHVybiBudWxsfVxuZnVuY3Rpb24gbihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwsdT1nLHc9Zz0wLHg9bnVsbDtudWxsIT09dSYmdzxoLmxlbmd0aDt3Kyspe3UuaW5kZXg+dz8oeD11LHU9bnVsbCk6eD11LnNpYmxpbmc7dmFyIG49cihlLHUsaFt3XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXgpO2JyZWFrfWEmJnUmJm51bGw9PT1uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcsdyk7bnVsbD09PW0/bD1uOm0uc2libGluZz1uO209bjt1PXh9aWYodz09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT11KXtmb3IoO3c8aC5sZW5ndGg7dysrKXU9cShlLGhbd10sayksbnVsbCE9PXUmJihnPWYodSxnLHcpLG51bGw9PT1tP2w9dTptLnNpYmxpbmc9dSxtPXUpO0kmJnRnKGUsdyk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3c8aC5sZW5ndGg7dysrKXg9eSh1LGUsdyxoW3ddLGspLG51bGwhPT14JiYoYSYmbnVsbCE9PXguYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09XG54LmtleT93Ongua2V5KSxnPWYoeCxnLHcpLG51bGw9PT1tP2w9eDptLnNpYmxpbmc9eCxtPXgpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mdW5jdGlvbiB0KGUsZyxoLGspe3ZhciBsPUthKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHAoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09aCl0aHJvdyBFcnJvcihwKDE1MSkpO2Zvcih2YXIgdT1sPW51bGwsbT1nLHc9Zz0wLHg9bnVsbCxuPWgubmV4dCgpO251bGwhPT1tJiYhbi5kb25lO3crKyxuPWgubmV4dCgpKXttLmluZGV4Pnc/KHg9bSxtPW51bGwpOng9bS5zaWJsaW5nO3ZhciB0PXIoZSxtLG4udmFsdWUsayk7aWYobnVsbD09PXQpe251bGw9PT1tJiYobT14KTticmVha31hJiZtJiZudWxsPT09dC5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodCxnLHcpO251bGw9PT11P2w9dDp1LnNpYmxpbmc9dDt1PXQ7bT14fWlmKG4uZG9uZSlyZXR1cm4gYyhlLFxubSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT1tKXtmb3IoOyFuLmRvbmU7dysrLG49aC5uZXh0KCkpbj1xKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7SSYmdGcoZSx3KTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7IW4uZG9uZTt3Kyssbj1oLm5leHQoKSluPXkobSxlLHcsbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PW4ua2V5P3c6bi5rZXkpLGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZ1bmN0aW9uIEooYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09eWEmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zil7c3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgdmE6YTp7Zm9yKHZhciBrPVxuZi5rZXksbD1kO251bGwhPT1sOyl7aWYobC5rZXk9PT1rKXtrPWYudHlwZTtpZihrPT09eWEpe2lmKDc9PT1sLnRhZyl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19ZWxzZSBpZihsLmVsZW1lbnRUeXBlPT09a3x8XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUhhJiZ1aChrKT09PWwudHlwZSl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcyk7ZC5yZWY9c2goYSxsLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YyhhLGwpO2JyZWFrfWVsc2UgYihhLGwpO2w9bC5zaWJsaW5nfWYudHlwZT09PXlhPyhkPUFoKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD15aChmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1zaChhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2Ugd2E6YTp7Zm9yKGw9Zi5rZXk7bnVsbCE9PVxuZDspe2lmKGQua2V5PT09bClpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD16aChmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKTtjYXNlIEhhOnJldHVybiBsPWYuX2luaXQsSihhLGQsbChmLl9wYXlsb2FkKSxoKX1pZihlYihmKSlyZXR1cm4gbihhLGQsZixoKTtpZihLYShmKSlyZXR1cm4gdChhLGQsZixoKTt0aChhLGYpfXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgZiYmXCJcIiE9PWZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZj8oZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOlxuKGMoYSxkKSxkPXhoKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpKTpjKGEsZCl9cmV0dXJuIEp9dmFyIEJoPXZoKCEwKSxDaD12aCghMSksRGg9e30sRWg9VWYoRGgpLEZoPVVmKERoKSxHaD1VZihEaCk7ZnVuY3Rpb24gSGgoYSl7aWYoYT09PURoKXRocm93IEVycm9yKHAoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gSWgoYSxiKXtHKEdoLGIpO0coRmgsYSk7RyhFaCxEaCk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpsYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bGIoYixhKX1FKEVoKTtHKEVoLGIpfWZ1bmN0aW9uIEpoKCl7RShFaCk7RShGaCk7RShHaCl9XG5mdW5jdGlvbiBLaChhKXtIaChHaC5jdXJyZW50KTt2YXIgYj1IaChFaC5jdXJyZW50KTt2YXIgYz1sYihiLGEudHlwZSk7YiE9PWMmJihHKEZoLGEpLEcoRWgsYykpfWZ1bmN0aW9uIExoKGEpe0ZoLmN1cnJlbnQ9PT1hJiYoRShFaCksRShGaCkpfXZhciBNPVVmKDApO1xuZnVuY3Rpb24gTWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5oPVtdO1xuZnVuY3Rpb24gT2goKXtmb3IodmFyIGE9MDthPE5oLmxlbmd0aDthKyspTmhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDtOaC5sZW5ndGg9MH12YXIgUGg9dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixRaD11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxSaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLFNoPSExLFRoPSExLFVoPTAsVmg9MDtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IocCgzMjEpKTt9ZnVuY3Rpb24gV2goYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKGEsYixjLGQsZSxmKXtSaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO1BoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/WWg6Wmg7YT1jKGQsZSk7aWYoVGgpe2Y9MDtkb3tUaD0hMTtVaD0wO2lmKDI1PD1mKXRocm93IEVycm9yKHAoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7UGguY3VycmVudD0kaDthPWMoZCxlKX13aGlsZShUaCl9UGguY3VycmVudD1haTtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O1JoPTA7UD1PPU49bnVsbDtTaD0hMTtpZihiKXRocm93IEVycm9yKHAoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gYmkoKXt2YXIgYT0wIT09VWg7VWg9MDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGNpKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIGRpKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiBlaShhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIGZpKGEpe3ZhciBiPWRpKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHAoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtmPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9bnVsbCxrPW51bGwsbD1mO2Rve3ZhciBtPWwubGFuZTtpZigoUmgmbSk9PT1tKW51bGwhPT1rJiYoaz1rLm5leHQ9e2xhbmU6MCxhY3Rpb246bC5hY3Rpb24saGFzRWFnZXJTdGF0ZTpsLmhhc0VhZ2VyU3RhdGUsZWFnZXJTdGF0ZTpsLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1sLmhhc0VhZ2VyU3RhdGU/bC5lYWdlclN0YXRlOmEoZCxsLmFjdGlvbik7ZWxzZXt2YXIgcT17bGFuZTptLGFjdGlvbjpsLmFjdGlvbixoYXNFYWdlclN0YXRlOmwuaGFzRWFnZXJTdGF0ZSxcbmVhZ2VyU3RhdGU6bC5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWs/KGg9az1xLGc9ZCk6az1rLm5leHQ9cTtOLmxhbmVzfD1tO2hofD1tfWw9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09Zik7bnVsbD09PWs/Zz1kOmsubmV4dD1oO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KFVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1nO2IuYmFzZVF1ZXVlPWs7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfWE9Yy5pbnRlcmxlYXZlZDtpZihudWxsIT09YSl7ZT1hO2RvIGY9ZS5sYW5lLE4ubGFuZXN8PWYsaGh8PWYsZT1lLm5leHQ7d2hpbGUoZSE9PWEpfWVsc2UgbnVsbD09PWUmJihjLmxhbmVzPTApO3JldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBnaShhKXt2YXIgYj1kaSgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihwKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwoVWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1mdW5jdGlvbiBoaSgpe31cbmZ1bmN0aW9uIGlpKGEsYil7dmFyIGM9TixkPWRpKCksZT1iKCksZj0hSGUoZC5tZW1vaXplZFN0YXRlLGUpO2YmJihkLm1lbW9pemVkU3RhdGU9ZSxVZz0hMCk7ZD1kLnF1ZXVlO2ppKGtpLmJpbmQobnVsbCxjLGQsYSksW2FdKTtpZihkLmdldFNuYXBzaG90IT09Ynx8Znx8bnVsbCE9PVAmJlAubWVtb2l6ZWRTdGF0ZS50YWcmMSl7Yy5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxjLGQsZSxiKSx2b2lkIDAsbnVsbCk7aWYobnVsbD09PVIpdGhyb3cgRXJyb3IocCgzNDkpKTswIT09KFJoJjMwKXx8bmkoYyxiLGUpfXJldHVybiBlfWZ1bmN0aW9uIG5pKGEsYixjKXthLmZsYWdzfD0xNjM4NDthPXtnZXRTbmFwc2hvdDpiLHZhbHVlOmN9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5zdG9yZXM9W2FdKTooYz1iLnN0b3JlcyxudWxsPT09Yz9iLnN0b3Jlcz1bYV06Yy5wdXNoKGEpKX1cbmZ1bmN0aW9uIG1pKGEsYixjLGQpe2IudmFsdWU9YztiLmdldFNuYXBzaG90PWQ7b2koYikmJnBpKGEpfWZ1bmN0aW9uIGtpKGEsYixjKXtyZXR1cm4gYyhmdW5jdGlvbigpe29pKGIpJiZwaShhKX0pfWZ1bmN0aW9uIG9pKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgYz1iKCk7cmV0dXJuIUhlKGEsYyl9Y2F0Y2goZCl7cmV0dXJuITB9fWZ1bmN0aW9uIHBpKGEpe3ZhciBiPVpnKGEsMSk7bnVsbCE9PWImJm1oKGIsYSwxLC0xKX1cbmZ1bmN0aW9uIHFpKGEpe3ZhciBiPWNpKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6ZWksbGFzdFJlbmRlcmVkU3RhdGU6YX07Yi5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1yaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gbGkoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIHNpKCl7cmV0dXJuIGRpKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiB0aShhLGIsYyxkKXt2YXIgZT1jaSgpO04uZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPWxpKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1kaSgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJldoKGQsZy5kZXBzKSl7ZS5tZW1vaXplZFN0YXRlPWxpKGIsYyxmLGQpO3JldHVybn19Ti5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9bGkoMXxiLGMsZixkKX1mdW5jdGlvbiB2aShhLGIpe3JldHVybiB0aSg4MzkwNjU2LDgsYSxiKX1mdW5jdGlvbiBqaShhLGIpe3JldHVybiB1aSgyMDQ4LDgsYSxiKX1mdW5jdGlvbiB3aShhLGIpe3JldHVybiB1aSg0LDIsYSxiKX1mdW5jdGlvbiB4aShhLGIpe3JldHVybiB1aSg0LDQsYSxiKX1cbmZ1bmN0aW9uIHlpKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gemkoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB1aSg0LDQseWkuYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gQWkoKXt9ZnVuY3Rpb24gQmkoYSxiKXt2YXIgYz1kaSgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmV2goYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBDaShhLGIpe3ZhciBjPWRpKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZXaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBEaShhLGIsYyl7aWYoMD09PShSaCYyMSkpcmV0dXJuIGEuYmFzZVN0YXRlJiYoYS5iYXNlU3RhdGU9ITEsVWc9ITApLGEubWVtb2l6ZWRTdGF0ZT1jO0hlKGMsYil8fChjPXljKCksTi5sYW5lc3w9YyxoaHw9YyxhLmJhc2VTdGF0ZT0hMCk7cmV0dXJuIGJ9ZnVuY3Rpb24gRWkoYSxiKXt2YXIgYz1DO0M9MCE9PWMmJjQ+Yz9jOjQ7YSghMCk7dmFyIGQ9UWgudHJhbnNpdGlvbjtRaC50cmFuc2l0aW9uPXt9O3RyeXthKCExKSxiKCl9ZmluYWxseXtDPWMsUWgudHJhbnNpdGlvbj1kfX1mdW5jdGlvbiBGaSgpe3JldHVybiBkaSgpLm1lbW9pemVkU3RhdGV9XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9bGgoYSk7Yz17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07aWYoSGkoYSkpSWkoYixjKTtlbHNlIGlmKGM9WWcoYSxiLGMsZCksbnVsbCE9PWMpe3ZhciBlPUwoKTttaChjLGEsZCxlKTtKaShjLGIsZCl9fVxuZnVuY3Rpb24gcmkoYSxiLGMpe3ZhciBkPWxoKGEpLGU9e2xhbmU6ZCxhY3Rpb246YyxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKEhpKGEpKUlpKGIsZSk7ZWxzZXt2YXIgZj1hLmFsdGVybmF0ZTtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1mfHwwPT09Zi5sYW5lcykmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5oYXNFYWdlclN0YXRlPSEwO2UuZWFnZXJTdGF0ZT1oO2lmKEhlKGgsZykpe3ZhciBrPWIuaW50ZXJsZWF2ZWQ7bnVsbD09PWs/KGUubmV4dD1lLFhnKGIpKTooZS5uZXh0PWsubmV4dCxrLm5leHQ9ZSk7Yi5pbnRlcmxlYXZlZD1lO3JldHVybn19Y2F0Y2gobCl7fWZpbmFsbHl7fWM9WWcoYSxiLGUsZCk7bnVsbCE9PWMmJihlPUwoKSxtaChjLGEsZCxlKSxKaShjLGIsZCkpfX1cbmZ1bmN0aW9uIEhpKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO3JldHVybiBhPT09Tnx8bnVsbCE9PWImJmI9PT1OfWZ1bmN0aW9uIElpKGEsYil7VGg9U2g9ITA7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn1mdW5jdGlvbiBKaShhLGIsYyl7aWYoMCE9PShjJjQxOTQyNDApKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO0NjKGEsYyl9fVxudmFyIGFpPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlSW5zZXJ0aW9uRWZmZWN0OlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRLHVzZU11dGFibGVTb3VyY2U6USx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpRLHVzZUlkOlEsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxZaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtjaSgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDp2aSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdGkoNDE5NDMwOCxcbjQseWkuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0aSg0MTk0MzA4LDQsYSxiKX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRpKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9Y2koKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9Y2koKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07ZC5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1HaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9XG5jaSgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpxaSx1c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGNpKCkubWVtb2l6ZWRTdGF0ZT1hfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9cWkoITEpLGI9YVswXTthPUVpLmJpbmQobnVsbCxhWzFdKTtjaSgpLm1lbW9pemVkU3RhdGU9YTtyZXR1cm5bYixhXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbigpe30sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPU4sZT1jaSgpO2lmKEkpe2lmKHZvaWQgMD09PWMpdGhyb3cgRXJyb3IocCg0MDcpKTtjPWMoKX1lbHNle2M9YigpO2lmKG51bGw9PT1SKXRocm93IEVycm9yKHAoMzQ5KSk7MCE9PShSaCYzMCl8fG5pKGQsYixjKX1lLm1lbW9pemVkU3RhdGU9Yzt2YXIgZj17dmFsdWU6YyxnZXRTbmFwc2hvdDpifTtlLnF1ZXVlPWY7dmkoa2kuYmluZChudWxsLGQsXG5mLGEpLFthXSk7ZC5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxkLGYsYyxiKSx2b2lkIDAsbnVsbCk7cmV0dXJuIGN9LHVzZUlkOmZ1bmN0aW9uKCl7dmFyIGE9Y2koKSxiPVIuaWRlbnRpZmllclByZWZpeDtpZihJKXt2YXIgYz1zZzt2YXIgZD1yZztjPShkJn4oMTw8MzItb2MoZCktMSkpLnRvU3RyaW5nKDMyKStjO2I9XCI6XCIrYitcIlJcIitjO2M9VWgrKzswPGMmJihiKz1cIkhcIitjLnRvU3RyaW5nKDMyKSk7Yis9XCI6XCJ9ZWxzZSBjPVZoKyssYj1cIjpcIitiK1wiclwiK2MudG9TdHJpbmcoMzIpK1wiOlwiO3JldHVybiBhLm1lbW9pemVkU3RhdGU9Yn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxaaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6QmksdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6amksdXNlSW1wZXJhdGl2ZUhhbmRsZTp6aSx1c2VJbnNlcnRpb25FZmZlY3Q6d2ksdXNlTGF5b3V0RWZmZWN0OnhpLHVzZU1lbW86Q2ksdXNlUmVkdWNlcjpmaSx1c2VSZWY6c2ksdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZmkoZWkpfSxcbnVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBEaShiLE8ubWVtb2l6ZWRTdGF0ZSxhKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPWZpKGVpKVswXSxiPWRpKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpoaSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTppaSx1c2VJZDpGaSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LCRoPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpCaSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDpqaSx1c2VJbXBlcmF0aXZlSGFuZGxlOnppLHVzZUluc2VydGlvbkVmZmVjdDp3aSx1c2VMYXlvdXRFZmZlY3Q6eGksdXNlTWVtbzpDaSx1c2VSZWR1Y2VyOmdpLHVzZVJlZjpzaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBnaShlaSl9LHVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBudWxsPT09XG5PP2IubWVtb2l6ZWRTdGF0ZT1hOkRpKGIsTy5tZW1vaXplZFN0YXRlLGEpfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9Z2koZWkpWzBdLGI9ZGkoKS5tZW1vaXplZFN0YXRlO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmhpLHVzZVN5bmNFeHRlcm5hbFN0b3JlOmlpLHVzZUlkOkZpLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX07ZnVuY3Rpb24gS2koYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UGEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmUsZGlnZXN0Om51bGx9fWZ1bmN0aW9uIExpKGEsYixjKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6bnVsbCxzdGFjazpudWxsIT1jP2M6bnVsbCxkaWdlc3Q6bnVsbCE9Yj9iOm51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE5pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIE9pKGEsYixjKXtjPWNoKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1BpfHwoUGk9ITAsUWk9ZCk7TWkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBSaShhLGIsYyl7Yz1jaCgtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9O2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtNaShhLGIpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7TWkoYSxiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1TaT9TaT1uZXcgU2V0KFt0aGlzXSk6U2kuYWRkKHRoaXMpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFRpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtpZihudWxsPT09ZCl7ZD1hLnBpbmdDYWNoZT1uZXcgTmk7dmFyIGU9bmV3IFNldDtkLnNldChiLGUpfWVsc2UgZT1kLmdldChiKSx2b2lkIDA9PT1lJiYoZT1uZXcgU2V0LGQuc2V0KGIsZSkpO2UuaGFzKGMpfHwoZS5hZGQoYyksYT1VaS5iaW5kKG51bGwsYSxiLGMpLGIudGhlbihhLGEpKX1mdW5jdGlvbiBWaShhKXtkb3t2YXIgYjtpZihiPTEzPT09YS50YWcpYj1hLm1lbW9pemVkU3RhdGUsYj1udWxsIT09Yj9udWxsIT09Yi5kZWh5ZHJhdGVkPyEwOiExOiEwO2lmKGIpcmV0dXJuIGE7YT1hLnJldHVybn13aGlsZShudWxsIT09YSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBXaShhLGIsYyxkLGUpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiBhPT09Yj9hLmZsYWdzfD02NTUzNjooYS5mbGFnc3w9MTI4LGMuZmxhZ3N8PTEzMTA3MixjLmZsYWdzJj0tNTI4MDUsMT09PWMudGFnJiYobnVsbD09PWMuYWx0ZXJuYXRlP2MudGFnPTE3OihiPWNoKC0xLDEpLGIudGFnPTIsZGgoYyxiLDEpKSksYy5sYW5lc3w9MSksYTthLmZsYWdzfD02NTUzNjthLmxhbmVzPWU7cmV0dXJuIGF9dmFyIFhpPXVhLlJlYWN0Q3VycmVudE93bmVyLFVnPSExO2Z1bmN0aW9uIFlpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/Q2goYixudWxsLGMsZCk6QmgoYixhLmNoaWxkLGMsZCl9XG5mdW5jdGlvbiBaaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7VGcoYixlKTtkPVhoKGEsYixjLGQsZixlKTtjPWJpKCk7aWYobnVsbCE9PWEmJiFVZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLCRpKGEsYixlKTtJJiZjJiZ2ZyhiKTtiLmZsYWdzfD0xO1lpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWooYSxiLGMsZCxlKXtpZihudWxsPT09YSl7dmFyIGY9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYhYmooZikmJnZvaWQgMD09PWYuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWYsY2ooYSxiLGYsZCxlKTthPXloKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZSk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWY9YS5jaGlsZDtpZigwPT09KGEubGFuZXMmZSkpe3ZhciBnPWYubWVtb2l6ZWRQcm9wcztjPWMuY29tcGFyZTtjPW51bGwhPT1jP2M6SWU7aWYoYyhnLGQpJiZhLnJlZj09PWIucmVmKXJldHVybiAkaShhLGIsZSl9Yi5mbGFnc3w9MTthPXdoKGYsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2ooYSxiLGMsZCxlKXtpZihudWxsIT09YSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKEllKGYsZCkmJmEucmVmPT09Yi5yZWYpaWYoVWc9ITEsYi5wZW5kaW5nUHJvcHM9ZD1mLDAhPT0oYS5sYW5lcyZlKSkwIT09KGEuZmxhZ3MmMTMxMDcyKSYmKFVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsJGkoYSxiLGUpfXJldHVybiBkaihhLGIsYyxkLGUpfVxuZnVuY3Rpb24gZWooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfSxHKGZqLGdqKSxnanw9YztlbHNle2lmKDA9PT0oYyYxMDczNzQxODI0KSlyZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LGIudXBkYXRlUXVldWU9bnVsbCxHKGZqLGdqKSxnanw9YSxudWxsO2IubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjAsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH07ZD1udWxsIT09Zj9mLmJhc2VMYW5lczpjO0coZmosZ2opO2dqfD1kfWVsc2UgbnVsbCE9PVxuZj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsRyhmaixnaiksZ2p8PWQ7WWkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGooYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTJ9ZnVuY3Rpb24gZGooYSxiLGMsZCxlKXt2YXIgZj1aZihjKT9YZjpILmN1cnJlbnQ7Zj1ZZihiLGYpO1RnKGIsZSk7Yz1YaChhLGIsYyxkLGYsZSk7ZD1iaSgpO2lmKG51bGwhPT1hJiYhVWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tMjA1MyxhLmxhbmVzJj1+ZSwkaShhLGIsZSk7SSYmZCYmdmcoYik7Yi5mbGFnc3w9MTtZaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlqKGEsYixjLGQsZSl7aWYoWmYoYykpe3ZhciBmPSEwO2NnKGIpfWVsc2UgZj0hMTtUZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSlqaihhLGIpLHBoKGIsYyxkKSxyaChiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1WZyhsKToobD1aZihjKT9YZjpILmN1cnJlbnQsbD1ZZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oaCE9PWR8fGshPT1sKSYmcWgoYixnLGQsbCk7JGc9ITE7dmFyIHI9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cjtnaChiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8ciE9PWt8fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtoKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD0kZ3x8b2goYixjLGgsZCxyLGssbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCkpOlxuKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7YmgoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpMZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO3E9Yi5wZW5kaW5nUHJvcHM7cj1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1WZyhrKTooaz1aZihjKT9YZjpILmN1cnJlbnQsaz1ZZihiLGspKTt2YXIgeT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgeXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PXF8fHIhPT1rKSYmcWgoYixnLGQsayk7JGc9ITE7cj1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1yO2doKGIsZCxnLGUpO3ZhciBuPWIubWVtb2l6ZWRTdGF0ZTtoIT09cXx8ciE9PW58fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgeSYmKGtoKGIsYyx5LGQpLG49Yi5tZW1vaXplZFN0YXRlKSwobD0kZ3x8b2goYixjLGwsZCxyLG4sayl8fCExKT8obXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTEwMjQpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9biksZy5wcm9wcz1kLGcuc3RhdGU9bixnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1cbmEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MTAyNCksZD0hMSl9cmV0dXJuIGtqKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGtqKGEsYixjLGQsZSxmKXtoaihhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyYxMjgpO2lmKCFkJiYhZylyZXR1cm4gZSYmZGcoYixjLCExKSwkaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtYaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPUJoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9QmgoYixudWxsLGgsZikpOllpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJmRnKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gbGooYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9hZyhhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZhZyhhLGIuY29udGV4dCwhMSk7SWgoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gbWooYSxiLGMsZCxlKXtJZygpO0pnKGUpO2IuZmxhZ3N8PTI1NjtZaShhLGIsYyxkKTtyZXR1cm4gYi5jaGlsZH12YXIgbmo9e2RlaHlkcmF0ZWQ6bnVsbCx0cmVlQ29udGV4dDpudWxsLHJldHJ5TGFuZTowfTtmdW5jdGlvbiBvaihhKXtyZXR1cm57YmFzZUxhbmVzOmEsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH19XG5mdW5jdGlvbiBwaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1NLmN1cnJlbnQsZj0hMSxnPTAhPT0oYi5mbGFncyYxMjgpLGg7KGg9Zyl8fChoPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7aWYoaClmPSEwLGIuZmxhZ3MmPS0xMjk7ZWxzZSBpZihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSllfD0xO0coTSxlJjEpO2lmKG51bGw9PT1hKXtFZyhiKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmKGE9YS5kZWh5ZHJhdGVkLG51bGwhPT1hKSlyZXR1cm4gMD09PShiLm1vZGUmMSk/Yi5sYW5lcz0xOlwiJCFcIj09PWEuZGF0YT9iLmxhbmVzPTg6Yi5sYW5lcz0xMDczNzQxODI0LG51bGw7Zz1kLmNoaWxkcmVuO2E9ZC5mYWxsYmFjaztyZXR1cm4gZj8oZD1iLm1vZGUsZj1iLmNoaWxkLGc9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpnfSwwPT09KGQmMSkmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1cbmcpOmY9cWooZyxkLDAsbnVsbCksYT1BaChhLGQsYyxudWxsKSxmLnJldHVybj1iLGEucmV0dXJuPWIsZi5zaWJsaW5nPWEsYi5jaGlsZD1mLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihjKSxiLm1lbW9pemVkU3RhdGU9bmosYSk6cmooYixnKX1lPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSYmKGg9ZS5kZWh5ZHJhdGVkLG51bGwhPT1oKSlyZXR1cm4gc2ooYSxiLGcsZCxoLGUsYyk7aWYoZil7Zj1kLmZhbGxiYWNrO2c9Yi5tb2RlO2U9YS5jaGlsZDtoPWUuc2libGluZzt2YXIgaz17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmQuY2hpbGRyZW59OzA9PT0oZyYxKSYmYi5jaGlsZCE9PWU/KGQ9Yi5jaGlsZCxkLmNoaWxkTGFuZXM9MCxkLnBlbmRpbmdQcm9wcz1rLGIuZGVsZXRpb25zPW51bGwpOihkPXdoKGUsayksZC5zdWJ0cmVlRmxhZ3M9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQpO251bGwhPT1oP2Y9d2goaCxmKTooZj1BaChmLGcsYyxudWxsKSxmLmZsYWdzfD0yKTtmLnJldHVybj1cbmI7ZC5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7ZD1mO2Y9Yi5jaGlsZDtnPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZTtnPW51bGw9PT1nP29qKGMpOntiYXNlTGFuZXM6Zy5iYXNlTGFuZXN8YyxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpnLnRyYW5zaXRpb25zfTtmLm1lbW9pemVkU3RhdGU9ZztmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jO2IubWVtb2l6ZWRTdGF0ZT1uajtyZXR1cm4gZH1mPWEuY2hpbGQ7YT1mLnNpYmxpbmc7ZD13aChmLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmQuY2hpbGRyZW59KTswPT09KGIubW9kZSYxKSYmKGQubGFuZXM9Yyk7ZC5yZXR1cm49YjtkLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGM9Yi5kZWxldGlvbnMsbnVsbD09PWM/KGIuZGVsZXRpb25zPVthXSxiLmZsYWdzfD0xNik6Yy5wdXNoKGEpKTtiLmNoaWxkPWQ7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGR9XG5mdW5jdGlvbiByaihhLGIpe2I9cWooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Yn0sYS5tb2RlLDAsbnVsbCk7Yi5yZXR1cm49YTtyZXR1cm4gYS5jaGlsZD1ifWZ1bmN0aW9uIHRqKGEsYixjLGQpe251bGwhPT1kJiZKZyhkKTtCaChiLGEuY2hpbGQsbnVsbCxjKTthPXJqKGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4pO2EuZmxhZ3N8PTI7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGF9XG5mdW5jdGlvbiBzaihhLGIsYyxkLGUsZixnKXtpZihjKXtpZihiLmZsYWdzJjI1NilyZXR1cm4gYi5mbGFncyY9LTI1NyxkPUxpKEVycm9yKHAoNDIyKSkpLHRqKGEsYixnLGQpO2lmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpcmV0dXJuIGIuY2hpbGQ9YS5jaGlsZCxiLmZsYWdzfD0xMjgsbnVsbDtmPWQuZmFsbGJhY2s7ZT1iLm1vZGU7ZD1xaih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpkLmNoaWxkcmVufSxlLDAsbnVsbCk7Zj1BaChmLGUsZyxudWxsKTtmLmZsYWdzfD0yO2QucmV0dXJuPWI7Zi5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7MCE9PShiLm1vZGUmMSkmJkJoKGIsYS5jaGlsZCxudWxsLGcpO2IuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihnKTtiLm1lbW9pemVkU3RhdGU9bmo7cmV0dXJuIGZ9aWYoMD09PShiLm1vZGUmMSkpcmV0dXJuIHRqKGEsYixnLG51bGwpO2lmKFwiJCFcIj09PWUuZGF0YSl7ZD1lLm5leHRTaWJsaW5nJiZlLm5leHRTaWJsaW5nLmRhdGFzZXQ7XG5pZihkKXZhciBoPWQuZGdzdDtkPWg7Zj1FcnJvcihwKDQxOSkpO2Q9TGkoZixkLHZvaWQgMCk7cmV0dXJuIHRqKGEsYixnLGQpfWg9MCE9PShnJmEuY2hpbGRMYW5lcyk7aWYoVWd8fGgpe2Q9UjtpZihudWxsIT09ZCl7c3dpdGNoKGcmLWcpe2Nhc2UgNDplPTI7YnJlYWs7Y2FzZSAxNjplPTg7YnJlYWs7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OmU9MzI7YnJlYWs7Y2FzZSA1MzY4NzA5MTI6ZT0yNjg0MzU0NTY7YnJlYWs7ZGVmYXVsdDplPTB9ZT0wIT09KGUmKGQuc3VzcGVuZGVkTGFuZXN8ZykpPzA6ZTtcbjAhPT1lJiZlIT09Zi5yZXRyeUxhbmUmJihmLnJldHJ5TGFuZT1lLFpnKGEsZSksbWgoZCxhLGUsLTEpKX11aigpO2Q9TGkoRXJyb3IocCg0MjEpKSk7cmV0dXJuIHRqKGEsYixnLGQpfWlmKFwiJD9cIj09PWUuZGF0YSlyZXR1cm4gYi5mbGFnc3w9MTI4LGIuY2hpbGQ9YS5jaGlsZCxiPXZqLmJpbmQobnVsbCxhKSxlLl9yZWFjdFJldHJ5PWIsbnVsbDthPWYudHJlZUNvbnRleHQ7eWc9TGYoZS5uZXh0U2libGluZyk7eGc9YjtJPSEwO3pnPW51bGw7bnVsbCE9PWEmJihvZ1twZysrXT1yZyxvZ1twZysrXT1zZyxvZ1twZysrXT1xZyxyZz1hLmlkLHNnPWEub3ZlcmZsb3cscWc9Yik7Yj1yaihiLGQuY2hpbGRyZW4pO2IuZmxhZ3N8PTQwOTY7cmV0dXJuIGJ9ZnVuY3Rpb24gd2ooYSxiLGMpe2EubGFuZXN8PWI7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbCE9PWQmJihkLmxhbmVzfD1iKTtTZyhhLnJldHVybixiLGMpfVxuZnVuY3Rpb24geGooYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWY/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZX06KGYuaXNCYWNrd2FyZHM9YixmLnJlbmRlcmluZz1udWxsLGYucmVuZGVyaW5nU3RhcnRUaW1lPTAsZi5sYXN0PWQsZi50YWlsPWMsZi50YWlsTW9kZT1lKX1cbmZ1bmN0aW9uIHlqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7WWkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9MTI4O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyYxMjgpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmd2ooYSxjLGIpO2Vsc2UgaWYoMTk9PT1hLnRhZyl3aihhLGMsYik7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUcoTSxkKTtpZigwPT09KGIubW9kZSYxKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09TWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt4aihiLCExLGUsYyxmKTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PU1oKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX14aihiLCEwLGMsbnVsbCxmKTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp4aihiLCExLG51bGwsbnVsbCx2b2lkIDApO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBqaihhLGIpezA9PT0oYi5tb2RlJjEpJiZudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKX1mdW5jdGlvbiAkaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7aGh8PWIubGFuZXM7aWYoMD09PShjJmIuY2hpbGRMYW5lcykpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHAoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPXdoKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz13aChhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gemooYSxiLGMpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOmxqKGIpO0lnKCk7YnJlYWs7Y2FzZSA1OktoKGIpO2JyZWFrO2Nhc2UgMTpaZihiLnR5cGUpJiZjZyhiKTticmVhaztjYXNlIDQ6SWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnZhciBkPWIudHlwZS5fY29udGV4dCxlPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtHKE1nLGQuX2N1cnJlbnRWYWx1ZSk7ZC5fY3VycmVudFZhbHVlPWU7YnJlYWs7Y2FzZSAxMzpkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCl7aWYobnVsbCE9PWQuZGVoeWRyYXRlZClyZXR1cm4gRyhNLE0uY3VycmVudCYxKSxiLmZsYWdzfD0xMjgsbnVsbDtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gcGooYSxiLGMpO0coTSxNLmN1cnJlbnQmMSk7YT0kaShhLGIsYyk7cmV0dXJuIG51bGwhPT1hP2Euc2libGluZzpudWxsfUcoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZcbmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjEyOCkpe2lmKGQpcmV0dXJuIHlqKGEsYixjKTtiLmZsYWdzfD0xMjh9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtHKE0sTS5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBiLmxhbmVzPTAsZWooYSxiLGMpfXJldHVybiAkaShhLGIsYyl9dmFyIEFqLEJqLENqLERqO1xuQWo9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0JqPWZ1bmN0aW9uKCl7fTtcbkNqPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtIaChFaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9QSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPUJmKX11YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PWwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiZcbihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGVhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHwoYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsXG5jKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihlYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRChcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixjKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RGo9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07XG5mdW5jdGlvbiBFaihhLGIpe2lmKCFJKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBTKGEpe3ZhciBiPW51bGwhPT1hLmFsdGVybmF0ZSYmYS5hbHRlcm5hdGUuY2hpbGQ9PT1hLmNoaWxkLGM9MCxkPTA7aWYoYilmb3IodmFyIGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQsZHw9ZS5mbGFncyYxNDY4MDA2NCxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Vsc2UgZm9yKGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MsZHw9ZS5mbGFncyxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Euc3VidHJlZUZsYWdzfD1kO2EuY2hpbGRMYW5lcz1jO3JldHVybiBifVxuZnVuY3Rpb24gRmooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIFMoYiksbnVsbDtjYXNlIDE6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksUyhiKSxudWxsO2Nhc2UgMzpkPWIuc3RhdGVOb2RlO0poKCk7RShXZik7RShIKTtPaCgpO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClHZyhiKT9iLmZsYWdzfD00Om51bGw9PT1hfHxhLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYwPT09KGIuZmxhZ3MmMjU2KXx8KGIuZmxhZ3N8PTEwMjQsbnVsbCE9PXpnJiYoR2ooemcpLHpnPW51bGwpKTtCaihhLGIpO1MoYik7cmV0dXJuIG51bGw7Y2FzZSA1OkxoKGIpO3ZhciBlPUhoKEdoLmN1cnJlbnQpO1xuYz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKUNqKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtTKGIpO3JldHVybiBudWxsfWE9SGgoRWguY3VycmVudCk7aWYoR2coYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbT2ZdPWI7ZFtQZl09ZjthPTAhPT0oYi5tb2RlJjEpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RChcImNhbmNlbFwiLGQpO0QoXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8bGYubGVuZ3RoO2UrKylEKGxmW2VdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpEKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmQpO0QoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpEKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtEKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RChcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEQoXCJpbnZhbGlkXCIsZCl9dWIoYyxmKTtlPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsaCxhKSxlPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsXG5oLGEpLGU9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTplYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmXCJvblNjcm9sbFwiPT09ZyYmRChcInNjcm9sbFwiLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtkYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPUJmKX1kPWU7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YSYmKGE9a2IoYykpO1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XG5cInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVtPZl09YjthW1BmXT1kO0FqKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTthOntnPXZiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpEKFwiY2FuY2VsXCIsYSk7RChcImNsb3NlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPGxmLmxlbmd0aDtlKyspRChsZltlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkQoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmEpO0QoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RChcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWQ7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7RChcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9Z2IoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXViKGMsZSk7aD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3NiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZuYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09XG5jfHxcIlwiIT09aykmJm9iKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZvYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGVhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkQoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZ0YShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2RiKGEsZCwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLFxuITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1CZil9c3dpdGNoKGMpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6ZD0hIWQuYXV0b0ZvY3VzO2JyZWFrIGE7Y2FzZSBcImltZ1wiOmQ9ITA7YnJlYWsgYTtkZWZhdWx0OmQ9ITF9fWQmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mil9UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGooYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTY2KSk7Yz1IaChHaC5jdXJyZW50KTtIaChFaC5jdXJyZW50KTtpZihHZyhiKSl7ZD1iLnN0YXRlTm9kZTtjPWIubWVtb2l6ZWRQcm9wcztkW09mXT1iO2lmKGY9ZC5ub2RlVmFsdWUhPT1jKWlmKGE9XG54ZyxudWxsIT09YSlzd2l0Y2goYS50YWcpe2Nhc2UgMzpBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKTticmVhaztjYXNlIDU6ITAhPT1hLm1lbW9pemVkUHJvcHMuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKX1mJiYoYi5mbGFnc3w9NCl9ZWxzZSBkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFtPZl09YixiLnN0YXRlTm9kZT1kfVMoYik7cmV0dXJuIG51bGw7Y2FzZSAxMzpFKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsIT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2lmKEkmJm51bGwhPT15ZyYmMCE9PShiLm1vZGUmMSkmJjA9PT0oYi5mbGFncyYxMjgpKUhnKCksSWcoKSxiLmZsYWdzfD05ODU2MCxmPSExO2Vsc2UgaWYoZj1HZyhiKSxudWxsIT09ZCYmbnVsbCE9PWQuZGVoeWRyYXRlZCl7aWYobnVsbD09PVxuYSl7aWYoIWYpdGhyb3cgRXJyb3IocCgzMTgpKTtmPWIubWVtb2l6ZWRTdGF0ZTtmPW51bGwhPT1mP2YuZGVoeWRyYXRlZDpudWxsO2lmKCFmKXRocm93IEVycm9yKHAoMzE3KSk7ZltPZl09Yn1lbHNlIElnKCksMD09PShiLmZsYWdzJjEyOCkmJihiLm1lbW9pemVkU3RhdGU9bnVsbCksYi5mbGFnc3w9NDtTKGIpO2Y9ITF9ZWxzZSBudWxsIT09emcmJihHaih6Zyksemc9bnVsbCksZj0hMDtpZighZilyZXR1cm4gYi5mbGFncyY2NTUzNj9iOm51bGx9aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7ZCE9PShudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkmJmQmJihiLmNoaWxkLmZsYWdzfD04MTkyLDAhPT0oYi5tb2RlJjEpJiYobnVsbD09PWF8fDAhPT0oTS5jdXJyZW50JjEpPzA9PT1UJiYoVD0zKTp1aigpKSk7bnVsbCE9PWIudXBkYXRlUXVldWUmJihiLmZsYWdzfD00KTtTKGIpO3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gSmgoKSxcbkJqKGEsYiksbnVsbD09PWEmJnNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLFMoYiksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLFMoYiksbnVsbDtjYXNlIDE3OnJldHVybiBaZihiLnR5cGUpJiYkZigpLFMoYiksbnVsbDtjYXNlIDE5OkUoTSk7Zj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWYpcmV0dXJuIFMoYiksbnVsbDtkPTAhPT0oYi5mbGFncyYxMjgpO2c9Zi5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZClFaihmLCExKTtlbHNle2lmKDAhPT1UfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9TWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTEyODtFaihmLCExKTtkPWcudXBkYXRlUXVldWU7bnVsbCE9PWQmJihiLnVwZGF0ZVF1ZXVlPWQsYi5mbGFnc3w9NCk7Yi5zdWJ0cmVlRmxhZ3M9MDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0xNDY4MDA2Nixcbmc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5zdWJ0cmVlRmxhZ3M9MCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYuc3VidHJlZUZsYWdzPTAsZi5kZWxldGlvbnM9bnVsbCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxmLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0coTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPVxuYS5zaWJsaW5nfW51bGwhPT1mLnRhaWwmJkIoKT5IaiYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCl9ZWxzZXtpZighZClpZihhPU1oKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD0xMjgsZD0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRWooZiwhMCksbnVsbD09PWYudGFpbCYmXCJoaWRkZW5cIj09PWYudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIUkpcmV0dXJuIFMoYiksbnVsbH1lbHNlIDIqQigpLWYucmVuZGVyaW5nU3RhcnRUaW1lPkhqJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCk7Zi5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1mLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGYubGFzdD1nKX1pZihudWxsIT09Zi50YWlsKXJldHVybiBiPWYudGFpbCxmLnJlbmRlcmluZz1cbmIsZi50YWlsPWIuc2libGluZyxmLnJlbmRlcmluZ1N0YXJ0VGltZT1CKCksYi5zaWJsaW5nPW51bGwsYz1NLmN1cnJlbnQsRyhNLGQ/YyYxfDI6YyYxKSxiO1MoYik7cmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PWQmJihiLmZsYWdzfD04MTkyKSxkJiYwIT09KGIubW9kZSYxKT8wIT09KGdqJjEwNzM3NDE4MjQpJiYoUyhiKSxiLnN1YnRyZWVGbGFncyY2JiYoYi5mbGFnc3w9ODE5MikpOlMoYiksbnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2Nhc2UgMjU6cmV0dXJuIG51bGx9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBKaihhLGIpe3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnJldHVybiBaZihiLnR5cGUpJiYkZigpLGE9Yi5mbGFncyxhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMzpyZXR1cm4gSmgoKSxFKFdmKSxFKEgpLE9oKCksYT1iLmZsYWdzLDAhPT0oYSY2NTUzNikmJjA9PT0oYSYxMjgpPyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgNTpyZXR1cm4gTGgoYiksbnVsbDtjYXNlIDEzOkUoTSk7YT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe2lmKG51bGw9PT1iLmFsdGVybmF0ZSl0aHJvdyBFcnJvcihwKDM0MCkpO0lnKCl9YT1iLmZsYWdzO3JldHVybiBhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEUoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIEpoKCksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLFxubnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fXZhciBLaj0hMSxVPSExLExqPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0LFY9bnVsbDtmdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEucmVmO2lmKG51bGwhPT1jKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjKXRyeXtjKG51bGwpfWNhdGNoKGQpe1coYSxiLGQpfWVsc2UgYy5jdXJyZW50PW51bGx9ZnVuY3Rpb24gTmooYSxiLGMpe3RyeXtjKCl9Y2F0Y2goZCl7VyhhLGIsZCl9fXZhciBPaj0hMTtcbmZ1bmN0aW9uIFBqKGEsYil7Q2Y9ZGQ7YT1NZSgpO2lmKE5lKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBjPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntjPShjPWEub3duZXJEb2N1bWVudCkmJmMuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgZD1jLmdldFNlbGVjdGlvbiYmYy5nZXRTZWxlY3Rpb24oKTtpZihkJiYwIT09ZC5yYW5nZUNvdW50KXtjPWQuYW5jaG9yTm9kZTt2YXIgZT1kLmFuY2hvck9mZnNldCxmPWQuZm9jdXNOb2RlO2Q9ZC5mb2N1c09mZnNldDt0cnl7Yy5ub2RlVHlwZSxmLm5vZGVUeXBlfWNhdGNoKEYpe2M9bnVsbDticmVhayBhfXZhciBnPTAsaD0tMSxrPS0xLGw9MCxtPTAscT1hLHI9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB5Ozspe3EhPT1jfHwwIT09ZSYmMyE9PXEubm9kZVR5cGV8fChoPWcrZSk7cSE9PWZ8fDAhPT1kJiYzIT09cS5ub2RlVHlwZXx8KGs9ZytkKTszPT09cS5ub2RlVHlwZSYmKGcrPVxucS5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHk9cS5maXJzdENoaWxkKSlicmVhaztyPXE7cT15fWZvcig7Oyl7aWYocT09PWEpYnJlYWsgYjtyPT09YyYmKytsPT09ZSYmKGg9Zyk7cj09PWYmJisrbT09PWQmJihrPWcpO2lmKG51bGwhPT0oeT1xLm5leHRTaWJsaW5nKSlicmVhaztxPXI7cj1xLnBhcmVudE5vZGV9cT15fWM9LTE9PT1ofHwtMT09PWs/bnVsbDp7c3RhcnQ6aCxlbmQ6a319ZWxzZSBjPW51bGx9Yz1jfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBjPW51bGw7RGY9e2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Y307ZGQ9ITE7Zm9yKFY9YjtudWxsIT09VjspaWYoYj1WLGE9Yi5jaGlsZCwwIT09KGIuc3VidHJlZUZsYWdzJjEwMjgpJiZudWxsIT09YSlhLnJldHVybj1iLFY9YTtlbHNlIGZvcig7bnVsbCE9PVY7KXtiPVY7dHJ5e3ZhciBuPWIuYWx0ZXJuYXRlO2lmKDAhPT0oYi5mbGFncyYxMDI0KSlzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7XG5jYXNlIDE6aWYobnVsbCE9PW4pe3ZhciB0PW4ubWVtb2l6ZWRQcm9wcyxKPW4ubWVtb2l6ZWRTdGF0ZSx4PWIuc3RhdGVOb2RlLHc9eC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP3Q6TGcoYi50eXBlLHQpLEopO3guX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9d31icmVhaztjYXNlIDM6dmFyIHU9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzsxPT09dS5ub2RlVHlwZT91LnRleHRDb250ZW50PVwiXCI6OT09PXUubm9kZVR5cGUmJnUuZG9jdW1lbnRFbGVtZW50JiZ1LnJlbW92ZUNoaWxkKHUuZG9jdW1lbnRFbGVtZW50KTticmVhaztjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9fWNhdGNoKEYpe1coYixiLnJldHVybixGKX1hPWIuc2libGluZztpZihudWxsIT09YSl7YS5yZXR1cm49Yi5yZXR1cm47Vj1hO2JyZWFrfVY9Yi5yZXR1cm59bj1PajtPaj0hMTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFFqKGEsYixjKXt2YXIgZD1iLnVwZGF0ZVF1ZXVlO2Q9bnVsbCE9PWQ/ZC5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWQpe3ZhciBlPWQ9ZC5uZXh0O2Rve2lmKChlLnRhZyZhKT09PWEpe3ZhciBmPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWYmJk5qKGIsYyxmKX1lPWUubmV4dH13aGlsZShlIT09ZCl9fWZ1bmN0aW9uIFJqKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBTaihhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09Yil7dmFyIGM9YS5zdGF0ZU5vZGU7c3dpdGNoKGEudGFnKXtjYXNlIDU6YT1jO2JyZWFrO2RlZmF1bHQ6YT1jfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yi5jdXJyZW50PWF9fVxuZnVuY3Rpb24gVGooYSl7dmFyIGI9YS5hbHRlcm5hdGU7bnVsbCE9PWImJihhLmFsdGVybmF0ZT1udWxsLFRqKGIpKTthLmNoaWxkPW51bGw7YS5kZWxldGlvbnM9bnVsbDthLnNpYmxpbmc9bnVsbDs1PT09YS50YWcmJihiPWEuc3RhdGVOb2RlLG51bGwhPT1iJiYoZGVsZXRlIGJbT2ZdLGRlbGV0ZSBiW1BmXSxkZWxldGUgYltvZl0sZGVsZXRlIGJbUWZdLGRlbGV0ZSBiW1JmXSkpO2Euc3RhdGVOb2RlPW51bGw7YS5yZXR1cm49bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gVWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBWaihhKXthOmZvcig7Oyl7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxVaihhLnJldHVybikpcmV0dXJuIG51bGw7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2ZvcihhPWEuc2libGluZzs1IT09YS50YWcmJjYhPT1hLnRhZyYmMTghPT1hLnRhZzspe2lmKGEuZmxhZ3MmMiljb250aW51ZSBhO2lmKG51bGw9PT1hLmNoaWxkfHw0PT09YS50YWcpY29udGludWUgYTtlbHNlIGEuY2hpbGQucmV0dXJuPWEsYT1hLmNoaWxkfWlmKCEoYS5mbGFncyYyKSlyZXR1cm4gYS5zdGF0ZU5vZGV9fVxuZnVuY3Rpb24gV2ooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPUJmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspV2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gWGooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihYaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVhqKGEsYixjKSxhPWEuc2libGluZ312YXIgWD1udWxsLFlqPSExO2Z1bmN0aW9uIFpqKGEsYixjKXtmb3IoYz1jLmNoaWxkO251bGwhPT1jOylhayhhLGIsYyksYz1jLnNpYmxpbmd9XG5mdW5jdGlvbiBhayhhLGIsYyl7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7bGMub25Db21taXRGaWJlclVubW91bnQoa2MsYyl9Y2F0Y2goaCl7fXN3aXRjaChjLnRhZyl7Y2FzZSA1OlV8fE1qKGMsYik7Y2FzZSA2OnZhciBkPVgsZT1ZajtYPW51bGw7WmooYSxiLGMpO1g9ZDtZaj1lO251bGwhPT1YJiYoWWo/KGE9WCxjPWMuc3RhdGVOb2RlLDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKTphLnJlbW92ZUNoaWxkKGMpKTpYLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSAxODpudWxsIT09WCYmKFlqPyhhPVgsYz1jLnN0YXRlTm9kZSw4PT09YS5ub2RlVHlwZT9LZihhLnBhcmVudE5vZGUsYyk6MT09PWEubm9kZVR5cGUmJktmKGEsYyksYmQoYSkpOktmKFgsYy5zdGF0ZU5vZGUpKTticmVhaztjYXNlIDQ6ZD1YO2U9WWo7WD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1lqPSEwO1xuWmooYSxiLGMpO1g9ZDtZaj1lO2JyZWFrO2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTppZighVSYmKGQ9Yy51cGRhdGVRdWV1ZSxudWxsIT09ZCYmKGQ9ZC5sYXN0RWZmZWN0LG51bGwhPT1kKSkpe2U9ZD1kLm5leHQ7ZG97dmFyIGY9ZSxnPWYuZGVzdHJveTtmPWYudGFnO3ZvaWQgMCE9PWcmJigwIT09KGYmMik/TmooYyxiLGcpOjAhPT0oZiY0KSYmTmooYyxiLGcpKTtlPWUubmV4dH13aGlsZShlIT09ZCl9WmooYSxiLGMpO2JyZWFrO2Nhc2UgMTppZighVSYmKE1qKGMsYiksZD1jLnN0YXRlTm9kZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVW5tb3VudCkpdHJ5e2QucHJvcHM9Yy5tZW1vaXplZFByb3BzLGQuc3RhdGU9Yy5tZW1vaXplZFN0YXRlLGQuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChoKXtXKGMsYixoKX1aaihhLGIsYyk7YnJlYWs7Y2FzZSAyMTpaaihhLGIsYyk7YnJlYWs7Y2FzZSAyMjpjLm1vZGUmMT8oVT0oZD1VKXx8bnVsbCE9PVxuYy5tZW1vaXplZFN0YXRlLFpqKGEsYixjKSxVPWQpOlpqKGEsYixjKTticmVhaztkZWZhdWx0OlpqKGEsYixjKX19ZnVuY3Rpb24gYmsoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgTGopO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1jay5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIGRrKGEsYil7dmFyIGM9Yi5kZWxldGlvbnM7aWYobnVsbCE9PWMpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07dHJ5e3ZhciBmPWEsZz1iLGg9ZzthOmZvcig7bnVsbCE9PWg7KXtzd2l0Y2goaC50YWcpe2Nhc2UgNTpYPWguc3RhdGVOb2RlO1lqPSExO2JyZWFrIGE7Y2FzZSAzOlg9aC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztZaj0hMDticmVhayBhO2Nhc2UgNDpYPWguc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WWo9ITA7YnJlYWsgYX1oPWgucmV0dXJufWlmKG51bGw9PT1YKXRocm93IEVycm9yKHAoMTYwKSk7YWsoZixnLGUpO1g9bnVsbDtZaj0hMTt2YXIgaz1lLmFsdGVybmF0ZTtudWxsIT09ayYmKGsucmV0dXJuPW51bGwpO2UucmV0dXJuPW51bGx9Y2F0Y2gobCl7VyhlLGIsbCl9fWlmKGIuc3VidHJlZUZsYWdzJjEyODU0KWZvcihiPWIuY2hpbGQ7bnVsbCE9PWI7KWVrKGIsYSksYj1iLnNpYmxpbmd9XG5mdW5jdGlvbiBlayhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS5mbGFncztzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpkayhiLGEpO2ZrKGEpO2lmKGQmNCl7dHJ5e1FqKDMsYSxhLnJldHVybiksUmooMyxhKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9dHJ5e1FqKDUsYSxhLnJldHVybil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDE6ZGsoYixhKTtmayhhKTtkJjUxMiYmbnVsbCE9PWMmJk1qKGMsYy5yZXR1cm4pO2JyZWFrO2Nhc2UgNTpkayhiLGEpO2ZrKGEpO2QmNTEyJiZudWxsIT09YyYmTWooYyxjLnJldHVybik7aWYoYS5mbGFncyYzMil7dmFyIGU9YS5zdGF0ZU5vZGU7dHJ5e29iKGUsXCJcIil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1pZihkJjQmJihlPWEuc3RhdGVOb2RlLG51bGwhPWUpKXt2YXIgZj1hLm1lbW9pemVkUHJvcHMsZz1udWxsIT09Yz9jLm1lbW9pemVkUHJvcHM6ZixoPWEudHlwZSxrPWEudXBkYXRlUXVldWU7XG5hLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWspdHJ5e1wiaW5wdXRcIj09PWgmJlwicmFkaW9cIj09PWYudHlwZSYmbnVsbCE9Zi5uYW1lJiZhYihlLGYpO3ZiKGgsZyk7dmFyIGw9dmIoaCxmKTtmb3IoZz0wO2c8ay5sZW5ndGg7Zys9Mil7dmFyIG09a1tnXSxxPWtbZysxXTtcInN0eWxlXCI9PT1tP3NiKGUscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bT9uYihlLHEpOlwiY2hpbGRyZW5cIj09PW0/b2IoZSxxKTp0YShlLG0scSxsKX1zd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6YmIoZSxmKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihlLGYpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp2YXIgcj1lLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU7ZS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZi5tdWx0aXBsZTt2YXIgeT1mLnZhbHVlO251bGwhPXk/ZmIoZSwhIWYubXVsdGlwbGUseSwhMSk6ciE9PSEhZi5tdWx0aXBsZSYmKG51bGwhPWYuZGVmYXVsdFZhbHVlP2ZiKGUsISFmLm11bHRpcGxlLFxuZi5kZWZhdWx0VmFsdWUsITApOmZiKGUsISFmLm11bHRpcGxlLGYubXVsdGlwbGU/W106XCJcIiwhMSkpfWVbUGZdPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDY6ZGsoYixhKTtmayhhKTtpZihkJjQpe2lmKG51bGw9PT1hLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2MikpO2U9YS5zdGF0ZU5vZGU7Zj1hLm1lbW9pemVkUHJvcHM7dHJ5e2Uubm9kZVZhbHVlPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDM6ZGsoYixhKTtmayhhKTtpZihkJjQmJm51bGwhPT1jJiZjLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXRyeXtiZChiLmNvbnRhaW5lckluZm8pfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX1icmVhaztjYXNlIDQ6ZGsoYixhKTtmayhhKTticmVhaztjYXNlIDEzOmRrKGIsYSk7ZmsoYSk7ZT1hLmNoaWxkO2UuZmxhZ3MmODE5MiYmKGY9bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSxlLnN0YXRlTm9kZS5pc0hpZGRlbj1mLCFmfHxcbm51bGwhPT1lLmFsdGVybmF0ZSYmbnVsbCE9PWUuYWx0ZXJuYXRlLm1lbW9pemVkU3RhdGV8fChnaz1CKCkpKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjI6bT1udWxsIT09YyYmbnVsbCE9PWMubWVtb2l6ZWRTdGF0ZTthLm1vZGUmMT8oVT0obD1VKXx8bSxkayhiLGEpLFU9bCk6ZGsoYixhKTtmayhhKTtpZihkJjgxOTIpe2w9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZigoYS5zdGF0ZU5vZGUuaXNIaWRkZW49bCkmJiFtJiYwIT09KGEubW9kZSYxKSlmb3IoVj1hLG09YS5jaGlsZDtudWxsIT09bTspe2ZvcihxPVY9bTtudWxsIT09Vjspe3I9Vjt5PXIuY2hpbGQ7c3dpdGNoKHIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6UWooNCxyLHIucmV0dXJuKTticmVhaztjYXNlIDE6TWoocixyLnJldHVybik7dmFyIG49ci5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4uY29tcG9uZW50V2lsbFVubW91bnQpe2Q9cjtjPXIucmV0dXJuO3RyeXtiPWQsbi5wcm9wcz1cbmIubWVtb2l6ZWRQcm9wcyxuLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxuLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2godCl7VyhkLGMsdCl9fWJyZWFrO2Nhc2UgNTpNaihyLHIucmV0dXJuKTticmVhaztjYXNlIDIyOmlmKG51bGwhPT1yLm1lbW9pemVkU3RhdGUpe2hrKHEpO2NvbnRpbnVlfX1udWxsIT09eT8oeS5yZXR1cm49cixWPXkpOmhrKHEpfW09bS5zaWJsaW5nfWE6Zm9yKG09bnVsbCxxPWE7Oyl7aWYoNT09PXEudGFnKXtpZihudWxsPT09bSl7bT1xO3RyeXtlPXEuc3RhdGVOb2RlLGw/KGY9ZS5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGg9cS5zdGF0ZU5vZGUsaz1xLm1lbW9pemVkUHJvcHMuc3R5bGUsZz12b2lkIDAhPT1rJiZudWxsIT09ayYmay5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ay5kaXNwbGF5Om51bGwsaC5zdHlsZS5kaXNwbGF5PVxucmIoXCJkaXNwbGF5XCIsZykpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19fWVsc2UgaWYoNj09PXEudGFnKXtpZihudWxsPT09bSl0cnl7cS5zdGF0ZU5vZGUubm9kZVZhbHVlPWw/XCJcIjpxLm1lbW9pemVkUHJvcHN9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1lbHNlIGlmKCgyMiE9PXEudGFnJiYyMyE9PXEudGFnfHxudWxsPT09cS5tZW1vaXplZFN0YXRlfHxxPT09YSkmJm51bGwhPT1xLmNoaWxkKXtxLmNoaWxkLnJldHVybj1xO3E9cS5jaGlsZDtjb250aW51ZX1pZihxPT09YSlicmVhayBhO2Zvcig7bnVsbD09PXEuc2libGluZzspe2lmKG51bGw9PT1xLnJldHVybnx8cS5yZXR1cm49PT1hKWJyZWFrIGE7bT09PXEmJihtPW51bGwpO3E9cS5yZXR1cm59bT09PXEmJihtPW51bGwpO3Euc2libGluZy5yZXR1cm49cS5yZXR1cm47cT1xLnNpYmxpbmd9fWJyZWFrO2Nhc2UgMTk6ZGsoYixhKTtmayhhKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjE6YnJlYWs7ZGVmYXVsdDpkayhiLFxuYSksZmsoYSl9fWZ1bmN0aW9uIGZrKGEpe3ZhciBiPWEuZmxhZ3M7aWYoYiYyKXt0cnl7YTp7Zm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoVWooYykpe3ZhciBkPWM7YnJlYWsgYX1jPWMucmV0dXJufXRocm93IEVycm9yKHAoMTYwKSk7fXN3aXRjaChkLnRhZyl7Y2FzZSA1OnZhciBlPWQuc3RhdGVOb2RlO2QuZmxhZ3MmMzImJihvYihlLFwiXCIpLGQuZmxhZ3MmPS0zMyk7dmFyIGY9VmooYSk7WGooYSxmLGUpO2JyZWFrO2Nhc2UgMzpjYXNlIDQ6dmFyIGc9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxoPVZqKGEpO1dqKGEsaCxnKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYxKSk7fX1jYXRjaChrKXtXKGEsYS5yZXR1cm4sayl9YS5mbGFncyY9LTN9YiY0MDk2JiYoYS5mbGFncyY9LTQwOTcpfWZ1bmN0aW9uIGlrKGEsYixjKXtWPWE7amsoYSxiLGMpfVxuZnVuY3Rpb24gamsoYSxiLGMpe2Zvcih2YXIgZD0wIT09KGEubW9kZSYxKTtudWxsIT09Vjspe3ZhciBlPVYsZj1lLmNoaWxkO2lmKDIyPT09ZS50YWcmJmQpe3ZhciBnPW51bGwhPT1lLm1lbW9pemVkU3RhdGV8fEtqO2lmKCFnKXt2YXIgaD1lLmFsdGVybmF0ZSxrPW51bGwhPT1oJiZudWxsIT09aC5tZW1vaXplZFN0YXRlfHxVO2g9S2o7dmFyIGw9VTtLaj1nO2lmKChVPWspJiYhbClmb3IoVj1lO251bGwhPT1WOylnPVYsaz1nLmNoaWxkLDIyPT09Zy50YWcmJm51bGwhPT1nLm1lbW9pemVkU3RhdGU/a2soZSk6bnVsbCE9PWs/KGsucmV0dXJuPWcsVj1rKTprayhlKTtmb3IoO251bGwhPT1mOylWPWYsamsoZixiLGMpLGY9Zi5zaWJsaW5nO1Y9ZTtLaj1oO1U9bH1sayhhLGIsYyl9ZWxzZSAwIT09KGUuc3VidHJlZUZsYWdzJjg3NzIpJiZudWxsIT09Zj8oZi5yZXR1cm49ZSxWPWYpOmxrKGEsYixjKX19XG5mdW5jdGlvbiBsayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZigwIT09KGIuZmxhZ3MmODc3Mikpe3ZhciBjPWIuYWx0ZXJuYXRlO3RyeXtpZigwIT09KGIuZmxhZ3MmODc3Mikpc3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlV8fFJqKDUsYik7YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKGIuZmxhZ3MmNCYmIVUpaWYobnVsbD09PWMpZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGU9Yi5lbGVtZW50VHlwZT09PWIudHlwZT9jLm1lbW9pemVkUHJvcHM6TGcoYi50eXBlLGMubWVtb2l6ZWRQcm9wcyk7ZC5jb21wb25lbnREaWRVcGRhdGUoZSxjLm1lbW9pemVkU3RhdGUsZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGY9Yi51cGRhdGVRdWV1ZTtudWxsIT09ZiYmaWgoYixmLGQpO2JyZWFrO2Nhc2UgMzp2YXIgZz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1nKXtjPW51bGw7aWYobnVsbCE9PWIuY2hpbGQpc3dpdGNoKGIuY2hpbGQudGFnKXtjYXNlIDU6Yz1cbmIuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpjPWIuY2hpbGQuc3RhdGVOb2RlfWloKGIsZyxjKX1icmVhaztjYXNlIDU6dmFyIGg9Yi5zdGF0ZU5vZGU7aWYobnVsbD09PWMmJmIuZmxhZ3MmNCl7Yz1oO3ZhciBrPWIubWVtb2l6ZWRQcm9wcztzd2l0Y2goYi50eXBlKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmsuYXV0b0ZvY3VzJiZjLmZvY3VzKCk7YnJlYWs7Y2FzZSBcImltZ1wiOmsuc3JjJiYoYy5zcmM9ay5zcmMpfX1icmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzppZihudWxsPT09Yi5tZW1vaXplZFN0YXRlKXt2YXIgbD1iLmFsdGVybmF0ZTtpZihudWxsIT09bCl7dmFyIG09bC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKXt2YXIgcT1tLmRlaHlkcmF0ZWQ7bnVsbCE9PXEmJmJkKHEpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjE6Y2FzZSAyMjpjYXNlIDIzOmNhc2UgMjU6YnJlYWs7XG5kZWZhdWx0OnRocm93IEVycm9yKHAoMTYzKSk7fVV8fGIuZmxhZ3MmNTEyJiZTaihiKX1jYXRjaChyKXtXKGIsYi5yZXR1cm4scil9fWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9Yz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1Y9YzticmVha31WPWIucmV0dXJufX1mdW5jdGlvbiBoayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZihiPT09YSl7Vj1udWxsO2JyZWFrfXZhciBjPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47Vj1jO2JyZWFrfVY9Yi5yZXR1cm59fVxuZnVuY3Rpb24ga2soYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7dHJ5e3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp2YXIgYz1iLnJldHVybjt0cnl7UmooNCxiKX1jYXRjaChrKXtXKGIsYyxrKX1icmVhaztjYXNlIDE6dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQpe3ZhciBlPWIucmV0dXJuO3RyeXtkLmNvbXBvbmVudERpZE1vdW50KCl9Y2F0Y2goayl7VyhiLGUsayl9fXZhciBmPWIucmV0dXJuO3RyeXtTaihiKX1jYXRjaChrKXtXKGIsZixrKX1icmVhaztjYXNlIDU6dmFyIGc9Yi5yZXR1cm47dHJ5e1NqKGIpfWNhdGNoKGspe1coYixnLGspfX19Y2F0Y2goayl7VyhiLGIucmV0dXJuLGspfWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9dmFyIGg9Yi5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1iLnJldHVybjtWPWg7YnJlYWt9Vj1iLnJldHVybn19XG52YXIgbWs9TWF0aC5jZWlsLG5rPXVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsb2s9dWEuUmVhY3RDdXJyZW50T3duZXIscGs9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsSz0wLFI9bnVsbCxZPW51bGwsWj0wLGdqPTAsZmo9VWYoMCksVD0wLHFrPW51bGwsaGg9MCxyaz0wLHNrPTAsdGs9bnVsbCx1az1udWxsLGdrPTAsSGo9SW5maW5pdHksdms9bnVsbCxQaT0hMSxRaT1udWxsLFNpPW51bGwsd2s9ITEseGs9bnVsbCx5az0wLHprPTAsQWs9bnVsbCxCaz0tMSxDaz0wO2Z1bmN0aW9uIEwoKXtyZXR1cm4gMCE9PShLJjYpP0IoKTotMSE9PUJrP0JrOkJrPUIoKX1cbmZ1bmN0aW9uIGxoKGEpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiAxO2lmKDAhPT0oSyYyKSYmMCE9PVopcmV0dXJuIFomLVo7aWYobnVsbCE9PUtnLnRyYW5zaXRpb24pcmV0dXJuIDA9PT1DayYmKENrPXljKCkpLENrO2E9QztpZigwIT09YSlyZXR1cm4gYTthPXdpbmRvdy5ldmVudDthPXZvaWQgMD09PWE/MTY6amQoYS50eXBlKTtyZXR1cm4gYX1mdW5jdGlvbiBtaChhLGIsYyxkKXtpZig1MDx6ayl0aHJvdyB6az0wLEFrPW51bGwsRXJyb3IocCgxODUpKTtBYyhhLGMsZCk7aWYoMD09PShLJjIpfHxhIT09UilhPT09UiYmKDA9PT0oSyYyKSYmKHJrfD1jKSw0PT09VCYmRGsoYSxaKSksRWsoYSxkKSwxPT09YyYmMD09PUsmJjA9PT0oYi5tb2RlJjEpJiYoSGo9QigpKzUwMCxmZyYmamcoKSl9XG5mdW5jdGlvbiBFayhhLGIpe3ZhciBjPWEuY2FsbGJhY2tOb2RlO3djKGEsYik7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKW51bGwhPT1jJiZiYyhjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wO2Vsc2UgaWYoYj1kJi1kLGEuY2FsbGJhY2tQcmlvcml0eSE9PWIpe251bGwhPWMmJmJjKGMpO2lmKDE9PT1iKTA9PT1hLnRhZz9pZyhGay5iaW5kKG51bGwsYSkpOmhnKEZrLmJpbmQobnVsbCxhKSksSmYoZnVuY3Rpb24oKXswPT09KEsmNikmJmpnKCl9KSxjPW51bGw7ZWxzZXtzd2l0Y2goRGMoZCkpe2Nhc2UgMTpjPWZjO2JyZWFrO2Nhc2UgNDpjPWdjO2JyZWFrO2Nhc2UgMTY6Yz1oYzticmVhaztjYXNlIDUzNjg3MDkxMjpjPWpjO2JyZWFrO2RlZmF1bHQ6Yz1oY31jPUdrKGMsSGsuYmluZChudWxsLGEpKX1hLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIEhrKGEsYil7Qms9LTE7Q2s9MDtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTt2YXIgYz1hLmNhbGxiYWNrTm9kZTtpZihJaygpJiZhLmNhbGxiYWNrTm9kZSE9PWMpcmV0dXJuIG51bGw7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKXJldHVybiBudWxsO2lmKDAhPT0oZCYzMCl8fDAhPT0oZCZhLmV4cGlyZWRMYW5lcyl8fGIpYj1KayhhLGQpO2Vsc2V7Yj1kO3ZhciBlPUs7S3w9Mjt2YXIgZj1LaygpO2lmKFIhPT1hfHxaIT09Yil2az1udWxsLEhqPUIoKSs1MDAsTGsoYSxiKTtkbyB0cnl7TWsoKTticmVha31jYXRjaChoKXtOayhhLGgpfXdoaWxlKDEpO1FnKCk7bmsuY3VycmVudD1mO0s9ZTtudWxsIT09WT9iPTA6KFI9bnVsbCxaPTAsYj1UKX1pZigwIT09Yil7Mj09PWImJihlPXhjKGEpLDAhPT1lJiYoZD1lLGI9T2soYSxlKSkpO2lmKDE9PT1iKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGQpLEVrKGEsQigpKSxjO2lmKDY9PT1iKURrKGEsZCk7XG5lbHNle2U9YS5jdXJyZW50LmFsdGVybmF0ZTtpZigwPT09KGQmMzApJiYhUGsoZSkmJihiPUprKGEsZCksMj09PWImJihmPXhjKGEpLDAhPT1mJiYoZD1mLGI9T2soYSxmKSkpLDE9PT1iKSl0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxkKSxFayhhLEIoKSksYzthLmZpbmlzaGVkV29yaz1lO2EuZmluaXNoZWRMYW5lcz1kO3N3aXRjaChiKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHAoMzQ1KSk7Y2FzZSAyOlFrKGEsdWssdmspO2JyZWFrO2Nhc2UgMzpEayhhLGQpO2lmKChkJjEzMDAyMzQyNCk9PT1kJiYoYj1nays1MDAtQigpLDEwPGIpKXtpZigwIT09dWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmZCkhPT1kKXtMKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1GZihRay5iaW5kKG51bGwsYSx1ayx2ayksYik7YnJlYWt9UWsoYSx1ayx2ayk7YnJlYWs7Y2FzZSA0OkRrKGEsZCk7aWYoKGQmNDE5NDI0MCk9PT1cbmQpYnJlYWs7Yj1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxkOyl7dmFyIGc9MzEtb2MoZCk7Zj0xPDxnO2c9YltnXTtnPmUmJihlPWcpO2QmPX5mfWQ9ZTtkPUIoKS1kO2Q9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqbWsoZC8xOTYwKSktZDtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9RmYoUWsuYmluZChudWxsLGEsdWssdmspLGQpO2JyZWFrfVFrKGEsdWssdmspO2JyZWFrO2Nhc2UgNTpRayhhLHVrLHZrKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzI5KSk7fX19RWsoYSxCKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWM/SGsuYmluZChudWxsLGEpOm51bGx9XG5mdW5jdGlvbiBPayhhLGIpe3ZhciBjPXRrO2EuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmKExrKGEsYikuZmxhZ3N8PTI1Nik7YT1KayhhLGIpOzIhPT1hJiYoYj11ayx1az1jLG51bGwhPT1iJiZHaihiKSk7cmV0dXJuIGF9ZnVuY3Rpb24gR2ooYSl7bnVsbD09PXVrP3VrPWE6dWsucHVzaC5hcHBseSh1ayxhKX1cbmZ1bmN0aW9uIFBrKGEpe2Zvcih2YXIgYj1hOzspe2lmKGIuZmxhZ3MmMTYzODQpe3ZhciBjPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMmJihjPWMuc3RvcmVzLG51bGwhPT1jKSlmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXSxmPWUuZ2V0U25hcHNob3Q7ZT1lLnZhbHVlO3RyeXtpZighSGUoZigpLGUpKXJldHVybiExfWNhdGNoKGcpe3JldHVybiExfX19Yz1iLmNoaWxkO2lmKGIuc3VidHJlZUZsYWdzJjE2Mzg0JiZudWxsIT09YyljLnJldHVybj1iLGI9YztlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiEwO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuITB9XG5mdW5jdGlvbiBEayhhLGIpe2ImPX5zaztiJj1+cms7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1vYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19ZnVuY3Rpb24gRmsoYSl7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7SWsoKTt2YXIgYj11YyhhLDApO2lmKDA9PT0oYiYxKSlyZXR1cm4gRWsoYSxCKCkpLG51bGw7dmFyIGM9SmsoYSxiKTtpZigwIT09YS50YWcmJjI9PT1jKXt2YXIgZD14YyhhKTswIT09ZCYmKGI9ZCxjPU9rKGEsZCkpfWlmKDE9PT1jKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGIpLEVrKGEsQigpKSxjO2lmKDY9PT1jKXRocm93IEVycm9yKHAoMzQ1KSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtRayhhLHVrLHZrKTtFayhhLEIoKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSayhhLGIpe3ZhciBjPUs7S3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtLPWMsMD09PUsmJihIaj1CKCkrNTAwLGZnJiZqZygpKX19ZnVuY3Rpb24gU2soYSl7bnVsbCE9PXhrJiYwPT09eGsudGFnJiYwPT09KEsmNikmJklrKCk7dmFyIGI9SztLfD0xO3ZhciBjPXBrLnRyYW5zaXRpb24sZD1DO3RyeXtpZihway50cmFuc2l0aW9uPW51bGwsQz0xLGEpcmV0dXJuIGEoKX1maW5hbGx5e0M9ZCxway50cmFuc2l0aW9uPWMsSz1iLDA9PT0oSyY2KSYmamcoKX19ZnVuY3Rpb24gSWooKXtnaj1mai5jdXJyZW50O0UoZmopfVxuZnVuY3Rpb24gTGsoYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsR2YoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yzt3ZyhkKTtzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmJGYoKTticmVhaztjYXNlIDM6SmgoKTtFKFdmKTtFKEgpO09oKCk7YnJlYWs7Y2FzZSA1OkxoKGQpO2JyZWFrO2Nhc2UgNDpKaCgpO2JyZWFrO2Nhc2UgMTM6RShNKTticmVhaztjYXNlIDE5OkUoTSk7YnJlYWs7Y2FzZSAxMDpSZyhkLnR5cGUuX2NvbnRleHQpO2JyZWFrO2Nhc2UgMjI6Y2FzZSAyMzpJaigpfWM9Yy5yZXR1cm59Uj1hO1k9YT13aChhLmN1cnJlbnQsbnVsbCk7Wj1naj1iO1Q9MDtxaz1udWxsO3NrPXJrPWhoPTA7dWs9dGs9bnVsbDtpZihudWxsIT09V2cpe2ZvcihiPVxuMDtiPFdnLmxlbmd0aDtiKyspaWYoYz1XZ1tiXSxkPWMuaW50ZXJsZWF2ZWQsbnVsbCE9PWQpe2MuaW50ZXJsZWF2ZWQ9bnVsbDt2YXIgZT1kLm5leHQsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe3ZhciBnPWYubmV4dDtmLm5leHQ9ZTtkLm5leHQ9Z31jLnBlbmRpbmc9ZH1XZz1udWxsfXJldHVybiBhfVxuZnVuY3Rpb24gTmsoYSxiKXtkb3t2YXIgYz1ZO3RyeXtRZygpO1BoLmN1cnJlbnQ9YWk7aWYoU2gpe2Zvcih2YXIgZD1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fVNoPSExfVJoPTA7UD1PPU49bnVsbDtUaD0hMTtVaD0wO29rLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtUPTE7cWs9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1aO2guZmxhZ3N8PTMyNzY4O2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWssbT1oLHE9bS50YWc7aWYoMD09PShtLm1vZGUmMSkmJigwPT09cXx8MTE9PT1xfHwxNT09PXEpKXt2YXIgcj1tLmFsdGVybmF0ZTtyPyhtLnVwZGF0ZVF1ZXVlPXIudXBkYXRlUXVldWUsbS5tZW1vaXplZFN0YXRlPXIubWVtb2l6ZWRTdGF0ZSxcbm0ubGFuZXM9ci5sYW5lcyk6KG0udXBkYXRlUXVldWU9bnVsbCxtLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIHk9VmkoZyk7aWYobnVsbCE9PXkpe3kuZmxhZ3MmPS0yNTc7V2koeSxnLGgsZixiKTt5Lm1vZGUmMSYmVGkoZixsLGIpO2I9eTtrPWw7dmFyIG49Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09bil7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtiLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBuLmFkZChrKTticmVhayBhfWVsc2V7aWYoMD09PShiJjEpKXtUaShmLGwsYik7dWooKTticmVhayBhfWs9RXJyb3IocCg0MjYpKX19ZWxzZSBpZihJJiZoLm1vZGUmMSl7dmFyIEo9VmkoZyk7aWYobnVsbCE9PUopezA9PT0oSi5mbGFncyY2NTUzNikmJihKLmZsYWdzfD0yNTYpO1dpKEosZyxoLGYsYik7SmcoS2koayxoKSk7YnJlYWsgYX19Zj1rPUtpKGssaCk7NCE9PVQmJihUPTIpO251bGw9PT10az90az1bZl06dGsucHVzaChmKTtmPWc7ZG97c3dpdGNoKGYudGFnKXtjYXNlIDM6Zi5mbGFnc3w9NjU1MzY7XG5iJj0tYjtmLmxhbmVzfD1iO3ZhciB4PU9pKGYsayxiKTtmaChmLHgpO2JyZWFrIGE7Y2FzZSAxOmg9azt2YXIgdz1mLnR5cGUsdT1mLnN0YXRlTm9kZTtpZigwPT09KGYuZmxhZ3MmMTI4KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1LmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKHUpKSkpe2YuZmxhZ3N8PTY1NTM2O2ImPS1iO2YubGFuZXN8PWI7dmFyIEY9UmkoZixoLGIpO2ZoKGYsRik7YnJlYWsgYX19Zj1mLnJldHVybn13aGlsZShudWxsIT09Zil9VGsoYyl9Y2F0Y2gobmEpe2I9bmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1mdW5jdGlvbiBLaygpe3ZhciBhPW5rLmN1cnJlbnQ7bmsuY3VycmVudD1haTtyZXR1cm4gbnVsbD09PWE/YWk6YX1cbmZ1bmN0aW9uIHVqKCl7aWYoMD09PVR8fDM9PT1UfHwyPT09VClUPTQ7bnVsbD09PVJ8fDA9PT0oaGgmMjY4NDM1NDU1KSYmMD09PShyayYyNjg0MzU0NTUpfHxEayhSLFopfWZ1bmN0aW9uIEprKGEsYil7dmFyIGM9SztLfD0yO3ZhciBkPUtrKCk7aWYoUiE9PWF8fFohPT1iKXZrPW51bGwsTGsoYSxiKTtkbyB0cnl7VWsoKTticmVha31jYXRjaChlKXtOayhhLGUpfXdoaWxlKDEpO1FnKCk7Sz1jO25rLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcihwKDI2MSkpO1I9bnVsbDtaPTA7cmV0dXJuIFR9ZnVuY3Rpb24gVWsoKXtmb3IoO251bGwhPT1ZOylWayhZKX1mdW5jdGlvbiBNaygpe2Zvcig7bnVsbCE9PVkmJiFjYygpOylWayhZKX1mdW5jdGlvbiBWayhhKXt2YXIgYj1XayhhLmFsdGVybmF0ZSxhLGdqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/VGsoYSk6WT1iO29rLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFRrKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMzI3NjgpKXtpZihjPUZqKGMsYixnaiksbnVsbCE9PWMpe1k9YztyZXR1cm59fWVsc2V7Yz1KaihjLGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0zMjc2NztZPWM7cmV0dXJufWlmKG51bGwhPT1hKWEuZmxhZ3N8PTMyNzY4LGEuc3VidHJlZUZsYWdzPTAsYS5kZWxldGlvbnM9bnVsbDtlbHNle1Q9NjtZPW51bGw7cmV0dXJufX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVQmJihUPTUpfWZ1bmN0aW9uIFFrKGEsYixjKXt2YXIgZD1DLGU9cGsudHJhbnNpdGlvbjt0cnl7cGsudHJhbnNpdGlvbj1udWxsLEM9MSxYayhhLGIsYyxkKX1maW5hbGx5e3BrLnRyYW5zaXRpb249ZSxDPWR9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBYayhhLGIsYyxkKXtkbyBJaygpO3doaWxlKG51bGwhPT14ayk7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7Yz1hLmZpbmlzaGVkV29yazt2YXIgZT1hLmZpbmlzaGVkTGFuZXM7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHAoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrUHJpb3JpdHk9MDt2YXIgZj1jLmxhbmVzfGMuY2hpbGRMYW5lcztCYyhhLGYpO2E9PT1SJiYoWT1SPW51bGwsWj0wKTswPT09KGMuc3VidHJlZUZsYWdzJjIwNjQpJiYwPT09KGMuZmxhZ3MmMjA2NCl8fHdrfHwod2s9ITAsR2soaGMsZnVuY3Rpb24oKXtJaygpO3JldHVybiBudWxsfSkpO2Y9MCE9PShjLmZsYWdzJjE1OTkwKTtpZigwIT09KGMuc3VidHJlZUZsYWdzJjE1OTkwKXx8Zil7Zj1way50cmFuc2l0aW9uO3BrLnRyYW5zaXRpb249bnVsbDtcbnZhciBnPUM7Qz0xO3ZhciBoPUs7S3w9NDtvay5jdXJyZW50PW51bGw7UGooYSxjKTtlayhjLGEpO09lKERmKTtkZD0hIUNmO0RmPUNmPW51bGw7YS5jdXJyZW50PWM7aWsoYyxhLGUpO2RjKCk7Sz1oO0M9Zztway50cmFuc2l0aW9uPWZ9ZWxzZSBhLmN1cnJlbnQ9Yzt3ayYmKHdrPSExLHhrPWEseWs9ZSk7Zj1hLnBlbmRpbmdMYW5lczswPT09ZiYmKFNpPW51bGwpO21jKGMuc3RhdGVOb2RlLGQpO0VrKGEsQigpKTtpZihudWxsIT09Yilmb3IoZD1hLm9uUmVjb3ZlcmFibGVFcnJvcixjPTA7YzxiLmxlbmd0aDtjKyspZT1iW2NdLGQoZS52YWx1ZSx7Y29tcG9uZW50U3RhY2s6ZS5zdGFjayxkaWdlc3Q6ZS5kaWdlc3R9KTtpZihQaSl0aHJvdyBQaT0hMSxhPVFpLFFpPW51bGwsYTswIT09KHlrJjEpJiYwIT09YS50YWcmJklrKCk7Zj1hLnBlbmRpbmdMYW5lczswIT09KGYmMSk/YT09PUFrP3prKys6KHprPTAsQWs9YSk6ems9MDtqZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gSWsoKXtpZihudWxsIT09eGspe3ZhciBhPURjKHlrKSxiPXBrLnRyYW5zaXRpb24sYz1DO3RyeXtway50cmFuc2l0aW9uPW51bGw7Qz0xNj5hPzE2OmE7aWYobnVsbD09PXhrKXZhciBkPSExO2Vsc2V7YT14azt4az1udWxsO3lrPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzMxKSk7dmFyIGU9SztLfD00O2ZvcihWPWEuY3VycmVudDtudWxsIT09Vjspe3ZhciBmPVYsZz1mLmNoaWxkO2lmKDAhPT0oVi5mbGFncyYxNikpe3ZhciBoPWYuZGVsZXRpb25zO2lmKG51bGwhPT1oKXtmb3IodmFyIGs9MDtrPGgubGVuZ3RoO2srKyl7dmFyIGw9aFtrXTtmb3IoVj1sO251bGwhPT1WOyl7dmFyIG09Vjtzd2l0Y2gobS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UWooOCxtLGYpfXZhciBxPW0uY2hpbGQ7aWYobnVsbCE9PXEpcS5yZXR1cm49bSxWPXE7ZWxzZSBmb3IoO251bGwhPT1WOyl7bT1WO3ZhciByPW0uc2libGluZyx5PW0ucmV0dXJuO1RqKG0pO2lmKG09PT1cbmwpe1Y9bnVsbDticmVha31pZihudWxsIT09cil7ci5yZXR1cm49eTtWPXI7YnJlYWt9Vj15fX19dmFyIG49Zi5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe3ZhciB0PW4uY2hpbGQ7aWYobnVsbCE9PXQpe24uY2hpbGQ9bnVsbDtkb3t2YXIgSj10LnNpYmxpbmc7dC5zaWJsaW5nPW51bGw7dD1KfXdoaWxlKG51bGwhPT10KX19Vj1mfX1pZigwIT09KGYuc3VidHJlZUZsYWdzJjIwNjQpJiZudWxsIT09ZylnLnJldHVybj1mLFY9ZztlbHNlIGI6Zm9yKDtudWxsIT09Vjspe2Y9VjtpZigwIT09KGYuZmxhZ3MmMjA0OCkpc3dpdGNoKGYudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlFqKDksZixmLnJldHVybil9dmFyIHg9Zi5zaWJsaW5nO2lmKG51bGwhPT14KXt4LnJldHVybj1mLnJldHVybjtWPXg7YnJlYWsgYn1WPWYucmV0dXJufX12YXIgdz1hLmN1cnJlbnQ7Zm9yKFY9dztudWxsIT09Vjspe2c9Vjt2YXIgdT1nLmNoaWxkO2lmKDAhPT0oZy5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1cbnUpdS5yZXR1cm49ZyxWPXU7ZWxzZSBiOmZvcihnPXc7bnVsbCE9PVY7KXtoPVY7aWYoMCE9PShoLmZsYWdzJjIwNDgpKXRyeXtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UmooOSxoKX19Y2F0Y2gobmEpe1coaCxoLnJldHVybixuYSl9aWYoaD09PWcpe1Y9bnVsbDticmVhayBifXZhciBGPWguc2libGluZztpZihudWxsIT09Ril7Ri5yZXR1cm49aC5yZXR1cm47Vj1GO2JyZWFrIGJ9Vj1oLnJldHVybn19Sz1lO2pnKCk7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vblBvc3RDb21taXRGaWJlclJvb3QpdHJ5e2xjLm9uUG9zdENvbW1pdEZpYmVyUm9vdChrYyxhKX1jYXRjaChuYSl7fWQ9ITB9cmV0dXJuIGR9ZmluYWxseXtDPWMscGsudHJhbnNpdGlvbj1ifX1yZXR1cm4hMX1mdW5jdGlvbiBZayhhLGIsYyl7Yj1LaShjLGIpO2I9T2koYSxiLDEpO2E9ZGgoYSxiLDEpO2I9TCgpO251bGwhPT1hJiYoQWMoYSwxLGIpLEVrKGEsYikpfVxuZnVuY3Rpb24gVyhhLGIsYyl7aWYoMz09PWEudGFnKVlrKGEsYSxjKTtlbHNlIGZvcig7bnVsbCE9PWI7KXtpZigzPT09Yi50YWcpe1lrKGIsYSxjKTticmVha31lbHNlIGlmKDE9PT1iLnRhZyl7dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKGQpKSl7YT1LaShjLGEpO2E9UmkoYixhLDEpO2I9ZGgoYixhLDEpO2E9TCgpO251bGwhPT1iJiYoQWMoYiwxLGEpLEVrKGIsYSkpO2JyZWFrfX1iPWIucmV0dXJufX1cbmZ1bmN0aW9uIFVpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1MKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1I9PT1hJiYoWiZjKT09PWMmJig0PT09VHx8Mz09PVQmJihaJjEzMDAyMzQyNCk9PT1aJiY1MDA+QigpLWdrP0xrKGEsMCk6c2t8PWMpO0VrKGEsYil9ZnVuY3Rpb24gWmsoYSxiKXswPT09YiYmKDA9PT0oYS5tb2RlJjEpP2I9MTooYj1zYyxzYzw8PTEsMD09PShzYyYxMzAwMjM0MjQpJiYoc2M9NDE5NDMwNCkpKTt2YXIgYz1MKCk7YT1aZyhhLGIpO251bGwhPT1hJiYoQWMoYSxiLGMpLEVrKGEsYykpfWZ1bmN0aW9uIHZqKGEpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZSxjPTA7bnVsbCE9PWImJihjPWIucmV0cnlMYW5lKTtaayhhLGMpfVxuZnVuY3Rpb24gY2soYSxiKXt2YXIgYz0wO3N3aXRjaChhLnRhZyl7Y2FzZSAxMzp2YXIgZD1hLnN0YXRlTm9kZTt2YXIgZT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihjPWUucmV0cnlMYW5lKTticmVhaztjYXNlIDE5OmQ9YS5zdGF0ZU5vZGU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDMxNCkpO31udWxsIT09ZCYmZC5kZWxldGUoYik7WmsoYSxjKX12YXIgV2s7XG5Xaz1mdW5jdGlvbihhLGIsYyl7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fFdmLmN1cnJlbnQpVWc9ITA7ZWxzZXtpZigwPT09KGEubGFuZXMmYykmJjA9PT0oYi5mbGFncyYxMjgpKXJldHVybiBVZz0hMSx6aihhLGIsYyk7VWc9MCE9PShhLmZsYWdzJjEzMTA3Mik/ITA6ITF9ZWxzZSBVZz0hMSxJJiYwIT09KGIuZmxhZ3MmMTA0ODU3NikmJnVnKGIsbmcsYi5pbmRleCk7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOnZhciBkPWIudHlwZTtqaihhLGIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9WWYoYixILmN1cnJlbnQpO1RnKGIsYyk7ZT1YaChudWxsLGIsZCxhLGUsYyk7dmFyIGY9YmkoKTtiLmZsYWdzfD0xO1wib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZj8oYi50YWc9MSxiLm1lbW9pemVkU3RhdGU9bnVsbCxiLnVwZGF0ZVF1ZXVlPVxubnVsbCxaZihkKT8oZj0hMCxjZyhiKSk6Zj0hMSxiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsLGFoKGIpLGUudXBkYXRlcj1uaCxiLnN0YXRlTm9kZT1lLGUuX3JlYWN0SW50ZXJuYWxzPWIscmgoYixkLGEsYyksYj1raihudWxsLGIsZCwhMCxmLGMpKTooYi50YWc9MCxJJiZmJiZ2ZyhiKSxZaShudWxsLGIsZSxjKSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgMTY6ZD1iLmVsZW1lbnRUeXBlO2E6e2pqKGEsYik7YT1iLnBlbmRpbmdQcm9wcztlPWQuX2luaXQ7ZD1lKGQuX3BheWxvYWQpO2IudHlwZT1kO2U9Yi50YWc9JGsoZCk7YT1MZyhkLGEpO3N3aXRjaChlKXtjYXNlIDA6Yj1kaihudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9aWoobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaShudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFqKG51bGwsYixkLExnKGQudHlwZSxhKSxjKTticmVhayBhfXRocm93IEVycm9yKHAoMzA2LFxuZCxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxkaihhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxpaihhLGIsZCxlLGMpO2Nhc2UgMzphOntsaihiKTtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDM4NykpO2Q9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkU3RhdGU7ZT1mLmVsZW1lbnQ7YmgoYSxiKTtnaChiLGQsbnVsbCxjKTt2YXIgZz1iLm1lbW9pemVkU3RhdGU7ZD1nLmVsZW1lbnQ7aWYoZi5pc0RlaHlkcmF0ZWQpaWYoZj17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDohMSxjYWNoZTpnLmNhY2hlLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6Zy5wZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzLHRyYW5zaXRpb25zOmcudHJhbnNpdGlvbnN9LGIudXBkYXRlUXVldWUuYmFzZVN0YXRlPVxuZixiLm1lbW9pemVkU3RhdGU9ZixiLmZsYWdzJjI1Nil7ZT1LaShFcnJvcihwKDQyMykpLGIpO2I9bWooYSxiLGQsYyxlKTticmVhayBhfWVsc2UgaWYoZCE9PWUpe2U9S2koRXJyb3IocCg0MjQpKSxiKTtiPW1qKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGZvcih5Zz1MZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLHhnPWIsST0hMCx6Zz1udWxsLGM9Q2goYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3w0MDk2LGM9Yy5zaWJsaW5nO2Vsc2V7SWcoKTtpZihkPT09ZSl7Yj0kaShhLGIsYyk7YnJlYWsgYX1ZaShhLGIsZCxjKX1iPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBLaChiKSxudWxsPT09YSYmRWcoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixFZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmRWYoZCxmKSYmKGIuZmxhZ3N8PTMyKSxcbmhqKGEsYiksWWkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZFZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHBqKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPUJoKGIsbnVsbCxkLGMpOllpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxaaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkUHJvcHM7XG5nPWUudmFsdWU7RyhNZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1nO2lmKG51bGwhPT1mKWlmKEhlKGYudmFsdWUsZykpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhV2YuY3VycmVudCl7Yj0kaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoZj1iLmNoaWxkLG51bGwhPT1mJiYoZi5yZXR1cm49Yik7bnVsbCE9PWY7KXt2YXIgaD1mLmRlcGVuZGVuY2llcztpZihudWxsIT09aCl7Zz1mLmNoaWxkO2Zvcih2YXIgaz1oLmZpcnN0Q29udGV4dDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQpe2lmKDE9PT1mLnRhZyl7az1jaCgtMSxjJi1jKTtrLnRhZz0yO3ZhciBsPWYudXBkYXRlUXVldWU7aWYobnVsbCE9PWwpe2w9bC5zaGFyZWQ7dmFyIG09bC5wZW5kaW5nO251bGw9PT1tP2submV4dD1rOihrLm5leHQ9bS5uZXh0LG0ubmV4dD1rKTtsLnBlbmRpbmc9a319Zi5sYW5lc3w9YztrPWYuYWx0ZXJuYXRlO251bGwhPT1rJiYoay5sYW5lc3w9Yyk7U2coZi5yZXR1cm4sXG5jLGIpO2gubGFuZXN8PWM7YnJlYWt9az1rLm5leHR9fWVsc2UgaWYoMTA9PT1mLnRhZylnPWYudHlwZT09PWIudHlwZT9udWxsOmYuY2hpbGQ7ZWxzZSBpZigxOD09PWYudGFnKXtnPWYucmV0dXJuO2lmKG51bGw9PT1nKXRocm93IEVycm9yKHAoMzQxKSk7Zy5sYW5lc3w9YztoPWcuYWx0ZXJuYXRlO251bGwhPT1oJiYoaC5sYW5lc3w9Yyk7U2coZyxjLGIpO2c9Zi5zaWJsaW5nfWVsc2UgZz1mLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWY7ZWxzZSBmb3IoZz1mO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31mPWcuc2libGluZztpZihudWxsIT09Zil7Zi5yZXR1cm49Zy5yZXR1cm47Zz1mO2JyZWFrfWc9Zy5yZXR1cm59Zj1nfVlpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGQ9Yi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sVGcoYixjKSxlPVZnKGUpLGQ9ZChlKSxiLmZsYWdzfD0xLFlpKGEsYixkLGMpLFxuYi5jaGlsZDtjYXNlIDE0OnJldHVybiBkPWIudHlwZSxlPUxnKGQsYi5wZW5kaW5nUHJvcHMpLGU9TGcoZC50eXBlLGUpLGFqKGEsYixkLGUsYyk7Y2FzZSAxNTpyZXR1cm4gY2ooYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMZyhkLGUpLGpqKGEsYiksYi50YWc9MSxaZihkKT8oYT0hMCxjZyhiKSk6YT0hMSxUZyhiLGMpLHBoKGIsZCxlKSxyaChiLGQsZSxjKSxraihudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIHlqKGEsYixjKTtjYXNlIDIyOnJldHVybiBlaihhLGIsYyl9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9O2Z1bmN0aW9uIEdrKGEsYil7cmV0dXJuIGFjKGEsYil9XG5mdW5jdGlvbiBhbChhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuc3VidHJlZUZsYWdzPXRoaXMuZmxhZ3M9MDt0aGlzLmRlbGV0aW9ucz1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBCZyhhLGIsYyxkKXtyZXR1cm4gbmV3IGFsKGEsYixjLGQpfWZ1bmN0aW9uIGJqKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiAkayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmooYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PURhKXJldHVybiAxMTtpZihhPT09R2EpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gd2goYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1CZyhhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLnN1YnRyZWVGbGFncz0wLGMuZGVsZXRpb25zPW51bGwpO2MuZmxhZ3M9YS5mbGFncyYxNDY4MDA2NDtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24geWgoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJqKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHlhOnJldHVybiBBaChjLmNoaWxkcmVuLGUsZixiKTtjYXNlIHphOmc9ODtlfD04O2JyZWFrO2Nhc2UgQWE6cmV0dXJuIGE9QmcoMTIsYyxiLGV8MiksYS5lbGVtZW50VHlwZT1BYSxhLmxhbmVzPWYsYTtjYXNlIEVhOnJldHVybiBhPUJnKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPUVhLGEubGFuZXM9ZixhO2Nhc2UgRmE6cmV0dXJuIGE9QmcoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9RmEsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gcWooYyxlLGYsYik7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIEJhOmc9MTA7YnJlYWsgYTtjYXNlIENhOmc9OTticmVhayBhO2Nhc2UgRGE6Zz0xMTtcbmJyZWFrIGE7Y2FzZSBHYTpnPTE0O2JyZWFrIGE7Y2FzZSBIYTpnPTE2O2Q9bnVsbDticmVhayBhfXRocm93IEVycm9yKHAoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9QmcoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBBaChhLGIsYyxkKXthPUJnKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBxaihhLGIsYyxkKXthPUJnKDIyLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YzthLnN0YXRlTm9kZT17aXNIaWRkZW46ITF9O3JldHVybiBhfWZ1bmN0aW9uIHhoKGEsYixjKXthPUJnKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIHpoKGEsYixjKXtiPUJnKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYmwoYSxiLGMsZCxlKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLmNhbGxiYWNrTm9kZT10aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz16YygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz16YygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz16YygwKTt0aGlzLmlkZW50aWZpZXJQcmVmaXg9ZDt0aGlzLm9uUmVjb3ZlcmFibGVFcnJvcj1lO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1cbm51bGx9ZnVuY3Rpb24gY2woYSxiLGMsZCxlLGYsZyxoLGspe2E9bmV3IGJsKGEsYixjLGgsayk7MT09PWI/KGI9MSwhMD09PWYmJihifD04KSk6Yj0wO2Y9QmcoMyxudWxsLG51bGwsYik7YS5jdXJyZW50PWY7Zi5zdGF0ZU5vZGU9YTtmLm1lbW9pemVkU3RhdGU9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6YyxjYWNoZTpudWxsLHRyYW5zaXRpb25zOm51bGwscGVuZGluZ1N1c3BlbnNlQm91bmRhcmllczpudWxsfTthaChmKTtyZXR1cm4gYX1mdW5jdGlvbiBkbChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOndhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gZWwoYSl7aWYoIWEpcmV0dXJuIFZmO2E9YS5fcmVhY3RJbnRlcm5hbHM7YTp7aWYoVmIoYSkhPT1hfHwxIT09YS50YWcpdGhyb3cgRXJyb3IocCgxNzApKTt2YXIgYj1hO2Rve3N3aXRjaChiLnRhZyl7Y2FzZSAzOmI9Yi5zdGF0ZU5vZGUuY29udGV4dDticmVhayBhO2Nhc2UgMTppZihaZihiLnR5cGUpKXtiPWIuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGF9fWI9Yi5yZXR1cm59d2hpbGUobnVsbCE9PWIpO3Rocm93IEVycm9yKHAoMTcxKSk7fWlmKDE9PT1hLnRhZyl7dmFyIGM9YS50eXBlO2lmKFpmKGMpKXJldHVybiBiZyhhLGMsYil9cmV0dXJuIGJ9XG5mdW5jdGlvbiBmbChhLGIsYyxkLGUsZixnLGgsayl7YT1jbChjLGQsITAsYSxlLGYsZyxoLGspO2EuY29udGV4dD1lbChudWxsKTtjPWEuY3VycmVudDtkPUwoKTtlPWxoKGMpO2Y9Y2goZCxlKTtmLmNhbGxiYWNrPXZvaWQgMCE9PWImJm51bGwhPT1iP2I6bnVsbDtkaChjLGYsZSk7YS5jdXJyZW50LmxhbmVzPWU7QWMoYSxlLGQpO0VrKGEsZCk7cmV0dXJuIGF9ZnVuY3Rpb24gZ2woYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9TCgpLGc9bGgoZSk7Yz1lbChjKTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWNoKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO2E9ZGgoZSxiLGcpO251bGwhPT1hJiYobWgoYSxlLGcsZiksZWgoYSxlLGcpKTtyZXR1cm4gZ31cbmZ1bmN0aW9uIGhsKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gaWwoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIGpsKGEsYil7aWwoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmlsKGEsYil9ZnVuY3Rpb24ga2woKXtyZXR1cm4gbnVsbH12YXIgbGw9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcG9ydEVycm9yP3JlcG9ydEVycm9yOmZ1bmN0aW9uKGEpe2NvbnNvbGUuZXJyb3IoYSl9O2Z1bmN0aW9uIG1sKGEpe3RoaXMuX2ludGVybmFsUm9vdD1hfVxubmwucHJvdG90eXBlLnJlbmRlcj1tbC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsPT09Yil0aHJvdyBFcnJvcihwKDQwOSkpO2dsKGEsYixudWxsLG51bGwpfTtubC5wcm90b3R5cGUudW5tb3VudD1tbC5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsIT09YSl7dGhpcy5faW50ZXJuYWxSb290PW51bGw7dmFyIGI9YS5jb250YWluZXJJbmZvO1NrKGZ1bmN0aW9uKCl7Z2wobnVsbCxhLG51bGwsbnVsbCl9KTtiW3VmXT1udWxsfX07ZnVuY3Rpb24gbmwoYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5ubC5wcm90b3R5cGUudW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb249ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9SGMoKTthPXtibG9ja2VkT246bnVsbCx0YXJnZXQ6YSxwcmlvcml0eTpifTtmb3IodmFyIGM9MDtjPFFjLmxlbmd0aCYmMCE9PWImJmI8UWNbY10ucHJpb3JpdHk7YysrKTtRYy5zcGxpY2UoYywwLGEpOzA9PT1jJiZWYyhhKX19O2Z1bmN0aW9uIG9sKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlKX1mdW5jdGlvbiBwbChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gcWwoKXt9XG5mdW5jdGlvbiBybChhLGIsYyxkLGUpe2lmKGUpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZj1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtmLmNhbGwoYSl9fXZhciBnPWZsKGIsZCxhLDAsbnVsbCwhMSwhMSxcIlwiLHFsKTthLl9yZWFjdFJvb3RDb250YWluZXI9ZzthW3VmXT1nLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO1NrKCk7cmV0dXJuIGd9Zm9yKDtlPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGUpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgaD1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChrKTtoLmNhbGwoYSl9fXZhciBrPWNsKGEsMCwhMSxudWxsLG51bGwsITEsITEsXCJcIixxbCk7YS5fcmVhY3RSb290Q29udGFpbmVyPWs7YVt1Zl09ay5jdXJyZW50O3NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtTayhmdW5jdGlvbigpe2dsKGIsayxjLGQpfSk7cmV0dXJuIGt9XG5mdW5jdGlvbiBzbChhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtoLmNhbGwoYSl9fWdsKGIsZyxhLGUpfWVsc2UgZz1ybChjLGIsYSxlLGQpO3JldHVybiBobChnKX1FYz1mdW5jdGlvbihhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMzp2YXIgYj1hLnN0YXRlTm9kZTtpZihiLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe3ZhciBjPXRjKGIucGVuZGluZ0xhbmVzKTswIT09YyYmKENjKGIsY3wxKSxFayhiLEIoKSksMD09PShLJjYpJiYoSGo9QigpKzUwMCxqZygpKSl9YnJlYWs7Y2FzZSAxMzpTayhmdW5jdGlvbigpe3ZhciBiPVpnKGEsMSk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMSxjKX19KSxqbChhLDEpfX07XG5GYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1aZyhhLDEzNDIxNzcyOCk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMTM0MjE3NzI4LGMpfWpsKGEsMTM0MjE3NzI4KX19O0djPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWxoKGEpLGM9WmcoYSxiKTtpZihudWxsIT09Yyl7dmFyIGQ9TCgpO21oKGMsYSxiLGQpfWpsKGEsYil9fTtIYz1mdW5jdGlvbigpe3JldHVybiBDfTtJYz1mdW5jdGlvbihhLGIpe3ZhciBjPUM7dHJ5e3JldHVybiBDPWEsYigpfWZpbmFsbHl7Qz1jfX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmJiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcihwKDkwKSk7V2EoZCk7YmIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVJrO0hiPVNrO1xudmFyIHRsPXt1c2luZ0NsaWVudEVudHJ5UG9pbnQ6ITEsRXZlbnRzOltDYix1ZSxEYixFYixGYixSa119LHVsPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpXYyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE4LjIuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgdmw9e2J1bmRsZVR5cGU6dWwuYnVuZGxlVHlwZSx2ZXJzaW9uOnVsLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp1bC5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOnVsLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRFcnJvckhhbmRsZXI6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1aYihhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dWwuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxua2wsZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbCxyZWNvbmNpbGVyVmVyc2lvbjpcIjE4LjIuMC1uZXh0LTllM2I3NzJiOC0yMDIyMDYwOFwifTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHdsPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZighd2wuaXNEaXNhYmxlZCYmd2wuc3VwcG9ydHNGaWJlcil0cnl7a2M9d2wuaW5qZWN0KHZsKSxsYz13bH1jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dGw7XG5leHBvcnRzLmNyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFvbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBkbChhLGIsbnVsbCxjKX07ZXhwb3J0cy5jcmVhdGVSb290PWZ1bmN0aW9uKGEsYil7aWYoIW9sKGEpKXRocm93IEVycm9yKHAoMjk5KSk7dmFyIGM9ITEsZD1cIlwiLGU9bGw7bnVsbCE9PWImJnZvaWQgMCE9PWImJighMD09PWIudW5zdGFibGVfc3RyaWN0TW9kZSYmKGM9ITApLHZvaWQgMCE9PWIuaWRlbnRpZmllclByZWZpeCYmKGQ9Yi5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1iLm9uUmVjb3ZlcmFibGVFcnJvciYmKGU9Yi5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWNsKGEsMSwhMSxudWxsLG51bGwsYywhMSxkLGUpO2FbdWZdPWIuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7cmV0dXJuIG5ldyBtbChiKX07XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHAoMTg4KSk7YT1PYmplY3Qua2V5cyhhKS5qb2luKFwiLFwiKTt0aHJvdyBFcnJvcihwKDI2OCxhKSk7fWE9WmIoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhKXtyZXR1cm4gU2soYSl9O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMuaHlkcmF0ZVJvb3Q9ZnVuY3Rpb24oYSxiLGMpe2lmKCFvbChhKSl0aHJvdyBFcnJvcihwKDQwNSkpO3ZhciBkPW51bGwhPWMmJmMuaHlkcmF0ZWRTb3VyY2VzfHxudWxsLGU9ITEsZj1cIlwiLGc9bGw7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJighMD09PWMudW5zdGFibGVfc3RyaWN0TW9kZSYmKGU9ITApLHZvaWQgMCE9PWMuaWRlbnRpZmllclByZWZpeCYmKGY9Yy5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1jLm9uUmVjb3ZlcmFibGVFcnJvciYmKGc9Yy5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWZsKGIsbnVsbCxhLDEsbnVsbCE9Yz9jOm51bGwsZSwhMSxmLGcpO2FbdWZdPWIuY3VycmVudDtzZihhKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspYz1kW2FdLGU9Yy5fZ2V0VmVyc2lvbixlPWUoYy5fc291cmNlKSxudWxsPT1iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtjLGVdOmIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGMsXG5lKTtyZXR1cm4gbmV3IG5sKGIpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXBsKGEpKXRocm93IEVycm9yKHAoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhTayhmdW5jdGlvbigpe3NsKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt1Zl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVJrO1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcGwoYykpdGhyb3cgRXJyb3IocCgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcihwKDM4KSk7cmV0dXJuIHNsKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxOC4yLjAtbmV4dC05ZTNiNzcyYjgtMjAyMjA2MDhcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7XG4gIHZhciBfaSA9IGFyciA9PSBudWxsID8gbnVsbCA6IHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTtcblxuICBpZiAoX2kgPT0gbnVsbCkgcmV0dXJuO1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcblxuICB2YXIgX3MsIF9lO1xuXG4gIHRyeSB7XG4gICAgZm9yIChfaSA9IF9pLmNhbGwoYXJyKTsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgaWYgKCFvKSByZXR1cm47XG4gIGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHtcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldO1xuXG4gIHJldHVybiBhcnIyO1xufVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuXG4vLyBBIHJlc2VydmVkIGF0dHJpYnV0ZS5cbi8vIEl0IGlzIGhhbmRsZWQgYnkgUmVhY3Qgc2VwYXJhdGVseSBhbmQgc2hvdWxkbid0IGJlIHdyaXR0ZW4gdG8gdGhlIERPTS5cbnZhciBSRVNFUlZFRCA9IDA7IC8vIEEgc2ltcGxlIHN0cmluZyBhdHRyaWJ1dGUuXG4vLyBBdHRyaWJ1dGVzIHRoYXQgYXJlbid0IGluIHRoZSBmaWx0ZXIgYXJlIHByZXN1bWVkIHRvIGhhdmUgdGhpcyB0eXBlLlxuXG52YXIgU1RSSU5HID0gMTsgLy8gQSBzdHJpbmcgYXR0cmlidXRlIHRoYXQgYWNjZXB0cyBib29sZWFucyBpbiBSZWFjdC4gSW4gSFRNTCwgdGhlc2UgYXJlIGNhbGxlZFxuLy8gXCJlbnVtZXJhdGVkXCIgYXR0cmlidXRlcyB3aXRoIFwidHJ1ZVwiIGFuZCBcImZhbHNlXCIgYXMgcG9zc2libGUgdmFsdWVzLlxuLy8gV2hlbiB0cnVlLCBpdCBzaG91bGQgYmUgc2V0IHRvIGEgXCJ0cnVlXCIgc3RyaW5nLlxuLy8gV2hlbiBmYWxzZSwgaXQgc2hvdWxkIGJlIHNldCB0byBhIFwiZmFsc2VcIiBzdHJpbmcuXG5cbnZhciBCT09MRUFOSVNIX1NUUklORyA9IDI7IC8vIEEgcmVhbCBib29sZWFuIGF0dHJpYnV0ZS5cbi8vIFdoZW4gdHJ1ZSwgaXQgc2hvdWxkIGJlIHByZXNlbnQgKHNldCBlaXRoZXIgdG8gYW4gZW1wdHkgc3RyaW5nIG9yIGl0cyBuYW1lKS5cbi8vIFdoZW4gZmFsc2UsIGl0IHNob3VsZCBiZSBvbWl0dGVkLlxuXG52YXIgQk9PTEVBTiA9IDM7IC8vIEFuIGF0dHJpYnV0ZSB0aGF0IGNhbiBiZSB1c2VkIGFzIGEgZmxhZyBhcyB3ZWxsIGFzIHdpdGggYSB2YWx1ZS5cbi8vIFdoZW4gdHJ1ZSwgaXQgc2hvdWxkIGJlIHByZXNlbnQgKHNldCBlaXRoZXIgdG8gYW4gZW1wdHkgc3RyaW5nIG9yIGl0cyBuYW1lKS5cbi8vIFdoZW4gZmFsc2UsIGl0IHNob3VsZCBiZSBvbWl0dGVkLlxuLy8gRm9yIGFueSBvdGhlciB2YWx1ZSwgc2hvdWxkIGJlIHByZXNlbnQgd2l0aCB0aGF0IHZhbHVlLlxuXG52YXIgT1ZFUkxPQURFRF9CT09MRUFOID0gNDsgLy8gQW4gYXR0cmlidXRlIHRoYXQgbXVzdCBiZSBudW1lcmljIG9yIHBhcnNlIGFzIGEgbnVtZXJpYy5cbi8vIFdoZW4gZmFsc3ksIGl0IHNob3VsZCBiZSByZW1vdmVkLlxuXG52YXIgTlVNRVJJQyA9IDU7IC8vIEFuIGF0dHJpYnV0ZSB0aGF0IG11c3QgYmUgcG9zaXRpdmUgbnVtZXJpYyBvciBwYXJzZSBhcyBhIHBvc2l0aXZlIG51bWVyaWMuXG4vLyBXaGVuIGZhbHN5LCBpdCBzaG91bGQgYmUgcmVtb3ZlZC5cblxudmFyIFBPU0lUSVZFX05VTUVSSUMgPSA2O1xuZnVuY3Rpb24gZ2V0UHJvcGVydHlJbmZvKG5hbWUpIHtcbiAgcmV0dXJuIHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkobmFtZSkgPyBwcm9wZXJ0aWVzW25hbWVdIDogbnVsbDtcbn1cblxuZnVuY3Rpb24gUHJvcGVydHlJbmZvUmVjb3JkKG5hbWUsIHR5cGUsIG11c3RVc2VQcm9wZXJ0eSwgYXR0cmlidXRlTmFtZSwgYXR0cmlidXRlTmFtZXNwYWNlLCBzYW5pdGl6ZVVSTCwgcmVtb3ZlRW1wdHlTdHJpbmcpIHtcbiAgdGhpcy5hY2NlcHRzQm9vbGVhbnMgPSB0eXBlID09PSBCT09MRUFOSVNIX1NUUklORyB8fCB0eXBlID09PSBCT09MRUFOIHx8IHR5cGUgPT09IE9WRVJMT0FERURfQk9PTEVBTjtcbiAgdGhpcy5hdHRyaWJ1dGVOYW1lID0gYXR0cmlidXRlTmFtZTtcbiAgdGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2UgPSBhdHRyaWJ1dGVOYW1lc3BhY2U7XG4gIHRoaXMubXVzdFVzZVByb3BlcnR5ID0gbXVzdFVzZVByb3BlcnR5O1xuICB0aGlzLnByb3BlcnR5TmFtZSA9IG5hbWU7XG4gIHRoaXMudHlwZSA9IHR5cGU7XG4gIHRoaXMuc2FuaXRpemVVUkwgPSBzYW5pdGl6ZVVSTDtcbiAgdGhpcy5yZW1vdmVFbXB0eVN0cmluZyA9IHJlbW92ZUVtcHR5U3RyaW5nO1xufSAvLyBXaGVuIGFkZGluZyBhdHRyaWJ1dGVzIHRvIHRoaXMgbGlzdCwgYmUgc3VyZSB0byBhbHNvIGFkZCB0aGVtIHRvXG4vLyB0aGUgYHBvc3NpYmxlU3RhbmRhcmROYW1lc2AgbW9kdWxlIHRvIGVuc3VyZSBjYXNpbmcgYW5kIGluY29ycmVjdFxuLy8gbmFtZSB3YXJuaW5ncy5cblxuXG52YXIgcHJvcGVydGllcyA9IHt9OyAvLyBUaGVzZSBwcm9wcyBhcmUgcmVzZXJ2ZWQgYnkgUmVhY3QuIFRoZXkgc2hvdWxkbid0IGJlIHdyaXR0ZW4gdG8gdGhlIERPTS5cblxudmFyIHJlc2VydmVkUHJvcHMgPSBbJ2NoaWxkcmVuJywgJ2Rhbmdlcm91c2x5U2V0SW5uZXJIVE1MJywgLy8gVE9ETzogVGhpcyBwcmV2ZW50cyB0aGUgYXNzaWdubWVudCBvZiBkZWZhdWx0VmFsdWUgdG8gcmVndWxhclxuLy8gZWxlbWVudHMgKG5vdCBqdXN0IGlucHV0cykuIE5vdyB0aGF0IFJlYWN0RE9NSW5wdXQgYXNzaWducyB0byB0aGVcbi8vIGRlZmF1bHRWYWx1ZSBwcm9wZXJ0eSAtLSBkbyB3ZSBuZWVkIHRoaXM/XG4nZGVmYXVsdFZhbHVlJywgJ2RlZmF1bHRDaGVja2VkJywgJ2lubmVySFRNTCcsICdzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcnLCAnc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJywgJ3N0eWxlJ107XG5yZXNlcnZlZFByb3BzLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgcHJvcGVydGllc1tuYW1lXSA9IG5ldyBQcm9wZXJ0eUluZm9SZWNvcmQobmFtZSwgUkVTRVJWRUQsIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgbmFtZSwgLy8gYXR0cmlidXRlTmFtZVxuICBudWxsLCAvLyBhdHRyaWJ1dGVOYW1lc3BhY2VcbiAgZmFsc2UsIC8vIHNhbml0aXplVVJMXG4gIGZhbHNlKTtcbn0pOyAvLyBBIGZldyBSZWFjdCBzdHJpbmcgYXR0cmlidXRlcyBoYXZlIGEgZGlmZmVyZW50IG5hbWUuXG4vLyBUaGlzIGlzIGEgbWFwcGluZyBmcm9tIFJlYWN0IHByb3AgbmFtZXMgdG8gdGhlIGF0dHJpYnV0ZSBuYW1lcy5cblxuW1snYWNjZXB0Q2hhcnNldCcsICdhY2NlcHQtY2hhcnNldCddLCBbJ2NsYXNzTmFtZScsICdjbGFzcyddLCBbJ2h0bWxGb3InLCAnZm9yJ10sIFsnaHR0cEVxdWl2JywgJ2h0dHAtZXF1aXYnXV0uZm9yRWFjaChmdW5jdGlvbiAoX3JlZikge1xuICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKSxcbiAgICAgIG5hbWUgPSBfcmVmMlswXSxcbiAgICAgIGF0dHJpYnV0ZU5hbWUgPSBfcmVmMlsxXTtcblxuICBwcm9wZXJ0aWVzW25hbWVdID0gbmV3IFByb3BlcnR5SW5mb1JlY29yZChuYW1lLCBTVFJJTkcsIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgYXR0cmlidXRlTmFtZSwgLy8gYXR0cmlidXRlTmFtZVxuICBudWxsLCAvLyBhdHRyaWJ1dGVOYW1lc3BhY2VcbiAgZmFsc2UsIC8vIHNhbml0aXplVVJMXG4gIGZhbHNlKTtcbn0pOyAvLyBUaGVzZSBhcmUgXCJlbnVtZXJhdGVkXCIgSFRNTCBhdHRyaWJ1dGVzIHRoYXQgYWNjZXB0IFwidHJ1ZVwiIGFuZCBcImZhbHNlXCIuXG4vLyBJbiBSZWFjdCwgd2UgbGV0IHVzZXJzIHBhc3MgYHRydWVgIGFuZCBgZmFsc2VgIGV2ZW4gdGhvdWdoIHRlY2huaWNhbGx5XG4vLyB0aGVzZSBhcmVuJ3QgYm9vbGVhbiBhdHRyaWJ1dGVzICh0aGV5IGFyZSBjb2VyY2VkIHRvIHN0cmluZ3MpLlxuXG5bJ2NvbnRlbnRFZGl0YWJsZScsICdkcmFnZ2FibGUnLCAnc3BlbGxDaGVjaycsICd2YWx1ZSddLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgcHJvcGVydGllc1tuYW1lXSA9IG5ldyBQcm9wZXJ0eUluZm9SZWNvcmQobmFtZSwgQk9PTEVBTklTSF9TVFJJTkcsIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgbmFtZS50b0xvd2VyQ2FzZSgpLCAvLyBhdHRyaWJ1dGVOYW1lXG4gIG51bGwsIC8vIGF0dHJpYnV0ZU5hbWVzcGFjZVxuICBmYWxzZSwgLy8gc2FuaXRpemVVUkxcbiAgZmFsc2UpO1xufSk7IC8vIFRoZXNlIGFyZSBcImVudW1lcmF0ZWRcIiBTVkcgYXR0cmlidXRlcyB0aGF0IGFjY2VwdCBcInRydWVcIiBhbmQgXCJmYWxzZVwiLlxuLy8gSW4gUmVhY3QsIHdlIGxldCB1c2VycyBwYXNzIGB0cnVlYCBhbmQgYGZhbHNlYCBldmVuIHRob3VnaCB0ZWNobmljYWxseVxuLy8gdGhlc2UgYXJlbid0IGJvb2xlYW4gYXR0cmlidXRlcyAodGhleSBhcmUgY29lcmNlZCB0byBzdHJpbmdzKS5cbi8vIFNpbmNlIHRoZXNlIGFyZSBTVkcgYXR0cmlidXRlcywgdGhlaXIgYXR0cmlidXRlIG5hbWVzIGFyZSBjYXNlLXNlbnNpdGl2ZS5cblxuWydhdXRvUmV2ZXJzZScsICdleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkJywgJ2ZvY3VzYWJsZScsICdwcmVzZXJ2ZUFscGhhJ10uZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICBwcm9wZXJ0aWVzW25hbWVdID0gbmV3IFByb3BlcnR5SW5mb1JlY29yZChuYW1lLCBCT09MRUFOSVNIX1NUUklORywgZmFsc2UsIC8vIG11c3RVc2VQcm9wZXJ0eVxuICBuYW1lLCAvLyBhdHRyaWJ1dGVOYW1lXG4gIG51bGwsIC8vIGF0dHJpYnV0ZU5hbWVzcGFjZVxuICBmYWxzZSwgLy8gc2FuaXRpemVVUkxcbiAgZmFsc2UpO1xufSk7IC8vIFRoZXNlIGFyZSBIVE1MIGJvb2xlYW4gYXR0cmlidXRlcy5cblxuWydhbGxvd0Z1bGxTY3JlZW4nLCAnYXN5bmMnLCAvLyBOb3RlOiB0aGVyZSBpcyBhIHNwZWNpYWwgY2FzZSB0aGF0IHByZXZlbnRzIGl0IGZyb20gYmVpbmcgd3JpdHRlbiB0byB0aGUgRE9NXG4vLyBvbiB0aGUgY2xpZW50IHNpZGUgYmVjYXVzZSB0aGUgYnJvd3NlcnMgYXJlIGluY29uc2lzdGVudC4gSW5zdGVhZCB3ZSBjYWxsIGZvY3VzKCkuXG4nYXV0b0ZvY3VzJywgJ2F1dG9QbGF5JywgJ2NvbnRyb2xzJywgJ2RlZmF1bHQnLCAnZGVmZXInLCAnZGlzYWJsZWQnLCAnZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUnLCAnZGlzYWJsZVJlbW90ZVBsYXliYWNrJywgJ2Zvcm1Ob1ZhbGlkYXRlJywgJ2hpZGRlbicsICdsb29wJywgJ25vTW9kdWxlJywgJ25vVmFsaWRhdGUnLCAnb3BlbicsICdwbGF5c0lubGluZScsICdyZWFkT25seScsICdyZXF1aXJlZCcsICdyZXZlcnNlZCcsICdzY29wZWQnLCAnc2VhbWxlc3MnLCAvLyBNaWNyb2RhdGFcbidpdGVtU2NvcGUnXS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gIHByb3BlcnRpZXNbbmFtZV0gPSBuZXcgUHJvcGVydHlJbmZvUmVjb3JkKG5hbWUsIEJPT0xFQU4sIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgbmFtZS50b0xvd2VyQ2FzZSgpLCAvLyBhdHRyaWJ1dGVOYW1lXG4gIG51bGwsIC8vIGF0dHJpYnV0ZU5hbWVzcGFjZVxuICBmYWxzZSwgLy8gc2FuaXRpemVVUkxcbiAgZmFsc2UpO1xufSk7IC8vIFRoZXNlIGFyZSB0aGUgZmV3IFJlYWN0IHByb3BzIHRoYXQgd2Ugc2V0IGFzIERPTSBwcm9wZXJ0aWVzXG4vLyByYXRoZXIgdGhhbiBhdHRyaWJ1dGVzLiBUaGVzZSBhcmUgYWxsIGJvb2xlYW5zLlxuXG5bJ2NoZWNrZWQnLCAvLyBOb3RlOiBgb3B0aW9uLnNlbGVjdGVkYCBpcyBub3QgdXBkYXRlZCBpZiBgc2VsZWN0Lm11bHRpcGxlYCBpc1xuLy8gZGlzYWJsZWQgd2l0aCBgcmVtb3ZlQXR0cmlidXRlYC4gV2UgaGF2ZSBzcGVjaWFsIGxvZ2ljIGZvciBoYW5kbGluZyB0aGlzLlxuJ211bHRpcGxlJywgJ211dGVkJywgJ3NlbGVjdGVkJyAvLyBOT1RFOiBpZiB5b3UgYWRkIGEgY2FtZWxDYXNlZCBwcm9wIHRvIHRoaXMgbGlzdCxcbi8vIHlvdSdsbCBuZWVkIHRvIHNldCBhdHRyaWJ1dGVOYW1lIHRvIG5hbWUudG9Mb3dlckNhc2UoKVxuLy8gaW5zdGVhZCBpbiB0aGUgYXNzaWdubWVudCBiZWxvdy5cbl0uZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICBwcm9wZXJ0aWVzW25hbWVdID0gbmV3IFByb3BlcnR5SW5mb1JlY29yZChuYW1lLCBCT09MRUFOLCB0cnVlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgbmFtZSwgLy8gYXR0cmlidXRlTmFtZVxuICBudWxsLCAvLyBhdHRyaWJ1dGVOYW1lc3BhY2VcbiAgZmFsc2UsIC8vIHNhbml0aXplVVJMXG4gIGZhbHNlKTtcbn0pOyAvLyBUaGVzZSBhcmUgSFRNTCBhdHRyaWJ1dGVzIHRoYXQgYXJlIFwib3ZlcmxvYWRlZCBib29sZWFuc1wiOiB0aGV5IGJlaGF2ZSBsaWtlXG4vLyBib29sZWFucywgYnV0IGNhbiBhbHNvIGFjY2VwdCBhIHN0cmluZyB2YWx1ZS5cblxuWydjYXB0dXJlJywgJ2Rvd25sb2FkJyAvLyBOT1RFOiBpZiB5b3UgYWRkIGEgY2FtZWxDYXNlZCBwcm9wIHRvIHRoaXMgbGlzdCxcbi8vIHlvdSdsbCBuZWVkIHRvIHNldCBhdHRyaWJ1dGVOYW1lIHRvIG5hbWUudG9Mb3dlckNhc2UoKVxuLy8gaW5zdGVhZCBpbiB0aGUgYXNzaWdubWVudCBiZWxvdy5cbl0uZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICBwcm9wZXJ0aWVzW25hbWVdID0gbmV3IFByb3BlcnR5SW5mb1JlY29yZChuYW1lLCBPVkVSTE9BREVEX0JPT0xFQU4sIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgbmFtZSwgLy8gYXR0cmlidXRlTmFtZVxuICBudWxsLCAvLyBhdHRyaWJ1dGVOYW1lc3BhY2VcbiAgZmFsc2UsIC8vIHNhbml0aXplVVJMXG4gIGZhbHNlKTtcbn0pOyAvLyBUaGVzZSBhcmUgSFRNTCBhdHRyaWJ1dGVzIHRoYXQgbXVzdCBiZSBwb3NpdGl2ZSBudW1iZXJzLlxuXG5bJ2NvbHMnLCAncm93cycsICdzaXplJywgJ3NwYW4nIC8vIE5PVEU6IGlmIHlvdSBhZGQgYSBjYW1lbENhc2VkIHByb3AgdG8gdGhpcyBsaXN0LFxuLy8geW91J2xsIG5lZWQgdG8gc2V0IGF0dHJpYnV0ZU5hbWUgdG8gbmFtZS50b0xvd2VyQ2FzZSgpXG4vLyBpbnN0ZWFkIGluIHRoZSBhc3NpZ25tZW50IGJlbG93LlxuXS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gIHByb3BlcnRpZXNbbmFtZV0gPSBuZXcgUHJvcGVydHlJbmZvUmVjb3JkKG5hbWUsIFBPU0lUSVZFX05VTUVSSUMsIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgbmFtZSwgLy8gYXR0cmlidXRlTmFtZVxuICBudWxsLCAvLyBhdHRyaWJ1dGVOYW1lc3BhY2VcbiAgZmFsc2UsIC8vIHNhbml0aXplVVJMXG4gIGZhbHNlKTtcbn0pOyAvLyBUaGVzZSBhcmUgSFRNTCBhdHRyaWJ1dGVzIHRoYXQgbXVzdCBiZSBudW1iZXJzLlxuXG5bJ3Jvd1NwYW4nLCAnc3RhcnQnXS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gIHByb3BlcnRpZXNbbmFtZV0gPSBuZXcgUHJvcGVydHlJbmZvUmVjb3JkKG5hbWUsIE5VTUVSSUMsIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgbmFtZS50b0xvd2VyQ2FzZSgpLCAvLyBhdHRyaWJ1dGVOYW1lXG4gIG51bGwsIC8vIGF0dHJpYnV0ZU5hbWVzcGFjZVxuICBmYWxzZSwgLy8gc2FuaXRpemVVUkxcbiAgZmFsc2UpO1xufSk7XG52YXIgQ0FNRUxJWkUgPSAvW1xcLVxcOl0oW2Etel0pL2c7XG5cbnZhciBjYXBpdGFsaXplID0gZnVuY3Rpb24gY2FwaXRhbGl6ZSh0b2tlbikge1xuICByZXR1cm4gdG9rZW5bMV0udG9VcHBlckNhc2UoKTtcbn07IC8vIFRoaXMgaXMgYSBsaXN0IG9mIGFsbCBTVkcgYXR0cmlidXRlcyB0aGF0IG5lZWQgc3BlY2lhbCBjYXNpbmcsIG5hbWVzcGFjaW5nLFxuLy8gb3IgYm9vbGVhbiB2YWx1ZSBhc3NpZ25tZW50LiBSZWd1bGFyIGF0dHJpYnV0ZXMgdGhhdCBqdXN0IGFjY2VwdCBzdHJpbmdzXG4vLyBhbmQgaGF2ZSB0aGUgc2FtZSBuYW1lcyBhcmUgb21pdHRlZCwganVzdCBsaWtlIGluIHRoZSBIVE1MIGF0dHJpYnV0ZSBmaWx0ZXIuXG4vLyBTb21lIG9mIHRoZXNlIGF0dHJpYnV0ZXMgY2FuIGJlIGhhcmQgdG8gZmluZC4gVGhpcyBsaXN0IHdhcyBjcmVhdGVkIGJ5XG4vLyBzY3JhcGluZyB0aGUgTUROIGRvY3VtZW50YXRpb24uXG5cblxuWydhY2NlbnQtaGVpZ2h0JywgJ2FsaWdubWVudC1iYXNlbGluZScsICdhcmFiaWMtZm9ybScsICdiYXNlbGluZS1zaGlmdCcsICdjYXAtaGVpZ2h0JywgJ2NsaXAtcGF0aCcsICdjbGlwLXJ1bGUnLCAnY29sb3ItaW50ZXJwb2xhdGlvbicsICdjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMnLCAnY29sb3ItcHJvZmlsZScsICdjb2xvci1yZW5kZXJpbmcnLCAnZG9taW5hbnQtYmFzZWxpbmUnLCAnZW5hYmxlLWJhY2tncm91bmQnLCAnZmlsbC1vcGFjaXR5JywgJ2ZpbGwtcnVsZScsICdmbG9vZC1jb2xvcicsICdmbG9vZC1vcGFjaXR5JywgJ2ZvbnQtZmFtaWx5JywgJ2ZvbnQtc2l6ZScsICdmb250LXNpemUtYWRqdXN0JywgJ2ZvbnQtc3RyZXRjaCcsICdmb250LXN0eWxlJywgJ2ZvbnQtdmFyaWFudCcsICdmb250LXdlaWdodCcsICdnbHlwaC1uYW1lJywgJ2dseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwnLCAnZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwnLCAnaG9yaXotYWR2LXgnLCAnaG9yaXotb3JpZ2luLXgnLCAnaW1hZ2UtcmVuZGVyaW5nJywgJ2xldHRlci1zcGFjaW5nJywgJ2xpZ2h0aW5nLWNvbG9yJywgJ21hcmtlci1lbmQnLCAnbWFya2VyLW1pZCcsICdtYXJrZXItc3RhcnQnLCAnb3ZlcmxpbmUtcG9zaXRpb24nLCAnb3ZlcmxpbmUtdGhpY2tuZXNzJywgJ3BhaW50LW9yZGVyJywgJ3Bhbm9zZS0xJywgJ3BvaW50ZXItZXZlbnRzJywgJ3JlbmRlcmluZy1pbnRlbnQnLCAnc2hhcGUtcmVuZGVyaW5nJywgJ3N0b3AtY29sb3InLCAnc3RvcC1vcGFjaXR5JywgJ3N0cmlrZXRocm91Z2gtcG9zaXRpb24nLCAnc3RyaWtldGhyb3VnaC10aGlja25lc3MnLCAnc3Ryb2tlLWRhc2hhcnJheScsICdzdHJva2UtZGFzaG9mZnNldCcsICdzdHJva2UtbGluZWNhcCcsICdzdHJva2UtbGluZWpvaW4nLCAnc3Ryb2tlLW1pdGVybGltaXQnLCAnc3Ryb2tlLW9wYWNpdHknLCAnc3Ryb2tlLXdpZHRoJywgJ3RleHQtYW5jaG9yJywgJ3RleHQtZGVjb3JhdGlvbicsICd0ZXh0LXJlbmRlcmluZycsICd1bmRlcmxpbmUtcG9zaXRpb24nLCAndW5kZXJsaW5lLXRoaWNrbmVzcycsICd1bmljb2RlLWJpZGknLCAndW5pY29kZS1yYW5nZScsICd1bml0cy1wZXItZW0nLCAndi1hbHBoYWJldGljJywgJ3YtaGFuZ2luZycsICd2LWlkZW9ncmFwaGljJywgJ3YtbWF0aGVtYXRpY2FsJywgJ3ZlY3Rvci1lZmZlY3QnLCAndmVydC1hZHYteScsICd2ZXJ0LW9yaWdpbi14JywgJ3ZlcnQtb3JpZ2luLXknLCAnd29yZC1zcGFjaW5nJywgJ3dyaXRpbmctbW9kZScsICd4bWxuczp4bGluaycsICd4LWhlaWdodCcgLy8gTk9URTogaWYgeW91IGFkZCBhIGNhbWVsQ2FzZWQgcHJvcCB0byB0aGlzIGxpc3QsXG4vLyB5b3UnbGwgbmVlZCB0byBzZXQgYXR0cmlidXRlTmFtZSB0byBuYW1lLnRvTG93ZXJDYXNlKClcbi8vIGluc3RlYWQgaW4gdGhlIGFzc2lnbm1lbnQgYmVsb3cuXG5dLmZvckVhY2goZnVuY3Rpb24gKGF0dHJpYnV0ZU5hbWUpIHtcbiAgdmFyIG5hbWUgPSBhdHRyaWJ1dGVOYW1lLnJlcGxhY2UoQ0FNRUxJWkUsIGNhcGl0YWxpemUpO1xuICBwcm9wZXJ0aWVzW25hbWVdID0gbmV3IFByb3BlcnR5SW5mb1JlY29yZChuYW1lLCBTVFJJTkcsIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgYXR0cmlidXRlTmFtZSwgbnVsbCwgLy8gYXR0cmlidXRlTmFtZXNwYWNlXG4gIGZhbHNlLCAvLyBzYW5pdGl6ZVVSTFxuICBmYWxzZSk7XG59KTsgLy8gU3RyaW5nIFNWRyBhdHRyaWJ1dGVzIHdpdGggdGhlIHhsaW5rIG5hbWVzcGFjZS5cblxuWyd4bGluazphY3R1YXRlJywgJ3hsaW5rOmFyY3JvbGUnLCAneGxpbms6cm9sZScsICd4bGluazpzaG93JywgJ3hsaW5rOnRpdGxlJywgJ3hsaW5rOnR5cGUnIC8vIE5PVEU6IGlmIHlvdSBhZGQgYSBjYW1lbENhc2VkIHByb3AgdG8gdGhpcyBsaXN0LFxuLy8geW91J2xsIG5lZWQgdG8gc2V0IGF0dHJpYnV0ZU5hbWUgdG8gbmFtZS50b0xvd2VyQ2FzZSgpXG4vLyBpbnN0ZWFkIGluIHRoZSBhc3NpZ25tZW50IGJlbG93LlxuXS5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyaWJ1dGVOYW1lKSB7XG4gIHZhciBuYW1lID0gYXR0cmlidXRlTmFtZS5yZXBsYWNlKENBTUVMSVpFLCBjYXBpdGFsaXplKTtcbiAgcHJvcGVydGllc1tuYW1lXSA9IG5ldyBQcm9wZXJ0eUluZm9SZWNvcmQobmFtZSwgU1RSSU5HLCBmYWxzZSwgLy8gbXVzdFVzZVByb3BlcnR5XG4gIGF0dHJpYnV0ZU5hbWUsICdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJywgZmFsc2UsIC8vIHNhbml0aXplVVJMXG4gIGZhbHNlKTtcbn0pOyAvLyBTdHJpbmcgU1ZHIGF0dHJpYnV0ZXMgd2l0aCB0aGUgeG1sIG5hbWVzcGFjZS5cblxuWyd4bWw6YmFzZScsICd4bWw6bGFuZycsICd4bWw6c3BhY2UnIC8vIE5PVEU6IGlmIHlvdSBhZGQgYSBjYW1lbENhc2VkIHByb3AgdG8gdGhpcyBsaXN0LFxuLy8geW91J2xsIG5lZWQgdG8gc2V0IGF0dHJpYnV0ZU5hbWUgdG8gbmFtZS50b0xvd2VyQ2FzZSgpXG4vLyBpbnN0ZWFkIGluIHRoZSBhc3NpZ25tZW50IGJlbG93LlxuXS5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyaWJ1dGVOYW1lKSB7XG4gIHZhciBuYW1lID0gYXR0cmlidXRlTmFtZS5yZXBsYWNlKENBTUVMSVpFLCBjYXBpdGFsaXplKTtcbiAgcHJvcGVydGllc1tuYW1lXSA9IG5ldyBQcm9wZXJ0eUluZm9SZWNvcmQobmFtZSwgU1RSSU5HLCBmYWxzZSwgLy8gbXVzdFVzZVByb3BlcnR5XG4gIGF0dHJpYnV0ZU5hbWUsICdodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2UnLCBmYWxzZSwgLy8gc2FuaXRpemVVUkxcbiAgZmFsc2UpO1xufSk7IC8vIFRoZXNlIGF0dHJpYnV0ZSBleGlzdHMgYm90aCBpbiBIVE1MIGFuZCBTVkcuXG4vLyBUaGUgYXR0cmlidXRlIG5hbWUgaXMgY2FzZS1zZW5zaXRpdmUgaW4gU1ZHIHNvIHdlIGNhbid0IGp1c3QgdXNlXG4vLyB0aGUgUmVhY3QgbmFtZSBsaWtlIHdlIGRvIGZvciBhdHRyaWJ1dGVzIHRoYXQgZXhpc3Qgb25seSBpbiBIVE1MLlxuXG5bJ3RhYkluZGV4JywgJ2Nyb3NzT3JpZ2luJ10uZm9yRWFjaChmdW5jdGlvbiAoYXR0cmlidXRlTmFtZSkge1xuICBwcm9wZXJ0aWVzW2F0dHJpYnV0ZU5hbWVdID0gbmV3IFByb3BlcnR5SW5mb1JlY29yZChhdHRyaWJ1dGVOYW1lLCBTVFJJTkcsIGZhbHNlLCAvLyBtdXN0VXNlUHJvcGVydHlcbiAgYXR0cmlidXRlTmFtZS50b0xvd2VyQ2FzZSgpLCAvLyBhdHRyaWJ1dGVOYW1lXG4gIG51bGwsIC8vIGF0dHJpYnV0ZU5hbWVzcGFjZVxuICBmYWxzZSwgLy8gc2FuaXRpemVVUkxcbiAgZmFsc2UpO1xufSk7IC8vIFRoZXNlIGF0dHJpYnV0ZXMgYWNjZXB0IFVSTHMuIFRoZXNlIG11c3Qgbm90IGFsbG93IGphdmFzY3JpcHQ6IFVSTFMuXG4vLyBUaGVzZSB3aWxsIGFsc28gbmVlZCB0byBhY2NlcHQgVHJ1c3RlZCBUeXBlcyBvYmplY3QgaW4gdGhlIGZ1dHVyZS5cblxudmFyIHhsaW5rSHJlZiA9ICd4bGlua0hyZWYnO1xucHJvcGVydGllc1t4bGlua0hyZWZdID0gbmV3IFByb3BlcnR5SW5mb1JlY29yZCgneGxpbmtIcmVmJywgU1RSSU5HLCBmYWxzZSwgLy8gbXVzdFVzZVByb3BlcnR5XG4neGxpbms6aHJlZicsICdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJywgdHJ1ZSwgLy8gc2FuaXRpemVVUkxcbmZhbHNlKTtcblsnc3JjJywgJ2hyZWYnLCAnYWN0aW9uJywgJ2Zvcm1BY3Rpb24nXS5mb3JFYWNoKGZ1bmN0aW9uIChhdHRyaWJ1dGVOYW1lKSB7XG4gIHByb3BlcnRpZXNbYXR0cmlidXRlTmFtZV0gPSBuZXcgUHJvcGVydHlJbmZvUmVjb3JkKGF0dHJpYnV0ZU5hbWUsIFNUUklORywgZmFsc2UsIC8vIG11c3RVc2VQcm9wZXJ0eVxuICBhdHRyaWJ1dGVOYW1lLnRvTG93ZXJDYXNlKCksIC8vIGF0dHJpYnV0ZU5hbWVcbiAgbnVsbCwgLy8gYXR0cmlidXRlTmFtZXNwYWNlXG4gIHRydWUsIC8vIHNhbml0aXplVVJMXG4gIHRydWUpO1xufSk7XG5cbnZhciBfcmVxdWlyZSA9IHJlcXVpcmUoJy4uL2xpYi9wb3NzaWJsZVN0YW5kYXJkTmFtZXNPcHRpbWl6ZWQnKSxcbiAgICBDQU1FTENBU0UgPSBfcmVxdWlyZS5DQU1FTENBU0UsXG4gICAgU0FNRSA9IF9yZXF1aXJlLlNBTUUsXG4gICAgcG9zc2libGVTdGFuZGFyZE5hbWVzT3B0aW1pemVkID0gX3JlcXVpcmUucG9zc2libGVTdGFuZGFyZE5hbWVzO1xuXG52YXIgQVRUUklCVVRFX05BTUVfU1RBUlRfQ0hBUiA9IFwiOkEtWl9hLXpcXFxcdTAwQzAtXFxcXHUwMEQ2XFxcXHUwMEQ4LVxcXFx1MDBGNlxcXFx1MDBGOC1cXFxcdTAyRkZcXFxcdTAzNzAtXFxcXHUwMzdEXFxcXHUwMzdGLVxcXFx1MUZGRlxcXFx1MjAwQy1cXFxcdTIwMERcXFxcdTIwNzAtXFxcXHUyMThGXFxcXHUyQzAwLVxcXFx1MkZFRlxcXFx1MzAwMS1cXFxcdUQ3RkZcXFxcdUY5MDAtXFxcXHVGRENGXFxcXHVGREYwLVxcXFx1RkZGRFwiO1xudmFyIEFUVFJJQlVURV9OQU1FX0NIQVIgPSBBVFRSSUJVVEVfTkFNRV9TVEFSVF9DSEFSICsgXCJcXFxcLS4wLTlcXFxcdTAwQjdcXFxcdTAzMDAtXFxcXHUwMzZGXFxcXHUyMDNGLVxcXFx1MjA0MFwiO1xuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBhIHByb3BlcnR5IG5hbWUgaXMgYSBjdXN0b20gYXR0cmlidXRlLlxuICpcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iLzE1LXN0YWJsZS9zcmMvcmVuZGVyZXJzL2RvbS9zaGFyZWQvSFRNTERPTVByb3BlcnR5Q29uZmlnLmpzI0wyMy1MMjV9XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9XG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG5cbnZhciBpc0N1c3RvbUF0dHJpYnV0ZSA9IFJlZ0V4cC5wcm90b3R5cGUudGVzdC5iaW5kKCAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbWlzbGVhZGluZy1jaGFyYWN0ZXItY2xhc3Ncbm5ldyBSZWdFeHAoJ14oZGF0YXxhcmlhKS1bJyArIEFUVFJJQlVURV9OQU1FX0NIQVIgKyAnXSokJykpO1xudmFyIHBvc3NpYmxlU3RhbmRhcmROYW1lcyA9IE9iamVjdC5rZXlzKHBvc3NpYmxlU3RhbmRhcmROYW1lc09wdGltaXplZCkucmVkdWNlKGZ1bmN0aW9uIChhY2N1bXVsYXRvciwgc3RhbmRhcmROYW1lKSB7XG4gIHZhciBwcm9wTmFtZSA9IHBvc3NpYmxlU3RhbmRhcmROYW1lc09wdGltaXplZFtzdGFuZGFyZE5hbWVdO1xuXG4gIGlmIChwcm9wTmFtZSA9PT0gU0FNRSkge1xuICAgIGFjY3VtdWxhdG9yW3N0YW5kYXJkTmFtZV0gPSBzdGFuZGFyZE5hbWU7XG4gIH0gZWxzZSBpZiAocHJvcE5hbWUgPT09IENBTUVMQ0FTRSkge1xuICAgIGFjY3VtdWxhdG9yW3N0YW5kYXJkTmFtZS50b0xvd2VyQ2FzZSgpXSA9IHN0YW5kYXJkTmFtZTtcbiAgfSBlbHNlIHtcbiAgICBhY2N1bXVsYXRvcltzdGFuZGFyZE5hbWVdID0gcHJvcE5hbWU7XG4gIH1cblxuICByZXR1cm4gYWNjdW11bGF0b3I7XG59LCB7fSk7XG5cbmV4cG9ydHMuQk9PTEVBTiA9IEJPT0xFQU47XG5leHBvcnRzLkJPT0xFQU5JU0hfU1RSSU5HID0gQk9PTEVBTklTSF9TVFJJTkc7XG5leHBvcnRzLk5VTUVSSUMgPSBOVU1FUklDO1xuZXhwb3J0cy5PVkVSTE9BREVEX0JPT0xFQU4gPSBPVkVSTE9BREVEX0JPT0xFQU47XG5leHBvcnRzLlBPU0lUSVZFX05VTUVSSUMgPSBQT1NJVElWRV9OVU1FUklDO1xuZXhwb3J0cy5SRVNFUlZFRCA9IFJFU0VSVkVEO1xuZXhwb3J0cy5TVFJJTkcgPSBTVFJJTkc7XG5leHBvcnRzLmdldFByb3BlcnR5SW5mbyA9IGdldFByb3BlcnR5SW5mbztcbmV4cG9ydHMuaXNDdXN0b21BdHRyaWJ1dGUgPSBpc0N1c3RvbUF0dHJpYnV0ZTtcbmV4cG9ydHMucG9zc2libGVTdGFuZGFyZE5hbWVzID0gcG9zc2libGVTdGFuZGFyZE5hbWVzO1xuIiwiLy8gQW4gYXR0cmlidXRlIGluIHdoaWNoIHRoZSBET00vU1ZHIHN0YW5kYXJkIG5hbWUgaXMgdGhlIHNhbWUgYXMgdGhlIFJlYWN0IHByb3AgbmFtZSAoZS5nLiwgJ2FjY2VwdCcpLlxudmFyIFNBTUUgPSAwO1xuZXhwb3J0cy5TQU1FID0gU0FNRTtcblxuLy8gQW4gYXR0cmlidXRlIGluIHdoaWNoIHRoZSBSZWFjdCBwcm9wIG5hbWUgaXMgdGhlIGNhbWVsY2FzZWQgdmVyc2lvbiBvZiB0aGUgRE9NL1NWRyBzdGFuZGFyZCBuYW1lIChlLmcuLCAnYWNjZXB0Q2hhcnNldCcpLlxudmFyIENBTUVMQ0FTRSA9IDE7XG5leHBvcnRzLkNBTUVMQ0FTRSA9IENBTUVMQ0FTRTtcblxuZXhwb3J0cy5wb3NzaWJsZVN0YW5kYXJkTmFtZXMgPSB7XG4gIGFjY2VwdDogMCxcbiAgYWNjZXB0Q2hhcnNldDogMSxcbiAgJ2FjY2VwdC1jaGFyc2V0JzogJ2FjY2VwdENoYXJzZXQnLFxuICBhY2Nlc3NLZXk6IDEsXG4gIGFjdGlvbjogMCxcbiAgYWxsb3dGdWxsU2NyZWVuOiAxLFxuICBhbHQ6IDAsXG4gIGFzOiAwLFxuICBhc3luYzogMCxcbiAgYXV0b0NhcGl0YWxpemU6IDEsXG4gIGF1dG9Db21wbGV0ZTogMSxcbiAgYXV0b0NvcnJlY3Q6IDEsXG4gIGF1dG9Gb2N1czogMSxcbiAgYXV0b1BsYXk6IDEsXG4gIGF1dG9TYXZlOiAxLFxuICBjYXB0dXJlOiAwLFxuICBjZWxsUGFkZGluZzogMSxcbiAgY2VsbFNwYWNpbmc6IDEsXG4gIGNoYWxsZW5nZTogMCxcbiAgY2hhclNldDogMSxcbiAgY2hlY2tlZDogMCxcbiAgY2hpbGRyZW46IDAsXG4gIGNpdGU6IDAsXG4gIGNsYXNzOiAnY2xhc3NOYW1lJyxcbiAgY2xhc3NJRDogMSxcbiAgY2xhc3NOYW1lOiAxLFxuICBjb2xzOiAwLFxuICBjb2xTcGFuOiAxLFxuICBjb250ZW50OiAwLFxuICBjb250ZW50RWRpdGFibGU6IDEsXG4gIGNvbnRleHRNZW51OiAxLFxuICBjb250cm9sczogMCxcbiAgY29udHJvbHNMaXN0OiAxLFxuICBjb29yZHM6IDAsXG4gIGNyb3NzT3JpZ2luOiAxLFxuICBkYW5nZXJvdXNseVNldElubmVySFRNTDogMSxcbiAgZGF0YTogMCxcbiAgZGF0ZVRpbWU6IDEsXG4gIGRlZmF1bHQ6IDAsXG4gIGRlZmF1bHRDaGVja2VkOiAxLFxuICBkZWZhdWx0VmFsdWU6IDEsXG4gIGRlZmVyOiAwLFxuICBkaXI6IDAsXG4gIGRpc2FibGVkOiAwLFxuICBkaXNhYmxlUGljdHVyZUluUGljdHVyZTogMSxcbiAgZGlzYWJsZVJlbW90ZVBsYXliYWNrOiAxLFxuICBkb3dubG9hZDogMCxcbiAgZHJhZ2dhYmxlOiAwLFxuICBlbmNUeXBlOiAxLFxuICBlbnRlcktleUhpbnQ6IDEsXG4gIGZvcjogJ2h0bWxGb3InLFxuICBmb3JtOiAwLFxuICBmb3JtTWV0aG9kOiAxLFxuICBmb3JtQWN0aW9uOiAxLFxuICBmb3JtRW5jVHlwZTogMSxcbiAgZm9ybU5vVmFsaWRhdGU6IDEsXG4gIGZvcm1UYXJnZXQ6IDEsXG4gIGZyYW1lQm9yZGVyOiAxLFxuICBoZWFkZXJzOiAwLFxuICBoZWlnaHQ6IDAsXG4gIGhpZGRlbjogMCxcbiAgaGlnaDogMCxcbiAgaHJlZjogMCxcbiAgaHJlZkxhbmc6IDEsXG4gIGh0bWxGb3I6IDEsXG4gIGh0dHBFcXVpdjogMSxcbiAgJ2h0dHAtZXF1aXYnOiAnaHR0cEVxdWl2JyxcbiAgaWNvbjogMCxcbiAgaWQ6IDAsXG4gIGlubmVySFRNTDogMSxcbiAgaW5wdXRNb2RlOiAxLFxuICBpbnRlZ3JpdHk6IDAsXG4gIGlzOiAwLFxuICBpdGVtSUQ6IDEsXG4gIGl0ZW1Qcm9wOiAxLFxuICBpdGVtUmVmOiAxLFxuICBpdGVtU2NvcGU6IDEsXG4gIGl0ZW1UeXBlOiAxLFxuICBrZXlQYXJhbXM6IDEsXG4gIGtleVR5cGU6IDEsXG4gIGtpbmQ6IDAsXG4gIGxhYmVsOiAwLFxuICBsYW5nOiAwLFxuICBsaXN0OiAwLFxuICBsb29wOiAwLFxuICBsb3c6IDAsXG4gIG1hbmlmZXN0OiAwLFxuICBtYXJnaW5XaWR0aDogMSxcbiAgbWFyZ2luSGVpZ2h0OiAxLFxuICBtYXg6IDAsXG4gIG1heExlbmd0aDogMSxcbiAgbWVkaWE6IDAsXG4gIG1lZGlhR3JvdXA6IDEsXG4gIG1ldGhvZDogMCxcbiAgbWluOiAwLFxuICBtaW5MZW5ndGg6IDEsXG4gIG11bHRpcGxlOiAwLFxuICBtdXRlZDogMCxcbiAgbmFtZTogMCxcbiAgbm9Nb2R1bGU6IDEsXG4gIG5vbmNlOiAwLFxuICBub1ZhbGlkYXRlOiAxLFxuICBvcGVuOiAwLFxuICBvcHRpbXVtOiAwLFxuICBwYXR0ZXJuOiAwLFxuICBwbGFjZWhvbGRlcjogMCxcbiAgcGxheXNJbmxpbmU6IDEsXG4gIHBvc3RlcjogMCxcbiAgcHJlbG9hZDogMCxcbiAgcHJvZmlsZTogMCxcbiAgcmFkaW9Hcm91cDogMSxcbiAgcmVhZE9ubHk6IDEsXG4gIHJlZmVycmVyUG9saWN5OiAxLFxuICByZWw6IDAsXG4gIHJlcXVpcmVkOiAwLFxuICByZXZlcnNlZDogMCxcbiAgcm9sZTogMCxcbiAgcm93czogMCxcbiAgcm93U3BhbjogMSxcbiAgc2FuZGJveDogMCxcbiAgc2NvcGU6IDAsXG4gIHNjb3BlZDogMCxcbiAgc2Nyb2xsaW5nOiAwLFxuICBzZWFtbGVzczogMCxcbiAgc2VsZWN0ZWQ6IDAsXG4gIHNoYXBlOiAwLFxuICBzaXplOiAwLFxuICBzaXplczogMCxcbiAgc3BhbjogMCxcbiAgc3BlbGxDaGVjazogMSxcbiAgc3JjOiAwLFxuICBzcmNEb2M6IDEsXG4gIHNyY0xhbmc6IDEsXG4gIHNyY1NldDogMSxcbiAgc3RhcnQ6IDAsXG4gIHN0ZXA6IDAsXG4gIHN0eWxlOiAwLFxuICBzdW1tYXJ5OiAwLFxuICB0YWJJbmRleDogMSxcbiAgdGFyZ2V0OiAwLFxuICB0aXRsZTogMCxcbiAgdHlwZTogMCxcbiAgdXNlTWFwOiAxLFxuICB2YWx1ZTogMCxcbiAgd2lkdGg6IDAsXG4gIHdtb2RlOiAwLFxuICB3cmFwOiAwLFxuICBhYm91dDogMCxcbiAgYWNjZW50SGVpZ2h0OiAxLFxuICAnYWNjZW50LWhlaWdodCc6ICdhY2NlbnRIZWlnaHQnLFxuICBhY2N1bXVsYXRlOiAwLFxuICBhZGRpdGl2ZTogMCxcbiAgYWxpZ25tZW50QmFzZWxpbmU6IDEsXG4gICdhbGlnbm1lbnQtYmFzZWxpbmUnOiAnYWxpZ25tZW50QmFzZWxpbmUnLFxuICBhbGxvd1Jlb3JkZXI6IDEsXG4gIGFscGhhYmV0aWM6IDAsXG4gIGFtcGxpdHVkZTogMCxcbiAgYXJhYmljRm9ybTogMSxcbiAgJ2FyYWJpYy1mb3JtJzogJ2FyYWJpY0Zvcm0nLFxuICBhc2NlbnQ6IDAsXG4gIGF0dHJpYnV0ZU5hbWU6IDEsXG4gIGF0dHJpYnV0ZVR5cGU6IDEsXG4gIGF1dG9SZXZlcnNlOiAxLFxuICBhemltdXRoOiAwLFxuICBiYXNlRnJlcXVlbmN5OiAxLFxuICBiYXNlbGluZVNoaWZ0OiAxLFxuICAnYmFzZWxpbmUtc2hpZnQnOiAnYmFzZWxpbmVTaGlmdCcsXG4gIGJhc2VQcm9maWxlOiAxLFxuICBiYm94OiAwLFxuICBiZWdpbjogMCxcbiAgYmlhczogMCxcbiAgYnk6IDAsXG4gIGNhbGNNb2RlOiAxLFxuICBjYXBIZWlnaHQ6IDEsXG4gICdjYXAtaGVpZ2h0JzogJ2NhcEhlaWdodCcsXG4gIGNsaXA6IDAsXG4gIGNsaXBQYXRoOiAxLFxuICAnY2xpcC1wYXRoJzogJ2NsaXBQYXRoJyxcbiAgY2xpcFBhdGhVbml0czogMSxcbiAgY2xpcFJ1bGU6IDEsXG4gICdjbGlwLXJ1bGUnOiAnY2xpcFJ1bGUnLFxuICBjb2xvcjogMCxcbiAgY29sb3JJbnRlcnBvbGF0aW9uOiAxLFxuICAnY29sb3ItaW50ZXJwb2xhdGlvbic6ICdjb2xvckludGVycG9sYXRpb24nLFxuICBjb2xvckludGVycG9sYXRpb25GaWx0ZXJzOiAxLFxuICAnY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzJzogJ2NvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnMnLFxuICBjb2xvclByb2ZpbGU6IDEsXG4gICdjb2xvci1wcm9maWxlJzogJ2NvbG9yUHJvZmlsZScsXG4gIGNvbG9yUmVuZGVyaW5nOiAxLFxuICAnY29sb3ItcmVuZGVyaW5nJzogJ2NvbG9yUmVuZGVyaW5nJyxcbiAgY29udGVudFNjcmlwdFR5cGU6IDEsXG4gIGNvbnRlbnRTdHlsZVR5cGU6IDEsXG4gIGN1cnNvcjogMCxcbiAgY3g6IDAsXG4gIGN5OiAwLFxuICBkOiAwLFxuICBkYXRhdHlwZTogMCxcbiAgZGVjZWxlcmF0ZTogMCxcbiAgZGVzY2VudDogMCxcbiAgZGlmZnVzZUNvbnN0YW50OiAxLFxuICBkaXJlY3Rpb246IDAsXG4gIGRpc3BsYXk6IDAsXG4gIGRpdmlzb3I6IDAsXG4gIGRvbWluYW50QmFzZWxpbmU6IDEsXG4gICdkb21pbmFudC1iYXNlbGluZSc6ICdkb21pbmFudEJhc2VsaW5lJyxcbiAgZHVyOiAwLFxuICBkeDogMCxcbiAgZHk6IDAsXG4gIGVkZ2VNb2RlOiAxLFxuICBlbGV2YXRpb246IDAsXG4gIGVuYWJsZUJhY2tncm91bmQ6IDEsXG4gICdlbmFibGUtYmFja2dyb3VuZCc6ICdlbmFibGVCYWNrZ3JvdW5kJyxcbiAgZW5kOiAwLFxuICBleHBvbmVudDogMCxcbiAgZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZDogMSxcbiAgZmlsbDogMCxcbiAgZmlsbE9wYWNpdHk6IDEsXG4gICdmaWxsLW9wYWNpdHknOiAnZmlsbE9wYWNpdHknLFxuICBmaWxsUnVsZTogMSxcbiAgJ2ZpbGwtcnVsZSc6ICdmaWxsUnVsZScsXG4gIGZpbHRlcjogMCxcbiAgZmlsdGVyUmVzOiAxLFxuICBmaWx0ZXJVbml0czogMSxcbiAgZmxvb2RPcGFjaXR5OiAxLFxuICAnZmxvb2Qtb3BhY2l0eSc6ICdmbG9vZE9wYWNpdHknLFxuICBmbG9vZENvbG9yOiAxLFxuICAnZmxvb2QtY29sb3InOiAnZmxvb2RDb2xvcicsXG4gIGZvY3VzYWJsZTogMCxcbiAgZm9udEZhbWlseTogMSxcbiAgJ2ZvbnQtZmFtaWx5JzogJ2ZvbnRGYW1pbHknLFxuICBmb250U2l6ZTogMSxcbiAgJ2ZvbnQtc2l6ZSc6ICdmb250U2l6ZScsXG4gIGZvbnRTaXplQWRqdXN0OiAxLFxuICAnZm9udC1zaXplLWFkanVzdCc6ICdmb250U2l6ZUFkanVzdCcsXG4gIGZvbnRTdHJldGNoOiAxLFxuICAnZm9udC1zdHJldGNoJzogJ2ZvbnRTdHJldGNoJyxcbiAgZm9udFN0eWxlOiAxLFxuICAnZm9udC1zdHlsZSc6ICdmb250U3R5bGUnLFxuICBmb250VmFyaWFudDogMSxcbiAgJ2ZvbnQtdmFyaWFudCc6ICdmb250VmFyaWFudCcsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gICdmb250LXdlaWdodCc6ICdmb250V2VpZ2h0JyxcbiAgZm9ybWF0OiAwLFxuICBmcm9tOiAwLFxuICBmeDogMCxcbiAgZnk6IDAsXG4gIGcxOiAwLFxuICBnMjogMCxcbiAgZ2x5cGhOYW1lOiAxLFxuICAnZ2x5cGgtbmFtZSc6ICdnbHlwaE5hbWUnLFxuICBnbHlwaE9yaWVudGF0aW9uSG9yaXpvbnRhbDogMSxcbiAgJ2dseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwnOiAnZ2x5cGhPcmllbnRhdGlvbkhvcml6b250YWwnLFxuICBnbHlwaE9yaWVudGF0aW9uVmVydGljYWw6IDEsXG4gICdnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCc6ICdnbHlwaE9yaWVudGF0aW9uVmVydGljYWwnLFxuICBnbHlwaFJlZjogMSxcbiAgZ3JhZGllbnRUcmFuc2Zvcm06IDEsXG4gIGdyYWRpZW50VW5pdHM6IDEsXG4gIGhhbmdpbmc6IDAsXG4gIGhvcml6QWR2WDogMSxcbiAgJ2hvcml6LWFkdi14JzogJ2hvcml6QWR2WCcsXG4gIGhvcml6T3JpZ2luWDogMSxcbiAgJ2hvcml6LW9yaWdpbi14JzogJ2hvcml6T3JpZ2luWCcsXG4gIGlkZW9ncmFwaGljOiAwLFxuICBpbWFnZVJlbmRlcmluZzogMSxcbiAgJ2ltYWdlLXJlbmRlcmluZyc6ICdpbWFnZVJlbmRlcmluZycsXG4gIGluMjogMCxcbiAgaW46IDAsXG4gIGlubGlzdDogMCxcbiAgaW50ZXJjZXB0OiAwLFxuICBrMTogMCxcbiAgazI6IDAsXG4gIGszOiAwLFxuICBrNDogMCxcbiAgazogMCxcbiAga2VybmVsTWF0cml4OiAxLFxuICBrZXJuZWxVbml0TGVuZ3RoOiAxLFxuICBrZXJuaW5nOiAwLFxuICBrZXlQb2ludHM6IDEsXG4gIGtleVNwbGluZXM6IDEsXG4gIGtleVRpbWVzOiAxLFxuICBsZW5ndGhBZGp1c3Q6IDEsXG4gIGxldHRlclNwYWNpbmc6IDEsXG4gICdsZXR0ZXItc3BhY2luZyc6ICdsZXR0ZXJTcGFjaW5nJyxcbiAgbGlnaHRpbmdDb2xvcjogMSxcbiAgJ2xpZ2h0aW5nLWNvbG9yJzogJ2xpZ2h0aW5nQ29sb3InLFxuICBsaW1pdGluZ0NvbmVBbmdsZTogMSxcbiAgbG9jYWw6IDAsXG4gIG1hcmtlckVuZDogMSxcbiAgJ21hcmtlci1lbmQnOiAnbWFya2VyRW5kJyxcbiAgbWFya2VySGVpZ2h0OiAxLFxuICBtYXJrZXJNaWQ6IDEsXG4gICdtYXJrZXItbWlkJzogJ21hcmtlck1pZCcsXG4gIG1hcmtlclN0YXJ0OiAxLFxuICAnbWFya2VyLXN0YXJ0JzogJ21hcmtlclN0YXJ0JyxcbiAgbWFya2VyVW5pdHM6IDEsXG4gIG1hcmtlcldpZHRoOiAxLFxuICBtYXNrOiAwLFxuICBtYXNrQ29udGVudFVuaXRzOiAxLFxuICBtYXNrVW5pdHM6IDEsXG4gIG1hdGhlbWF0aWNhbDogMCxcbiAgbW9kZTogMCxcbiAgbnVtT2N0YXZlczogMSxcbiAgb2Zmc2V0OiAwLFxuICBvcGFjaXR5OiAwLFxuICBvcGVyYXRvcjogMCxcbiAgb3JkZXI6IDAsXG4gIG9yaWVudDogMCxcbiAgb3JpZW50YXRpb246IDAsXG4gIG9yaWdpbjogMCxcbiAgb3ZlcmZsb3c6IDAsXG4gIG92ZXJsaW5lUG9zaXRpb246IDEsXG4gICdvdmVybGluZS1wb3NpdGlvbic6ICdvdmVybGluZVBvc2l0aW9uJyxcbiAgb3ZlcmxpbmVUaGlja25lc3M6IDEsXG4gICdvdmVybGluZS10aGlja25lc3MnOiAnb3ZlcmxpbmVUaGlja25lc3MnLFxuICBwYWludE9yZGVyOiAxLFxuICAncGFpbnQtb3JkZXInOiAncGFpbnRPcmRlcicsXG4gIHBhbm9zZTE6IDAsXG4gICdwYW5vc2UtMSc6ICdwYW5vc2UxJyxcbiAgcGF0aExlbmd0aDogMSxcbiAgcGF0dGVybkNvbnRlbnRVbml0czogMSxcbiAgcGF0dGVyblRyYW5zZm9ybTogMSxcbiAgcGF0dGVyblVuaXRzOiAxLFxuICBwb2ludGVyRXZlbnRzOiAxLFxuICAncG9pbnRlci1ldmVudHMnOiAncG9pbnRlckV2ZW50cycsXG4gIHBvaW50czogMCxcbiAgcG9pbnRzQXRYOiAxLFxuICBwb2ludHNBdFk6IDEsXG4gIHBvaW50c0F0WjogMSxcbiAgcHJlZml4OiAwLFxuICBwcmVzZXJ2ZUFscGhhOiAxLFxuICBwcmVzZXJ2ZUFzcGVjdFJhdGlvOiAxLFxuICBwcmltaXRpdmVVbml0czogMSxcbiAgcHJvcGVydHk6IDAsXG4gIHI6IDAsXG4gIHJhZGl1czogMCxcbiAgcmVmWDogMSxcbiAgcmVmWTogMSxcbiAgcmVuZGVyaW5nSW50ZW50OiAxLFxuICAncmVuZGVyaW5nLWludGVudCc6ICdyZW5kZXJpbmdJbnRlbnQnLFxuICByZXBlYXRDb3VudDogMSxcbiAgcmVwZWF0RHVyOiAxLFxuICByZXF1aXJlZEV4dGVuc2lvbnM6IDEsXG4gIHJlcXVpcmVkRmVhdHVyZXM6IDEsXG4gIHJlc291cmNlOiAwLFxuICByZXN0YXJ0OiAwLFxuICByZXN1bHQ6IDAsXG4gIHJlc3VsdHM6IDAsXG4gIHJvdGF0ZTogMCxcbiAgcng6IDAsXG4gIHJ5OiAwLFxuICBzY2FsZTogMCxcbiAgc2VjdXJpdHk6IDAsXG4gIHNlZWQ6IDAsXG4gIHNoYXBlUmVuZGVyaW5nOiAxLFxuICAnc2hhcGUtcmVuZGVyaW5nJzogJ3NoYXBlUmVuZGVyaW5nJyxcbiAgc2xvcGU6IDAsXG4gIHNwYWNpbmc6IDAsXG4gIHNwZWN1bGFyQ29uc3RhbnQ6IDEsXG4gIHNwZWN1bGFyRXhwb25lbnQ6IDEsXG4gIHNwZWVkOiAwLFxuICBzcHJlYWRNZXRob2Q6IDEsXG4gIHN0YXJ0T2Zmc2V0OiAxLFxuICBzdGREZXZpYXRpb246IDEsXG4gIHN0ZW1oOiAwLFxuICBzdGVtdjogMCxcbiAgc3RpdGNoVGlsZXM6IDEsXG4gIHN0b3BDb2xvcjogMSxcbiAgJ3N0b3AtY29sb3InOiAnc3RvcENvbG9yJyxcbiAgc3RvcE9wYWNpdHk6IDEsXG4gICdzdG9wLW9wYWNpdHknOiAnc3RvcE9wYWNpdHknLFxuICBzdHJpa2V0aHJvdWdoUG9zaXRpb246IDEsXG4gICdzdHJpa2V0aHJvdWdoLXBvc2l0aW9uJzogJ3N0cmlrZXRocm91Z2hQb3NpdGlvbicsXG4gIHN0cmlrZXRocm91Z2hUaGlja25lc3M6IDEsXG4gICdzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyc6ICdzdHJpa2V0aHJvdWdoVGhpY2tuZXNzJyxcbiAgc3RyaW5nOiAwLFxuICBzdHJva2U6IDAsXG4gIHN0cm9rZURhc2hhcnJheTogMSxcbiAgJ3N0cm9rZS1kYXNoYXJyYXknOiAnc3Ryb2tlRGFzaGFycmF5JyxcbiAgc3Ryb2tlRGFzaG9mZnNldDogMSxcbiAgJ3N0cm9rZS1kYXNob2Zmc2V0JzogJ3N0cm9rZURhc2hvZmZzZXQnLFxuICBzdHJva2VMaW5lY2FwOiAxLFxuICAnc3Ryb2tlLWxpbmVjYXAnOiAnc3Ryb2tlTGluZWNhcCcsXG4gIHN0cm9rZUxpbmVqb2luOiAxLFxuICAnc3Ryb2tlLWxpbmVqb2luJzogJ3N0cm9rZUxpbmVqb2luJyxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMSxcbiAgJ3N0cm9rZS1taXRlcmxpbWl0JzogJ3N0cm9rZU1pdGVybGltaXQnLFxuICBzdHJva2VXaWR0aDogMSxcbiAgJ3N0cm9rZS13aWR0aCc6ICdzdHJva2VXaWR0aCcsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gICdzdHJva2Utb3BhY2l0eSc6ICdzdHJva2VPcGFjaXR5JyxcbiAgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nOiAxLFxuICBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmc6IDEsXG4gIHN1cmZhY2VTY2FsZTogMSxcbiAgc3lzdGVtTGFuZ3VhZ2U6IDEsXG4gIHRhYmxlVmFsdWVzOiAxLFxuICB0YXJnZXRYOiAxLFxuICB0YXJnZXRZOiAxLFxuICB0ZXh0QW5jaG9yOiAxLFxuICAndGV4dC1hbmNob3InOiAndGV4dEFuY2hvcicsXG4gIHRleHREZWNvcmF0aW9uOiAxLFxuICAndGV4dC1kZWNvcmF0aW9uJzogJ3RleHREZWNvcmF0aW9uJyxcbiAgdGV4dExlbmd0aDogMSxcbiAgdGV4dFJlbmRlcmluZzogMSxcbiAgJ3RleHQtcmVuZGVyaW5nJzogJ3RleHRSZW5kZXJpbmcnLFxuICB0bzogMCxcbiAgdHJhbnNmb3JtOiAwLFxuICB0eXBlb2Y6IDAsXG4gIHUxOiAwLFxuICB1MjogMCxcbiAgdW5kZXJsaW5lUG9zaXRpb246IDEsXG4gICd1bmRlcmxpbmUtcG9zaXRpb24nOiAndW5kZXJsaW5lUG9zaXRpb24nLFxuICB1bmRlcmxpbmVUaGlja25lc3M6IDEsXG4gICd1bmRlcmxpbmUtdGhpY2tuZXNzJzogJ3VuZGVybGluZVRoaWNrbmVzcycsXG4gIHVuaWNvZGU6IDAsXG4gIHVuaWNvZGVCaWRpOiAxLFxuICAndW5pY29kZS1iaWRpJzogJ3VuaWNvZGVCaWRpJyxcbiAgdW5pY29kZVJhbmdlOiAxLFxuICAndW5pY29kZS1yYW5nZSc6ICd1bmljb2RlUmFuZ2UnLFxuICB1bml0c1BlckVtOiAxLFxuICAndW5pdHMtcGVyLWVtJzogJ3VuaXRzUGVyRW0nLFxuICB1bnNlbGVjdGFibGU6IDAsXG4gIHZBbHBoYWJldGljOiAxLFxuICAndi1hbHBoYWJldGljJzogJ3ZBbHBoYWJldGljJyxcbiAgdmFsdWVzOiAwLFxuICB2ZWN0b3JFZmZlY3Q6IDEsXG4gICd2ZWN0b3ItZWZmZWN0JzogJ3ZlY3RvckVmZmVjdCcsXG4gIHZlcnNpb246IDAsXG4gIHZlcnRBZHZZOiAxLFxuICAndmVydC1hZHYteSc6ICd2ZXJ0QWR2WScsXG4gIHZlcnRPcmlnaW5YOiAxLFxuICAndmVydC1vcmlnaW4teCc6ICd2ZXJ0T3JpZ2luWCcsXG4gIHZlcnRPcmlnaW5ZOiAxLFxuICAndmVydC1vcmlnaW4teSc6ICd2ZXJ0T3JpZ2luWScsXG4gIHZIYW5naW5nOiAxLFxuICAndi1oYW5naW5nJzogJ3ZIYW5naW5nJyxcbiAgdklkZW9ncmFwaGljOiAxLFxuICAndi1pZGVvZ3JhcGhpYyc6ICd2SWRlb2dyYXBoaWMnLFxuICB2aWV3Qm94OiAxLFxuICB2aWV3VGFyZ2V0OiAxLFxuICB2aXNpYmlsaXR5OiAwLFxuICB2TWF0aGVtYXRpY2FsOiAxLFxuICAndi1tYXRoZW1hdGljYWwnOiAndk1hdGhlbWF0aWNhbCcsXG4gIHZvY2FiOiAwLFxuICB3aWR0aHM6IDAsXG4gIHdvcmRTcGFjaW5nOiAxLFxuICAnd29yZC1zcGFjaW5nJzogJ3dvcmRTcGFjaW5nJyxcbiAgd3JpdGluZ01vZGU6IDEsXG4gICd3cml0aW5nLW1vZGUnOiAnd3JpdGluZ01vZGUnLFxuICB4MTogMCxcbiAgeDI6IDAsXG4gIHg6IDAsXG4gIHhDaGFubmVsU2VsZWN0b3I6IDEsXG4gIHhIZWlnaHQ6IDEsXG4gICd4LWhlaWdodCc6ICd4SGVpZ2h0JyxcbiAgeGxpbmtBY3R1YXRlOiAxLFxuICAneGxpbms6YWN0dWF0ZSc6ICd4bGlua0FjdHVhdGUnLFxuICB4bGlua0FyY3JvbGU6IDEsXG4gICd4bGluazphcmNyb2xlJzogJ3hsaW5rQXJjcm9sZScsXG4gIHhsaW5rSHJlZjogMSxcbiAgJ3hsaW5rOmhyZWYnOiAneGxpbmtIcmVmJyxcbiAgeGxpbmtSb2xlOiAxLFxuICAneGxpbms6cm9sZSc6ICd4bGlua1JvbGUnLFxuICB4bGlua1Nob3c6IDEsXG4gICd4bGluazpzaG93JzogJ3hsaW5rU2hvdycsXG4gIHhsaW5rVGl0bGU6IDEsXG4gICd4bGluazp0aXRsZSc6ICd4bGlua1RpdGxlJyxcbiAgeGxpbmtUeXBlOiAxLFxuICAneGxpbms6dHlwZSc6ICd4bGlua1R5cGUnLFxuICB4bWxCYXNlOiAxLFxuICAneG1sOmJhc2UnOiAneG1sQmFzZScsXG4gIHhtbExhbmc6IDEsXG4gICd4bWw6bGFuZyc6ICd4bWxMYW5nJyxcbiAgeG1sbnM6IDAsXG4gICd4bWw6c3BhY2UnOiAneG1sU3BhY2UnLFxuICB4bWxuc1hsaW5rOiAxLFxuICAneG1sbnM6eGxpbmsnOiAneG1sbnNYbGluaycsXG4gIHhtbFNwYWNlOiAxLFxuICB5MTogMCxcbiAgeTI6IDAsXG4gIHk6IDAsXG4gIHlDaGFubmVsU2VsZWN0b3I6IDEsXG4gIHo6IDAsXG4gIHpvb21BbmRQYW46IDFcbn07XG4iLCIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIiksbj1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHA9U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpLHE9U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpLHI9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLHQ9U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpLHU9U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIiksdj1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksdz1TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIikseD1TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSx5PVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpLHo9U3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIEEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXomJmFbel18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1cbnZhciBCPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxDPU9iamVjdC5hc3NpZ24sRD17fTtmdW5jdGlvbiBFKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUQ7dGhpcy51cGRhdGVyPWV8fEJ9RS5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtcbkUucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcihcInNldFN0YXRlKC4uLik6IHRha2VzIGFuIG9iamVjdCBvZiBzdGF0ZSB2YXJpYWJsZXMgdG8gdXBkYXRlIG9yIGEgZnVuY3Rpb24gd2hpY2ggcmV0dXJucyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzLlwiKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0UucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEYoKXt9Ri5wcm90b3R5cGU9RS5wcm90b3R5cGU7ZnVuY3Rpb24gRyhhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1lfHxCfXZhciBIPUcucHJvdG90eXBlPW5ldyBGO1xuSC5jb25zdHJ1Y3Rvcj1HO0MoSCxFLnByb3RvdHlwZSk7SC5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgST1BcnJheS5pc0FycmF5LEo9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxLPXtjdXJyZW50Om51bGx9LEw9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIE0oYSxiLGUpe3ZhciBkLGM9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihkIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSi5jYWxsKGIsZCkmJiFMLmhhc093blByb3BlcnR5KGQpJiYoY1tkXT1iW2RdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpYy5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtjLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGQgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWNbZF0mJihjW2RdPWdbZF0pO3JldHVybnskJHR5cGVvZjpsLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpjLF9vd25lcjpLLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhLGIpe3JldHVybnskJHR5cGVvZjpsLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTyhhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZztmdW5jdGlvbiBRKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gUihhLGIsZSxkLGMpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBsOmNhc2UgbjpoPSEwfX1pZihoKXJldHVybiBoPWEsYz1jKGgpLGE9XCJcIj09PWQ/XCIuXCIrUShoLDApOmQsSShjKT8oZT1cIlwiLG51bGwhPWEmJihlPWEucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSxSKGMsYixlLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9YyYmKE8oYykmJihjPU4oYyxlKyghYy5rZXl8fGgmJmgua2V5PT09Yy5rZXk/XCJcIjooXCJcIitjLmtleSkucmVwbGFjZShQLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGMpKSwxO2g9MDtkPVwiXCI9PT1kP1wiLlwiOmQrXCI6XCI7aWYoSShhKSlmb3IodmFyIGc9MDtnPGEubGVuZ3RoO2crKyl7az1cbmFbZ107dmFyIGY9ZCtRKGssZyk7aCs9UihrLGIsZSxmLGMpfWVsc2UgaWYoZj1BKGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1kK1EoayxnKyspLGgrPVIoayxiLGUsZixjKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9U3RyaW5nKGEpLEVycm9yKFwiT2JqZWN0cyBhcmUgbm90IHZhbGlkIGFzIGEgUmVhY3QgY2hpbGQgKGZvdW5kOiBcIisoXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikrXCIpLiBJZiB5b3UgbWVhbnQgdG8gcmVuZGVyIGEgY29sbGVjdGlvbiBvZiBjaGlsZHJlbiwgdXNlIGFuIGFycmF5IGluc3RlYWQuXCIpO3JldHVybiBofVxuZnVuY3Rpb24gUyhhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgZD1bXSxjPTA7UihhLGQsXCJcIixcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBiLmNhbGwoZSxhLGMrKyl9KTtyZXR1cm4gZH1mdW5jdGlvbiBUKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7Yi50aGVuKGZ1bmN0aW9uKGIpe2lmKDA9PT1hLl9zdGF0dXN8fC0xPT09YS5fc3RhdHVzKWEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1ifSxmdW5jdGlvbihiKXtpZigwPT09YS5fc3RhdHVzfHwtMT09PWEuX3N0YXR1cylhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yn0pOy0xPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTAsYS5fcmVzdWx0PWIpfWlmKDE9PT1hLl9zdGF0dXMpcmV0dXJuIGEuX3Jlc3VsdC5kZWZhdWx0O3Rocm93IGEuX3Jlc3VsdDt9XG52YXIgVT17Y3VycmVudDpudWxsfSxWPXt0cmFuc2l0aW9uOm51bGx9LFc9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6VSxSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzpWLFJlYWN0Q3VycmVudE93bmVyOkt9O2V4cG9ydHMuQ2hpbGRyZW49e21hcDpTLGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe1MoYSxmdW5jdGlvbigpe2IuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxlKX0sY291bnQ6ZnVuY3Rpb24oYSl7dmFyIGI9MDtTKGEsZnVuY3Rpb24oKXtiKyt9KTtyZXR1cm4gYn0sdG9BcnJheTpmdW5jdGlvbihhKXtyZXR1cm4gUyhhLGZ1bmN0aW9uKGEpe3JldHVybiBhfSl8fFtdfSxvbmx5OmZ1bmN0aW9uKGEpe2lmKCFPKGEpKXRocm93IEVycm9yKFwiUmVhY3QuQ2hpbGRyZW4ub25seSBleHBlY3RlZCB0byByZWNlaXZlIGEgc2luZ2xlIFJlYWN0IGVsZW1lbnQgY2hpbGQuXCIpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9RTtleHBvcnRzLkZyYWdtZW50PXA7XG5leHBvcnRzLlByb2ZpbGVyPXI7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUc7ZXhwb3J0cy5TdHJpY3RNb2RlPXE7ZXhwb3J0cy5TdXNwZW5zZT13O2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9VztcbmV4cG9ydHMuY2xvbmVFbGVtZW50PWZ1bmN0aW9uKGEsYixlKXtpZihudWxsPT09YXx8dm9pZCAwPT09YSl0aHJvdyBFcnJvcihcIlJlYWN0LmNsb25lRWxlbWVudCguLi4pOiBUaGUgYXJndW1lbnQgbXVzdCBiZSBhIFJlYWN0IGVsZW1lbnQsIGJ1dCB5b3UgcGFzc2VkIFwiK2ErXCIuXCIpO3ZhciBkPUMoe30sYS5wcm9wcyksYz1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Sy5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGM9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilKLmNhbGwoYixmKSYmIUwuaGFzT3duUHJvcGVydHkoZikmJihkW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO1xuZm9yKHZhciBtPTA7bTxmO20rKylnW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49Z31yZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YyxyZWY6ayxwcm9wczpkLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEpe2E9eyQkdHlwZW9mOnUsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsLF9kZWZhdWx0VmFsdWU6bnVsbCxfZ2xvYmFsTmFtZTpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp0LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07XG5leHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PU87ZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp5LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6VH19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp4LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy5zdGFydFRyYW5zaXRpb249ZnVuY3Rpb24oYSl7dmFyIGI9Vi50cmFuc2l0aW9uO1YudHJhbnNpdGlvbj17fTt0cnl7YSgpfWZpbmFsbHl7Vi50cmFuc2l0aW9uPWJ9fTtleHBvcnRzLnVuc3RhYmxlX2FjdD1mdW5jdGlvbigpe3Rocm93IEVycm9yKFwiYWN0KC4uLikgaXMgbm90IHN1cHBvcnRlZCBpbiBwcm9kdWN0aW9uIGJ1aWxkcyBvZiBSZWFjdC5cIik7fTtcbmV4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZUNvbnRleHQoYSl9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VEZWZlcnJlZFZhbHVlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlRGVmZXJyZWRWYWx1ZShhKX07ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUlkPWZ1bmN0aW9uKCl7cmV0dXJuIFUuY3VycmVudC51c2VJZCgpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsZSl9O1xuZXhwb3J0cy51c2VJbnNlcnRpb25FZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUluc2VydGlvbkVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBVLmN1cnJlbnQudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlUmVkdWNlcihhLGIsZSl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBVLmN1cnJlbnQudXNlU3RhdGUoYSl9O2V4cG9ydHMudXNlU3luY0V4dGVybmFsU3RvcmU9ZnVuY3Rpb24oYSxiLGUpe3JldHVybiBVLmN1cnJlbnQudXNlU3luY0V4dGVybmFsU3RvcmUoYSxiLGUpfTtcbmV4cG9ydHMudXNlVHJhbnNpdGlvbj1mdW5jdGlvbigpe3JldHVybiBVLmN1cnJlbnQudXNlVHJhbnNpdGlvbigpfTtleHBvcnRzLnZlcnNpb249XCIxOC4yLjBcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0JztmdW5jdGlvbiBmKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDswPGM7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZigwPGcoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIGgoYSl7cmV0dXJuIDA9PT1hLmxlbmd0aD9udWxsOmFbMF19ZnVuY3Rpb24gayhhKXtpZigwPT09YS5sZW5ndGgpcmV0dXJuIG51bGw7dmFyIGI9YVswXSxjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGgsdz1lPj4+MTtkPHc7KXt2YXIgbT0yKihkKzEpLTEsQz1hW21dLG49bSsxLHg9YVtuXTtpZigwPmcoQyxjKSluPGUmJjA+Zyh4LEMpPyhhW2RdPXgsYVtuXT1jLGQ9bik6KGFbZF09QyxhW21dPWMsZD1tKTtlbHNlIGlmKG48ZSYmMD5nKHgsYykpYVtkXT14LGFbbl09YyxkPW47ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1cbmZ1bmN0aW9uIGcoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fXZhciByPVtdLHQ9W10sdT0xLHY9bnVsbCx5PTMsej0hMSxBPSExLEI9ITEsRD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0Om51bGwsRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDpudWxsLEY9XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBzZXRJbW1lZGlhdGU/c2V0SW1tZWRpYXRlOm51bGw7XG5cInVuZGVmaW5lZFwiIT09dHlwZW9mIG5hdmlnYXRvciYmdm9pZCAwIT09bmF2aWdhdG9yLnNjaGVkdWxpbmcmJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nLmlzSW5wdXRQZW5kaW5nJiZuYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZy5iaW5kKG5hdmlnYXRvci5zY2hlZHVsaW5nKTtmdW5jdGlvbiBHKGEpe2Zvcih2YXIgYj1oKHQpO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spayh0KTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKWsodCksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxmKHIsYik7ZWxzZSBicmVhaztiPWgodCl9fWZ1bmN0aW9uIEgoYSl7Qj0hMTtHKGEpO2lmKCFBKWlmKG51bGwhPT1oKHIpKUE9ITAsSShKKTtlbHNle3ZhciBiPWgodCk7bnVsbCE9PWImJksoSCxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBKKGEsYil7QT0hMTtCJiYoQj0hMSxFKEwpLEw9LTEpO3o9ITA7dmFyIGM9eTt0cnl7RyhiKTtmb3Iodj1oKHIpO251bGwhPT12JiYoISh2LmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhTSgpKTspe3ZhciBkPXYuY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3YuY2FsbGJhY2s9bnVsbDt5PXYucHJpb3JpdHlMZXZlbDt2YXIgZT1kKHYuZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT92LmNhbGxiYWNrPWU6dj09PWgocikmJmsocik7RyhiKX1lbHNlIGsocik7dj1oKHIpfWlmKG51bGwhPT12KXZhciB3PSEwO2Vsc2V7dmFyIG09aCh0KTtudWxsIT09bSYmSyhILG0uc3RhcnRUaW1lLWIpO3c9ITF9cmV0dXJuIHd9ZmluYWxseXt2PW51bGwseT1jLHo9ITF9fXZhciBOPSExLE89bnVsbCxMPS0xLFA9NSxRPS0xO1xuZnVuY3Rpb24gTSgpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpLVE8UD8hMTohMH1mdW5jdGlvbiBSKCl7aWYobnVsbCE9PU8pe3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7UT1hO3ZhciBiPSEwO3RyeXtiPU8oITAsYSl9ZmluYWxseXtiP1MoKTooTj0hMSxPPW51bGwpfX1lbHNlIE49ITF9dmFyIFM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEYpUz1mdW5jdGlvbigpe0YoUil9O2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIFQ9bmV3IE1lc3NhZ2VDaGFubmVsLFU9VC5wb3J0MjtULnBvcnQxLm9ubWVzc2FnZT1SO1M9ZnVuY3Rpb24oKXtVLnBvc3RNZXNzYWdlKG51bGwpfX1lbHNlIFM9ZnVuY3Rpb24oKXtEKFIsMCl9O2Z1bmN0aW9uIEkoYSl7Tz1hO058fChOPSEwLFMoKSl9ZnVuY3Rpb24gSyhhLGIpe0w9RChmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfVxuZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtleHBvcnRzLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5PTE7ZXhwb3J0cy51bnN0YWJsZV9Mb3dQcmlvcml0eT00O2V4cG9ydHMudW5zdGFibGVfTm9ybWFsUHJpb3JpdHk9MztleHBvcnRzLnVuc3RhYmxlX1Byb2ZpbGluZz1udWxsO2V4cG9ydHMudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHk9MjtleHBvcnRzLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrPWZ1bmN0aW9uKGEpe2EuY2FsbGJhY2s9bnVsbH07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe0F8fHp8fChBPSEwLEkoSikpfTtcbmV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOlA9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4geX07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBoKHIpfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKHkpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPXl9dmFyIGM9eTt5PWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXt5PWN9fTtleHBvcnRzLnVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7fTtcbmV4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPXk7eT1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7eT1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOnUrKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLGYodCxhKSxudWxsPT09aChyKSYmYT09PWgodCkmJihCPyhFKEwpLEw9LTEpOkI9ITAsSyhILGMtZCkpKTooYS5zb3J0SW5kZXg9ZSxmKHIsYSksQXx8enx8KEE9ITAsSShKKSkpO3JldHVybiBhfTtcbmV4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9TTtleHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj15O3JldHVybiBmdW5jdGlvbigpe3ZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXt5PWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIHN0eWxlX3RvX29iamVjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzdHlsZS10by1vYmplY3RcIikpO1xudmFyIHV0aWxpdGllc18xID0gcmVxdWlyZShcIi4vdXRpbGl0aWVzXCIpO1xuZnVuY3Rpb24gU3R5bGVUb0pTKHN0eWxlLCBvcHRpb25zKSB7XG4gICAgdmFyIG91dHB1dCA9IHt9O1xuICAgIGlmICghc3R5bGUgfHwgdHlwZW9mIHN0eWxlICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH1cbiAgICAoMCwgc3R5bGVfdG9fb2JqZWN0XzFbXCJkZWZhdWx0XCJdKShzdHlsZSwgZnVuY3Rpb24gKHByb3BlcnR5LCB2YWx1ZSkge1xuICAgICAgICBpZiAocHJvcGVydHkgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgIG91dHB1dFsoMCwgdXRpbGl0aWVzXzEuY2FtZWxDYXNlKShwcm9wZXJ0eSwgb3B0aW9ucyldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gb3V0cHV0O1xufVxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBTdHlsZVRvSlM7XG4iLCJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmNhbWVsQ2FzZSA9IHZvaWQgMDtcbnZhciBDVVNUT01fUFJPUEVSVFlfUkVHRVggPSAvXi0tW2EtekEtWjAtOS1dKyQvO1xudmFyIEhZUEhFTl9SRUdFWCA9IC8tKFthLXpdKS9nO1xudmFyIE5PX0hZUEhFTl9SRUdFWCA9IC9eW14tXSskLztcbnZhciBWRU5ET1JfUFJFRklYX1JFR0VYID0gL14tKHdlYmtpdHxtb3p8bXN8b3xraHRtbCktLztcbnZhciBNU19WRU5ET1JfUFJFRklYX1JFR0VYID0gL14tKG1zKS0vO1xudmFyIHNraXBDYW1lbENhc2UgPSBmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICByZXR1cm4gIXByb3BlcnR5IHx8XG4gICAgICAgIE5PX0hZUEhFTl9SRUdFWC50ZXN0KHByb3BlcnR5KSB8fFxuICAgICAgICBDVVNUT01fUFJPUEVSVFlfUkVHRVgudGVzdChwcm9wZXJ0eSk7XG59O1xudmFyIGNhcGl0YWxpemUgPSBmdW5jdGlvbiAobWF0Y2gsIGNoYXJhY3Rlcikge1xuICAgIHJldHVybiBjaGFyYWN0ZXIudG9VcHBlckNhc2UoKTtcbn07XG52YXIgdHJpbUh5cGhlbiA9IGZ1bmN0aW9uIChtYXRjaCwgcHJlZml4KSB7IHJldHVybiBcIlwiLmNvbmNhdChwcmVmaXgsIFwiLVwiKTsgfTtcbnZhciBjYW1lbENhc2UgPSBmdW5jdGlvbiAocHJvcGVydHksIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIGlmIChza2lwQ2FtZWxDYXNlKHByb3BlcnR5KSkge1xuICAgICAgICByZXR1cm4gcHJvcGVydHk7XG4gICAgfVxuICAgIHByb3BlcnR5ID0gcHJvcGVydHkudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAob3B0aW9ucy5yZWFjdENvbXBhdCkge1xuICAgICAgICBwcm9wZXJ0eSA9IHByb3BlcnR5LnJlcGxhY2UoTVNfVkVORE9SX1BSRUZJWF9SRUdFWCwgdHJpbUh5cGhlbik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBwcm9wZXJ0eSA9IHByb3BlcnR5LnJlcGxhY2UoVkVORE9SX1BSRUZJWF9SRUdFWCwgdHJpbUh5cGhlbik7XG4gICAgfVxuICAgIHJldHVybiBwcm9wZXJ0eS5yZXBsYWNlKEhZUEhFTl9SRUdFWCwgY2FwaXRhbGl6ZSk7XG59O1xuZXhwb3J0cy5jYW1lbENhc2UgPSBjYW1lbENhc2U7XG4iLCJ2YXIgcGFyc2UgPSByZXF1aXJlKCdpbmxpbmUtc3R5bGUtcGFyc2VyJyk7XG5cbi8qKlxuICogUGFyc2VzIGlubGluZSBzdHlsZSB0byBvYmplY3QuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIHJldHVybnMgeyAnbGluZS1oZWlnaHQnOiAnNDInIH1cbiAqIFN0eWxlVG9PYmplY3QoJ2xpbmUtaGVpZ2h0OiA0MjsnKTtcbiAqXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICAgICAgc3R5bGUgICAgICAtIFRoZSBpbmxpbmUgc3R5bGUuXG4gKiBAcGFyYW0gIHtGdW5jdGlvbn0gICAgW2l0ZXJhdG9yXSAtIFRoZSBpdGVyYXRvciBmdW5jdGlvbi5cbiAqIEByZXR1cm4ge251bGx8T2JqZWN0fVxuICovXG5mdW5jdGlvbiBTdHlsZVRvT2JqZWN0KHN0eWxlLCBpdGVyYXRvcikge1xuICB2YXIgb3V0cHV0ID0gbnVsbDtcbiAgaWYgKCFzdHlsZSB8fCB0eXBlb2Ygc3R5bGUgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG91dHB1dDtcbiAgfVxuXG4gIHZhciBkZWNsYXJhdGlvbjtcbiAgdmFyIGRlY2xhcmF0aW9ucyA9IHBhcnNlKHN0eWxlKTtcbiAgdmFyIGhhc0l0ZXJhdG9yID0gdHlwZW9mIGl0ZXJhdG9yID09PSAnZnVuY3Rpb24nO1xuICB2YXIgcHJvcGVydHk7XG4gIHZhciB2YWx1ZTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gZGVjbGFyYXRpb25zLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgZGVjbGFyYXRpb24gPSBkZWNsYXJhdGlvbnNbaV07XG4gICAgcHJvcGVydHkgPSBkZWNsYXJhdGlvbi5wcm9wZXJ0eTtcbiAgICB2YWx1ZSA9IGRlY2xhcmF0aW9uLnZhbHVlO1xuXG4gICAgaWYgKGhhc0l0ZXJhdG9yKSB7XG4gICAgICBpdGVyYXRvcihwcm9wZXJ0eSwgdmFsdWUsIGRlY2xhcmF0aW9uKTtcbiAgICB9IGVsc2UgaWYgKHZhbHVlKSB7XG4gICAgICBvdXRwdXQgfHwgKG91dHB1dCA9IHt9KTtcbiAgICAgIG91dHB1dFtwcm9wZXJ0eV0gPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0cHV0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFN0eWxlVG9PYmplY3Q7XG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gU3R5bGVUb09iamVjdDsgLy8gRVNNIHN1cHBvcnRcbiIsInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4vdHlwZW9mLmpzXCIpW1wiZGVmYXVsdFwiXTtcbmZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7XG4gIFwidXNlIHN0cmljdFwiOyAvKiEgcmVnZW5lcmF0b3ItcnVudGltZSAtLSBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy4gLS0gbGljZW5zZSAoTUlUKTogaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2Jsb2IvbWFpbi9MSUNFTlNFICovXG4gIG1vZHVsZS5leHBvcnRzID0gX3JlZ2VuZXJhdG9yUnVudGltZSA9IGZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7XG4gICAgcmV0dXJuIGV4cG9ydHM7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbiAgdmFyIGV4cG9ydHMgPSB7fSxcbiAgICBPcCA9IE9iamVjdC5wcm90b3R5cGUsXG4gICAgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHksXG4gICAgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgfHwgZnVuY3Rpb24gKG9iaiwga2V5LCBkZXNjKSB7XG4gICAgICBvYmpba2V5XSA9IGRlc2MudmFsdWU7XG4gICAgfSxcbiAgICAkU3ltYm9sID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgPyBTeW1ib2wgOiB7fSxcbiAgICBpdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuaXRlcmF0b3IgfHwgXCJAQGl0ZXJhdG9yXCIsXG4gICAgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiLFxuICAgIHRvU3RyaW5nVGFnU3ltYm9sID0gJFN5bWJvbC50b1N0cmluZ1RhZyB8fCBcIkBAdG9TdHJpbmdUYWdcIjtcbiAgZnVuY3Rpb24gZGVmaW5lKG9iaiwga2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6ICEwLFxuICAgICAgY29uZmlndXJhYmxlOiAhMCxcbiAgICAgIHdyaXRhYmxlOiAhMFxuICAgIH0pLCBvYmpba2V5XTtcbiAgfVxuICB0cnkge1xuICAgIGRlZmluZSh7fSwgXCJcIik7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGRlZmluZSA9IGZ1bmN0aW9uIGRlZmluZShvYmosIGtleSwgdmFsdWUpIHtcbiAgICAgIHJldHVybiBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yLFxuICAgICAgZ2VuZXJhdG9yID0gT2JqZWN0LmNyZWF0ZShwcm90b0dlbmVyYXRvci5wcm90b3R5cGUpLFxuICAgICAgY29udGV4dCA9IG5ldyBDb250ZXh0KHRyeUxvY3NMaXN0IHx8IFtdKTtcbiAgICByZXR1cm4gZGVmaW5lUHJvcGVydHkoZ2VuZXJhdG9yLCBcIl9pbnZva2VcIiwge1xuICAgICAgdmFsdWU6IG1ha2VJbnZva2VNZXRob2QoaW5uZXJGbiwgc2VsZiwgY29udGV4dClcbiAgICB9KSwgZ2VuZXJhdG9yO1xuICB9XG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBcIm5vcm1hbFwiLFxuICAgICAgICBhcmc6IGZuLmNhbGwob2JqLCBhcmcpXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJ0aHJvd1wiLFxuICAgICAgICBhcmc6IGVyclxuICAgICAgfTtcbiAgICB9XG4gIH1cbiAgZXhwb3J0cy53cmFwID0gd3JhcDtcbiAgdmFyIENvbnRpbnVlU2VudGluZWwgPSB7fTtcbiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG4gIHZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuICBkZWZpbmUoSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pO1xuICB2YXIgZ2V0UHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YsXG4gICAgTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90byAmJiBnZXRQcm90byhnZXRQcm90byh2YWx1ZXMoW10pKSk7XG4gIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICYmIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJiBoYXNPd24uY2FsbChOYXRpdmVJdGVyYXRvclByb3RvdHlwZSwgaXRlcmF0b3JTeW1ib2wpICYmIChJdGVyYXRvclByb3RvdHlwZSA9IE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgdmFyIEdwID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID0gR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoSXRlcmF0b3JQcm90b3R5cGUpO1xuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24gKG1ldGhvZCkge1xuICAgICAgZGVmaW5lKHByb3RvdHlwZSwgbWV0aG9kLCBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnZva2UobWV0aG9kLCBhcmcpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gQXN5bmNJdGVyYXRvcihnZW5lcmF0b3IsIFByb21pc2VJbXBsKSB7XG4gICAgZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChnZW5lcmF0b3JbbWV0aG9kXSwgZ2VuZXJhdG9yLCBhcmcpO1xuICAgICAgaWYgKFwidGhyb3dcIiAhPT0gcmVjb3JkLnR5cGUpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlY29yZC5hcmcsXG4gICAgICAgICAgdmFsdWUgPSByZXN1bHQudmFsdWU7XG4gICAgICAgIHJldHVybiB2YWx1ZSAmJiBcIm9iamVjdFwiID09IF90eXBlb2YodmFsdWUpICYmIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikgPyBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaW52b2tlKFwibmV4dFwiLCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgIGludm9rZShcInRocm93XCIsIGVyciwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgfSkgOiBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uICh1bndyYXBwZWQpIHtcbiAgICAgICAgICByZXN1bHQudmFsdWUgPSB1bndyYXBwZWQsIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIGludm9rZShcInRocm93XCIsIGVycm9yLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJlamVjdChyZWNvcmQuYXJnKTtcbiAgICB9XG4gICAgdmFyIHByZXZpb3VzUHJvbWlzZTtcbiAgICBkZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9pbnZva2VcIiwge1xuICAgICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKG1ldGhvZCwgYXJnKSB7XG4gICAgICAgIGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkge1xuICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZUltcGwoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgICAgaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcmV2aW91c1Byb21pc2UgPSBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZywgY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcpIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHtcbiAgICB2YXIgc3RhdGUgPSBcInN1c3BlbmRlZFN0YXJ0XCI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtZXRob2QsIGFyZykge1xuICAgICAgaWYgKFwiZXhlY3V0aW5nXCIgPT09IHN0YXRlKSB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpO1xuICAgICAgaWYgKFwiY29tcGxldGVkXCIgPT09IHN0YXRlKSB7XG4gICAgICAgIGlmIChcInRocm93XCIgPT09IG1ldGhvZCkgdGhyb3cgYXJnO1xuICAgICAgICByZXR1cm4gZG9uZVJlc3VsdCgpO1xuICAgICAgfVxuICAgICAgZm9yIChjb250ZXh0Lm1ldGhvZCA9IG1ldGhvZCwgY29udGV4dC5hcmcgPSBhcmc7Oykge1xuICAgICAgICB2YXIgZGVsZWdhdGUgPSBjb250ZXh0LmRlbGVnYXRlO1xuICAgICAgICBpZiAoZGVsZWdhdGUpIHtcbiAgICAgICAgICB2YXIgZGVsZWdhdGVSZXN1bHQgPSBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcbiAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQpIHtcbiAgICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCA9PT0gQ29udGludWVTZW50aW5lbCkgY29udGludWU7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVSZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChcIm5leHRcIiA9PT0gY29udGV4dC5tZXRob2QpIGNvbnRleHQuc2VudCA9IGNvbnRleHQuX3NlbnQgPSBjb250ZXh0LmFyZztlbHNlIGlmIChcInRocm93XCIgPT09IGNvbnRleHQubWV0aG9kKSB7XG4gICAgICAgICAgaWYgKFwic3VzcGVuZGVkU3RhcnRcIiA9PT0gc3RhdGUpIHRocm93IHN0YXRlID0gXCJjb21wbGV0ZWRcIiwgY29udGV4dC5hcmc7XG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG4gICAgICAgIH0gZWxzZSBcInJldHVyblwiID09PSBjb250ZXh0Lm1ldGhvZCAmJiBjb250ZXh0LmFicnVwdChcInJldHVyblwiLCBjb250ZXh0LmFyZyk7XG4gICAgICAgIHN0YXRlID0gXCJleGVjdXRpbmdcIjtcbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAoXCJub3JtYWxcIiA9PT0gcmVjb3JkLnR5cGUpIHtcbiAgICAgICAgICBpZiAoc3RhdGUgPSBjb250ZXh0LmRvbmUgPyBcImNvbXBsZXRlZFwiIDogXCJzdXNwZW5kZWRZaWVsZFwiLCByZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHJlY29yZC5hcmcsXG4gICAgICAgICAgICBkb25lOiBjb250ZXh0LmRvbmVcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIFwidGhyb3dcIiA9PT0gcmVjb3JkLnR5cGUgJiYgKHN0YXRlID0gXCJjb21wbGV0ZWRcIiwgY29udGV4dC5tZXRob2QgPSBcInRocm93XCIsIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZyk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KSB7XG4gICAgdmFyIG1ldGhvZE5hbWUgPSBjb250ZXh0Lm1ldGhvZCxcbiAgICAgIG1ldGhvZCA9IGRlbGVnYXRlLml0ZXJhdG9yW21ldGhvZE5hbWVdO1xuICAgIGlmICh1bmRlZmluZWQgPT09IG1ldGhvZCkgcmV0dXJuIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBcInRocm93XCIgPT09IG1ldGhvZE5hbWUgJiYgZGVsZWdhdGUuaXRlcmF0b3JbXCJyZXR1cm5cIl0gJiYgKGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIiwgY29udGV4dC5hcmcgPSB1bmRlZmluZWQsIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpLCBcInRocm93XCIgPT09IGNvbnRleHQubWV0aG9kKSB8fCBcInJldHVyblwiICE9PSBtZXRob2ROYW1lICYmIChjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAnXCIgKyBtZXRob2ROYW1lICsgXCInIG1ldGhvZFwiKSksIENvbnRpbnVlU2VudGluZWw7XG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcbiAgICBpZiAoXCJ0aHJvd1wiID09PSByZWNvcmQudHlwZSkgcmV0dXJuIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiLCBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmcsIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBDb250aW51ZVNlbnRpbmVsO1xuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcbiAgICByZXR1cm4gaW5mbyA/IGluZm8uZG9uZSA/IChjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZSwgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYywgXCJyZXR1cm5cIiAhPT0gY29udGV4dC5tZXRob2QgJiYgKGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCIsIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkKSwgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGwsIENvbnRpbnVlU2VudGluZWwpIDogaW5mbyA6IChjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIiwgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIiksIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsLCBDb250aW51ZVNlbnRpbmVsKTtcbiAgfVxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHtcbiAgICAgIHRyeUxvYzogbG9jc1swXVxuICAgIH07XG4gICAgMSBpbiBsb2NzICYmIChlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV0pLCAyIGluIGxvY3MgJiYgKGVudHJ5LmZpbmFsbHlMb2MgPSBsb2NzWzJdLCBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM10pLCB0aGlzLnRyeUVudHJpZXMucHVzaChlbnRyeSk7XG4gIH1cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIiwgZGVsZXRlIHJlY29yZC5hcmcsIGVudHJ5LmNvbXBsZXRpb24gPSByZWNvcmQ7XG4gIH1cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIHRoaXMudHJ5RW50cmllcyA9IFt7XG4gICAgICB0cnlMb2M6IFwicm9vdFwiXG4gICAgfV0sIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKSwgdGhpcy5yZXNldCghMCk7XG4gIH1cbiAgZnVuY3Rpb24gdmFsdWVzKGl0ZXJhYmxlKSB7XG4gICAgaWYgKGl0ZXJhYmxlKSB7XG4gICAgICB2YXIgaXRlcmF0b3JNZXRob2QgPSBpdGVyYWJsZVtpdGVyYXRvclN5bWJvbF07XG4gICAgICBpZiAoaXRlcmF0b3JNZXRob2QpIHJldHVybiBpdGVyYXRvck1ldGhvZC5jYWxsKGl0ZXJhYmxlKTtcbiAgICAgIGlmIChcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGl0ZXJhYmxlLm5leHQpIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIGlmICghaXNOYU4oaXRlcmFibGUubGVuZ3RoKSkge1xuICAgICAgICB2YXIgaSA9IC0xLFxuICAgICAgICAgIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgICAgZm9yICg7ICsraSA8IGl0ZXJhYmxlLmxlbmd0aDspIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHJldHVybiBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV0sIG5leHQuZG9uZSA9ICExLCBuZXh0O1xuICAgICAgICAgICAgcmV0dXJuIG5leHQudmFsdWUgPSB1bmRlZmluZWQsIG5leHQuZG9uZSA9ICEwLCBuZXh0O1xuICAgICAgICAgIH07XG4gICAgICAgIHJldHVybiBuZXh0Lm5leHQgPSBuZXh0O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgbmV4dDogZG9uZVJlc3VsdFxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZG9uZVJlc3VsdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgIGRvbmU6ICEwXG4gICAgfTtcbiAgfVxuICByZXR1cm4gR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGRlZmluZVByb3BlcnR5KEdwLCBcImNvbnN0cnVjdG9yXCIsIHtcbiAgICB2YWx1ZTogR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsXG4gICAgY29uZmlndXJhYmxlOiAhMFxuICB9KSwgZGVmaW5lUHJvcGVydHkoR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIFwiY29uc3RydWN0b3JcIiwge1xuICAgIHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvbixcbiAgICBjb25maWd1cmFibGU6ICEwXG4gIH0pLCBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IGRlZmluZShHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yRnVuY3Rpb25cIiksIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uIChnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZ2VuRnVuICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gISFjdG9yICYmIChjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIgPT09IChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkpO1xuICB9LCBleHBvcnRzLm1hcmsgPSBmdW5jdGlvbiAoZ2VuRnVuKSB7XG4gICAgcmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKSA6IChnZW5GdW4uX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGRlZmluZShnZW5GdW4sIHRvU3RyaW5nVGFnU3ltYm9sLCBcIkdlbmVyYXRvckZ1bmN0aW9uXCIpKSwgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApLCBnZW5GdW47XG4gIH0sIGV4cG9ydHMuYXdyYXAgPSBmdW5jdGlvbiAoYXJnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIF9fYXdhaXQ6IGFyZ1xuICAgIH07XG4gIH0sIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSksIGRlZmluZShBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSwgYXN5bmNJdGVyYXRvclN5bWJvbCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9KSwgZXhwb3J0cy5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvciwgZXhwb3J0cy5hc3luYyA9IGZ1bmN0aW9uIChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCwgUHJvbWlzZUltcGwpIHtcbiAgICB2b2lkIDAgPT09IFByb21pc2VJbXBsICYmIChQcm9taXNlSW1wbCA9IFByb21pc2UpO1xuICAgIHZhciBpdGVyID0gbmV3IEFzeW5jSXRlcmF0b3Iod3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCksIFByb21pc2VJbXBsKTtcbiAgICByZXR1cm4gZXhwb3J0cy5pc0dlbmVyYXRvckZ1bmN0aW9uKG91dGVyRm4pID8gaXRlciA6IGl0ZXIubmV4dCgpLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIHJlc3VsdC5kb25lID8gcmVzdWx0LnZhbHVlIDogaXRlci5uZXh0KCk7XG4gICAgfSk7XG4gIH0sIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhHcCksIGRlZmluZShHcCwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yXCIpLCBkZWZpbmUoR3AsIGl0ZXJhdG9yU3ltYm9sLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pLCBkZWZpbmUoR3AsIFwidG9TdHJpbmdcIiwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9KSwgZXhwb3J0cy5rZXlzID0gZnVuY3Rpb24gKHZhbCkge1xuICAgIHZhciBvYmplY3QgPSBPYmplY3QodmFsKSxcbiAgICAgIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSBrZXlzLnB1c2goa2V5KTtcbiAgICByZXR1cm4ga2V5cy5yZXZlcnNlKCksIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICBmb3IgKDsga2V5cy5sZW5ndGg7KSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkgcmV0dXJuIG5leHQudmFsdWUgPSBrZXksIG5leHQuZG9uZSA9ICExLCBuZXh0O1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5leHQuZG9uZSA9ICEwLCBuZXh0O1xuICAgIH07XG4gIH0sIGV4cG9ydHMudmFsdWVzID0gdmFsdWVzLCBDb250ZXh0LnByb3RvdHlwZSA9IHtcbiAgICBjb25zdHJ1Y3RvcjogQ29udGV4dCxcbiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoc2tpcFRlbXBSZXNldCkge1xuICAgICAgaWYgKHRoaXMucHJldiA9IDAsIHRoaXMubmV4dCA9IDAsIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQsIHRoaXMuZG9uZSA9ICExLCB0aGlzLmRlbGVnYXRlID0gbnVsbCwgdGhpcy5tZXRob2QgPSBcIm5leHRcIiwgdGhpcy5hcmcgPSB1bmRlZmluZWQsIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpLCAhc2tpcFRlbXBSZXNldCkgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSBcInRcIiA9PT0gbmFtZS5jaGFyQXQoMCkgJiYgaGFzT3duLmNhbGwodGhpcywgbmFtZSkgJiYgIWlzTmFOKCtuYW1lLnNsaWNlKDEpKSAmJiAodGhpc1tuYW1lXSA9IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBzdG9wOiBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgdGhpcy5kb25lID0gITA7XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHRoaXMudHJ5RW50cmllc1swXS5jb21wbGV0aW9uO1xuICAgICAgaWYgKFwidGhyb3dcIiA9PT0gcm9vdFJlY29yZC50eXBlKSB0aHJvdyByb290UmVjb3JkLmFyZztcbiAgICAgIHJldHVybiB0aGlzLnJ2YWw7XG4gICAgfSxcbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24gZGlzcGF0Y2hFeGNlcHRpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB0aHJvdyBleGNlcHRpb247XG4gICAgICB2YXIgY29udGV4dCA9IHRoaXM7XG4gICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHtcbiAgICAgICAgcmV0dXJuIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiLCByZWNvcmQuYXJnID0gZXhjZXB0aW9uLCBjb250ZXh0Lm5leHQgPSBsb2MsIGNhdWdodCAmJiAoY29udGV4dC5tZXRob2QgPSBcIm5leHRcIiwgY29udGV4dC5hcmcgPSB1bmRlZmluZWQpLCAhIWNhdWdodDtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldLFxuICAgICAgICAgIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG4gICAgICAgIGlmIChcInJvb3RcIiA9PT0gZW50cnkudHJ5TG9jKSByZXR1cm4gaGFuZGxlKFwiZW5kXCIpO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpLFxuICAgICAgICAgICAgaGFzRmluYWxseSA9IGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIik7XG4gICAgICAgICAgaWYgKGhhc0NhdGNoICYmIGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgITApO1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoZW50cnkuZmluYWxseUxvYyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNDYXRjaCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCAhMCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICghaGFzRmluYWxseSkgdGhyb3cgbmV3IEVycm9yKFwidHJ5IHN0YXRlbWVudCB3aXRob3V0IGNhdGNoIG9yIGZpbmFsbHlcIik7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGFicnVwdDogZnVuY3Rpb24gYWJydXB0KHR5cGUsIGFyZykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmIGhhc093bi5jYWxsKGVudHJ5LCBcImZpbmFsbHlMb2NcIikgJiYgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZmluYWxseUVudHJ5ICYmIChcImJyZWFrXCIgPT09IHR5cGUgfHwgXCJjb250aW51ZVwiID09PSB0eXBlKSAmJiBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJiBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MgJiYgKGZpbmFsbHlFbnRyeSA9IG51bGwpO1xuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZXR1cm4gcmVjb3JkLnR5cGUgPSB0eXBlLCByZWNvcmQuYXJnID0gYXJnLCBmaW5hbGx5RW50cnkgPyAodGhpcy5tZXRob2QgPSBcIm5leHRcIiwgdGhpcy5uZXh0ID0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MsIENvbnRpbnVlU2VudGluZWwpIDogdGhpcy5jb21wbGV0ZShyZWNvcmQpO1xuICAgIH0sXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChcInRocm93XCIgPT09IHJlY29yZC50eXBlKSB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgcmV0dXJuIFwiYnJlYWtcIiA9PT0gcmVjb3JkLnR5cGUgfHwgXCJjb250aW51ZVwiID09PSByZWNvcmQudHlwZSA/IHRoaXMubmV4dCA9IHJlY29yZC5hcmcgOiBcInJldHVyblwiID09PSByZWNvcmQudHlwZSA/ICh0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmcsIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIiwgdGhpcy5uZXh0ID0gXCJlbmRcIikgOiBcIm5vcm1hbFwiID09PSByZWNvcmQudHlwZSAmJiBhZnRlckxvYyAmJiAodGhpcy5uZXh0ID0gYWZ0ZXJMb2MpLCBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG4gICAgZmluaXNoOiBmdW5jdGlvbiBmaW5pc2goZmluYWxseUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS5maW5hbGx5TG9jID09PSBmaW5hbGx5TG9jKSByZXR1cm4gdGhpcy5jb21wbGV0ZShlbnRyeS5jb21wbGV0aW9uLCBlbnRyeS5hZnRlckxvYyksIHJlc2V0VHJ5RW50cnkoZW50cnkpLCBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgfVxuICAgIH0sXG4gICAgXCJjYXRjaFwiOiBmdW5jdGlvbiBfY2F0Y2godHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gdHJ5TG9jKSB7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG4gICAgICAgICAgaWYgKFwidGhyb3dcIiA9PT0gcmVjb3JkLnR5cGUpIHtcbiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnO1xuICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRocm93IG5ldyBFcnJvcihcImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdFwiKTtcbiAgICB9LFxuICAgIGRlbGVnYXRlWWllbGQ6IGZ1bmN0aW9uIGRlbGVnYXRlWWllbGQoaXRlcmFibGUsIHJlc3VsdE5hbWUsIG5leHRMb2MpIHtcbiAgICAgIHJldHVybiB0aGlzLmRlbGVnYXRlID0ge1xuICAgICAgICBpdGVyYXRvcjogdmFsdWVzKGl0ZXJhYmxlKSxcbiAgICAgICAgcmVzdWx0TmFtZTogcmVzdWx0TmFtZSxcbiAgICAgICAgbmV4dExvYzogbmV4dExvY1xuICAgICAgfSwgXCJuZXh0XCIgPT09IHRoaXMubWV0aG9kICYmICh0aGlzLmFyZyA9IHVuZGVmaW5lZCksIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9LCBleHBvcnRzO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfcmVnZW5lcmF0b3JSdW50aW1lLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7IiwiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIHJldHVybiAobW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICB9IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF90eXBlb2Yob2JqKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyIsIi8vIFRPRE8oQmFiZWwgOCk6IFJlbW92ZSB0aGlzIGZpbGUuXG5cbnZhciBydW50aW1lID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lXCIpKCk7XG5tb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG5cbi8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vcGFja2FnZXMvcnVudGltZS9ydW50aW1lLmpzI0w3MzY9XG50cnkge1xuICByZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xufSBjYXRjaCAoYWNjaWRlbnRhbFN0cmljdE1vZGUpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xuICB9IGVsc2Uge1xuICAgIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG4gIH1cbn1cbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gIHRyeSB7XG4gICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICBhcmdzID0gYXJndW1lbnRzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICB9KTtcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldO1xuICByZXR1cm4gYXJyMjtcbn0iLCJpbXBvcnQgYXJyYXlXaXRoSG9sZXMgZnJvbSBcIi4vYXJyYXlXaXRoSG9sZXMuanNcIjtcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXlMaW1pdCBmcm9tIFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qc1wiO1xuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCI7XG5pbXBvcnQgbm9uSXRlcmFibGVSZXN0IGZyb20gXCIuL25vbkl0ZXJhYmxlUmVzdC5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gIHJldHVybiBhcnJheVdpdGhIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICB2YXIgX2kgPSBudWxsID09IGFyciA/IG51bGwgOiBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiBTeW1ib2wgJiYgYXJyW1N5bWJvbC5pdGVyYXRvcl0gfHwgYXJyW1wiQEBpdGVyYXRvclwiXTtcbiAgaWYgKG51bGwgIT0gX2kpIHtcbiAgICB2YXIgX3MsXG4gICAgICBfZSxcbiAgICAgIF94LFxuICAgICAgX3IsXG4gICAgICBfYXJyID0gW10sXG4gICAgICBfbiA9ICEwLFxuICAgICAgX2QgPSAhMTtcbiAgICB0cnkge1xuICAgICAgaWYgKF94ID0gKF9pID0gX2kuY2FsbChhcnIpKS5uZXh0LCAwID09PSBpKSB7XG4gICAgICAgIGlmIChPYmplY3QoX2kpICE9PSBfaSkgcmV0dXJuO1xuICAgICAgICBfbiA9ICExO1xuICAgICAgfSBlbHNlIGZvciAoOyAhKF9uID0gKF9zID0gX3guY2FsbChfaSkpLmRvbmUpICYmIChfYXJyLnB1c2goX3MudmFsdWUpLCBfYXJyLmxlbmd0aCAhPT0gaSk7IF9uID0gITApO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgX2QgPSAhMCwgX2UgPSBlcnI7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICghX24gJiYgbnVsbCAhPSBfaVtcInJldHVyblwiXSAmJiAoX3IgPSBfaVtcInJldHVyblwiXSgpLCBPYmplY3QoX3IpICE9PSBfcikpIHJldHVybjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBfYXJyO1xuICB9XG59IiwiaW1wb3J0IGFycmF5TGlrZVRvQXJyYXkgZnJvbSBcIi4vYXJyYXlMaWtlVG9BcnJheS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikge1xuICBpZiAoIW8pIHJldHVybjtcbiAgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIGFycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgfSA6IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICB9LCBfdHlwZW9mKG9iaik7XG59IiwiaW1wb3J0IHRvUHJvcGVydHlLZXkgZnJvbSBcIi4vdG9Qcm9wZXJ0eUtleS5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBrZXkgPSB0b1Byb3BlcnR5S2V5KGtleSk7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBvYmo7XG59IiwiaW1wb3J0IF90eXBlb2YgZnJvbSBcIi4vdHlwZW9mLmpzXCI7XG5pbXBvcnQgdG9QcmltaXRpdmUgZnJvbSBcIi4vdG9QcmltaXRpdmUuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KGFyZykge1xuICB2YXIga2V5ID0gdG9QcmltaXRpdmUoYXJnLCBcInN0cmluZ1wiKTtcbiAgcmV0dXJuIF90eXBlb2Yoa2V5KSA9PT0gXCJzeW1ib2xcIiA/IGtleSA6IFN0cmluZyhrZXkpO1xufSIsImltcG9ydCBfdHlwZW9mIGZyb20gXCIuL3R5cGVvZi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3RvUHJpbWl0aXZlKGlucHV0LCBoaW50KSB7XG4gIGlmIChfdHlwZW9mKGlucHV0KSAhPT0gXCJvYmplY3RcIiB8fCBpbnB1dCA9PT0gbnVsbCkgcmV0dXJuIGlucHV0O1xuICB2YXIgcHJpbSA9IGlucHV0W1N5bWJvbC50b1ByaW1pdGl2ZV07XG4gIGlmIChwcmltICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgcmVzID0gcHJpbS5jYWxsKGlucHV0LCBoaW50IHx8IFwiZGVmYXVsdFwiKTtcbiAgICBpZiAoX3R5cGVvZihyZXMpICE9PSBcIm9iamVjdFwiKSByZXR1cm4gcmVzO1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTtcbiAgfVxuICByZXR1cm4gKGhpbnQgPT09IFwic3RyaW5nXCIgPyBTdHJpbmcgOiBOdW1iZXIpKGlucHV0KTtcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNldHRpbmdTZWN0aW9uKCB7IHRpdGxlLCBjaGlsZHJlbn0gOiB7dGl0bGU6IHN0cmluZywgY2hpbGRyZW4gOiBhbnkgfSApe1xuICAgIHJldHVybiAoXG4gICAgPD5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJibS1zZXR0aW5nLXNlY3Rpb25cIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm0tc2V0dGluZy1zZWN0aW9uLWhlYWRlclwiPlxuICAgICAgICAgICAgICAgIDxoMz57IHRpdGxlIH08L2gzPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYm0tc2V0dGluZy1zZWN0aW9uLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICB7IGNoaWxkcmVuIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8Lz4pXG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cblxuZXhwb3J0IGludGVyZmFjZSBUYWJ7XG4gICAgc2x1Zzogc3RyaW5nLFxuICAgIGxhYmVsOiBzdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTmF2VGFicyh7IHRhYnMsIGFjdGl2ZVRhYiwgc2V0QWN0aXZlVGFiIH06IHsgdGFiczogVGFiW10sIGFjdGl2ZVRhYjogc3RyaW5nLCBzZXRBY3RpdmVUYWI6IGFueSB9ICl7XG5cbiAgICByZXR1cm4gKDxoMiBjbGFzc05hbWU9XCJuYXYtdGFiLXdyYXBwZXJcIj5cbiAgICAgICAgeyB0YWJzLm1hcCgoIHRhYiApID0+IChcbiAgICAgICAgICAgIDxhIGtleT17dGFiLnNsdWd9IGhyZWY9e1wiI1wiICsgdGFiLnNsdWd9XG4gICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgc2V0QWN0aXZlVGFiKCB0YWIuc2x1ZyApXG4gICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgY2xhc3NOYW1lPXsgXCJuYXYtdGFiIFwiICsgKCAodGFiLnNsdWcgPT09IGFjdGl2ZVRhYikgJiYgJyBuYXYtdGFiLWFjdGl2ZScgKSB9PlxuICAgICAgICAgICAgICAgIHsgdGFiLmxhYmVsIH1cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgKSApIH1cbiAgICA8L2gyPik7XG59XG4iLCIvLyBAdHMtaWdub3JlXG5leHBvcnQgY29uc3QgeyBfXywgX24sIF9ueCwgX3gsIHNwcmludGYgfSA9IHdpbmRvdy53cC5pMThuO1xuLy8gQHRzLWlnbm9yZVxuIiwiaW1wb3J0IGF4aW9zLCB7QXhpb3MsIEF4aW9zUmVxdWVzdENvbmZpZ30gZnJvbSBcImF4aW9zXCI7XHJcblxyXG5leHBvcnQgbGV0IGFwaSA6IEF4aW9zO1xyXG5cclxuc2V0dXBBcGkoe1xyXG4gICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgYmFzZVVSTDogQmV0dGVyX01lc3NhZ2VzX0FkbWluWydyZXN0VXJsJ10sXHJcbiAgICAvLyBAdHMtaWdub3JlXHJcbiAgICBoZWFkZXJzOiB7ICdYLVdQLU5vbmNlJzogQmV0dGVyX01lc3NhZ2VzX0FkbWluWydub25jZSddIH1cclxufSk7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0dXBBcGkoY29uZmlnIDogQXhpb3NSZXF1ZXN0Q29uZmlnKXtcclxuICAgIGFwaSA9IGF4aW9zLmNyZWF0ZSggY29uZmlnICk7XHJcbn1cclxuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtfeH0gZnJvbSBcIi4uL2dsb2JhbHNcIjtcbmltcG9ydCB7YXBpfSBmcm9tIFwiLi4vYXBpXCI7XG5cbmludGVyZmFjZSBJbWFnZVVwbG9hZEludGVyZmFjZXtcbiAgICBvcHRpb246IHN0cmluZyxcbiAgICB1cGxvYWRlZEltYWdlOiBzdHJpbmcsXG4gICAgd2lkdGg6IG51bWJlcixcbiAgICBoZWlnaHQ6IG51bWJlclxufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW1hZ2VVcGxvYWQoIHByb3BzOiBJbWFnZVVwbG9hZEludGVyZmFjZSApe1xuICAgIGNvbnN0IFtzZWxlY3RlZEZpbGUsIHNldFNlbGVjdGVkRmlsZV0gPSB1c2VTdGF0ZShudWxsKTtcblxuICAgIHVzZUVmZmVjdCggKCkgPT4ge1xuXG4gICAgfSwgW10gKVxuXG4gICAgY29uc3QgaW5wdXQgPSB1c2VSZWYoKVxuXG4gICAgY29uc3QgdXBsb2FkRmlsZSA9IGFzeW5jICggZXZlbnQgOiBhbnkgKSA9PiB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJrZXlcIiwgcHJvcHMub3B0aW9uKTtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKFwiZmlsZVwiLCBzZWxlY3RlZEZpbGUpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaS5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6IFwicG9zdFwiLFxuICAgICAgICAgICAgICAgIHVybDogXCJhcHAvdXBsb2FkRmlsZVwiLFxuICAgICAgICAgICAgICAgIGRhdGE6IGZvcm1EYXRhLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIgfSxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIGVycm9yIClcbiAgICAgICAgICAgIGFsZXJ0KGVycm9yLnJlc3BvbnNlLmRhdGEubWVzc2FnZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZUZpbGVTZWxlY3QgPSAoZXZlbnQgOiBhbnkpID0+IHtcbiAgICAgICAgc2V0U2VsZWN0ZWRGaWxlKGV2ZW50LnRhcmdldC5maWxlc1swXSlcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJtLWltYWdlLXVwbG9hZFwiPlxuICAgICAgICAgICAgeyBwcm9wcy51cGxvYWRlZEltYWdlICYmIDxkaXYgY2xhc3NOYW1lPVwiYm0taW1hZ2UtaG9sZGVyXCIgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICB3aWR0aCAgOiBwcm9wcy53aWR0aCxcbiAgICAgICAgICAgICAgICBoZWlnaHQgOiBwcm9wcy5oZWlnaHRcbiAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPXtcImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxcIiArIHByb3BzLnVwbG9hZGVkSW1hZ2V9IHdpZHRoPXtwcm9wcy53aWR0aH0gaGVpZ2h0PXtwcm9wcy5oZWlnaHR9IC8+XG4gICAgICAgICAgICA8L2Rpdj4gfVxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJibS1pbWFnZS1hY3Rpb25zXCI+XG4gICAgICAgICAgICAgICAgPGlucHV0IHJlZj17aW5wdXR9IHR5cGU9XCJmaWxlXCIgYWNjZXB0PVwiLnBuZ1wiIG9uQ2hhbmdlPXtoYW5kbGVGaWxlU2VsZWN0fSAvPlxuXG4gICAgICAgICAgICAgICAgeyBzZWxlY3RlZEZpbGUgJiYgPGJ1dHRvbiBjbGFzc05hbWU9XCJidXR0b25cIiBvbkNsaWNrPXt1cGxvYWRGaWxlfT57IF94KCdVcGxvYWQnLCAnV1AgQWRtaW4nLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfTwvYnV0dG9uPiB9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufVxuIiwiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtCdW5kbGV9IGZyb20gXCIuLi9hcGkvaW9zL2dldC1idW5kbGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9iaWxlU2V0dGluZ3N7XG4gICAgYXBwbGljYXRpb25OYW1lOiBzdHJpbmcsXG4gICAgYXBwSWNvbiAgIDogc3RyaW5nLFxuICAgIGFwcFNwbGFzaCA6IHN0cmluZyxcbiAgICBpb3NBcGkgOiB7XG4gICAgICAgIGtleUlEPyA6IHN0cmluZyxcbiAgICAgICAgaXNzdWVySUQ/IDogc3RyaW5nLFxuICAgICAgICBhcGlLZXk/IDogc3RyaW5nXG4gICAgfSxcbiAgICBpb3NCdW5kbGVEZXY6IHN0cmluZyxcbiAgICBpb3NCdW5kbGVTZXJ2aWNlRGV2OiBzdHJpbmdcbiAgICBpb3NDZXJ0aWZpY2F0ZURldjogc3RyaW5nLFxuICAgIGlvc0NlcnRpZmljYXRlU2VydmljZURldjogc3RyaW5nLFxuICAgIGlvc0RldmljZXM6IHN0cmluZ1tdLFxuICAgIGlvc1Byb2ZpbGVEZXY6IHN0cmluZyxcbiAgICBpb3NQcm9maWxlU2VydmljZURldjogc3RyaW5nLFxuICAgIGlvc0J1bmRsZVByb2Q6IHN0cmluZyxcbn1cblxuaW50ZXJmYWNlIFNldHRpbmdzQ29udGV4dFR5cGUge1xuICAgIHNldHRpbmdzOiBNb2JpbGVTZXR0aW5ncyxcbiAgICBzYXZlU2V0dGluZ3M6IGFueSxcbiAgICBkaXNwYXRjaFNldHRpbmc6IGFueSxcbiAgICBpb3NCdW5kbGVzOiBCdW5kbGVbXVxufVxuXG5leHBvcnQgY29uc3QgU2V0dGluZ3NDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxTZXR0aW5nc0NvbnRleHRUeXBlPih7XG4gICAgc2V0dGluZ3M6IG51bGwsXG4gICAgc2F2ZVNldHRpbmdzOiBudWxsLFxuICAgIGRpc3BhdGNoU2V0dGluZzogbnVsbCxcbiAgICBpb3NCdW5kbGVzOiBudWxsXG59KTtcbiIsImltcG9ydCBIVE1MUmVhY3RQYXJzZXIgZnJvbSAnLi9pbmRleC5qcyc7XG5cbmV4cG9ydCB2YXIgZG9tVG9SZWFjdCA9IEhUTUxSZWFjdFBhcnNlci5kb21Ub1JlYWN0O1xuZXhwb3J0IHZhciBodG1sVG9ET00gPSBIVE1MUmVhY3RQYXJzZXIuaHRtbFRvRE9NO1xuZXhwb3J0IHZhciBhdHRyaWJ1dGVzVG9Qcm9wcyA9IEhUTUxSZWFjdFBhcnNlci5hdHRyaWJ1dGVzVG9Qcm9wcztcblxuLy8gZG9taGFuZGxlclxuZXhwb3J0IHZhciBDb21tZW50ID0gSFRNTFJlYWN0UGFyc2VyLkNvbW1lbnQ7XG5leHBvcnQgdmFyIEVsZW1lbnQgPSBIVE1MUmVhY3RQYXJzZXIuRWxlbWVudDtcbmV4cG9ydCB2YXIgUHJvY2Vzc2luZ0luc3RydWN0aW9uID0gSFRNTFJlYWN0UGFyc2VyLlByb2Nlc3NpbmdJbnN0cnVjdGlvbjtcbmV4cG9ydCB2YXIgVGV4dCA9IEhUTUxSZWFjdFBhcnNlci5UZXh0O1xuXG5leHBvcnQgZGVmYXVsdCBIVE1MUmVhY3RQYXJzZXI7XG4iLCJpbXBvcnQge194LCBzcHJpbnRmfSBmcm9tIFwiLi4vLi4vZ2xvYmFsc1wiO1xuaW1wb3J0IFNldHRpbmdTZWN0aW9uIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3NldHRpbmctc2VjdGlvblwiO1xuaW1wb3J0IHBhcnNlIGZyb20gXCJodG1sLXJlYWN0LXBhcnNlclwiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7U2V0dGluZ3NDb250ZXh0fSBmcm9tIFwiLi9jb250ZXh0XCI7XG5pbXBvcnQge2FwaX0gZnJvbSBcIi4uLy4uL2FwaVwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHBsZUNvbm5lY3QoKXtcbiAgICBjb25zdCB7IHNldHRpbmdzLCBzYXZlU2V0dGluZ3MgfSA9IHVzZUNvbnRleHQoU2V0dGluZ3NDb250ZXh0KTtcblxuICAgIGNvbnN0IFtpc0Nvbm5lY3RlZCwgc2V0SXNDb25uZWN0ZWRdID0gdXNlU3RhdGUoc2V0dGluZ3MuaW9zQXBpLmtleUlEICYmIHNldHRpbmdzLmlvc0FwaS5pc3N1ZXJJRCAmJiBzZXR0aW5ncy5pb3NBcGkuYXBpS2V5KTtcbiAgICBjb25zdCBbc2VsZWN0ZWRBcGlLZXksIHNldFNlbGVjdGVkQXBpS2V5XSA9IHVzZVN0YXRlKG51bGwpO1xuICAgIGNvbnN0IFtrZXlJRCwgc2V0S2V5SURdID0gdXNlU3RhdGUoIHNldHRpbmdzLmlvc0FwaS5rZXlJRCApO1xuICAgIGNvbnN0IFtpc3N1ZXJJRCwgc2V0SXNzdWVySURdID0gdXNlU3RhdGUoIHNldHRpbmdzLmlvc0FwaS5pc3N1ZXJJRCApO1xuXG4gICAgbGV0IGJ1dHRvbkNsYXNzID0gXCJidXR0b24gYnV0dG9uLXByaW1hcnlcIjtcblxuICAgIGlmKCAhIHNlbGVjdGVkQXBpS2V5IHx8ICEga2V5SUQgfHwgISBpc3N1ZXJJRCApIGJ1dHRvbkNsYXNzICs9ICcgZGlzYWJsZWQnO1xuXG4gICAgY29uc3QgY29ubmVjdCA9IGFzeW5jICggZXZlbnQgOiBhbnkgKSA9PiB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcblxuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJhcGlLZXlcIiwgc2VsZWN0ZWRBcGlLZXkpO1xuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJrZXlJRFwiLCBrZXlJRCk7XG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZChcImlzc3VlcklEXCIsIGlzc3VlcklEKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiBcInBvc3RcIixcbiAgICAgICAgICAgICAgICB1cmw6IFwiYXBwL2lvcy9jb25uZWN0VG9BcHBTdG9yZVwiLFxuICAgICAgICAgICAgICAgIGRhdGE6IGZvcm1EYXRhLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIgfSxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBjb25zb2xlLmxvZyggcmVzcG9uc2UgKTtcbiAgICAgICAgfSBjYXRjaChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvciggZXJyb3IgKVxuICAgICAgICAgICAgYWxlcnQoZXJyb3IucmVzcG9uc2UuZGF0YS5tZXNzYWdlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuICggPFNldHRpbmdTZWN0aW9uIHRpdGxlPVwiQXBwbGUgRGV2ZWxvcGVyIEFjY291bnRcIj5cbiAgICAgICAgeyAhIGlzQ29ubmVjdGVkICYmIDw+XG4gICAgICAgIDxwPlxuICAgICAgICAgICAgeyBfeCgnVG8gYXV0aG9yaXplIGFuZCBiZSBhYmxlIHRvIHVwbG9hZCB0aGUgYXBwbGljYXRpb24gdG8geW91ciBhcHBsZSBkZXZlbG9wZXIgYWNjb3VudCB3ZSBuZWVkIHRvIGF1dGhvcml6ZSB0byBBcHBsZSBBcHAgU3RvcmUgdmlhIEFQSS4nLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH1cbiAgICAgICAgPC9wPlxuICAgICAgICA8cD5cbiAgICAgICAgICAgIHsgcGFyc2Uoc3ByaW50ZihfeCgnRm9yIHRoYXQgeW91IG5lZWQgdG8gZ2V0IDxhIGhyZWY9XCIlc1wiIHRhcmdldD1cIl9ibGFua1wiPkdldCBBUEkgS2V5PC9hPiBmcm9tIEFwcCBTdG9yZSBDb25uZWN0IGFuZCB1cGxvYWQgaXQgdXNpbmcgZm9ybSBiZWxvdy4nLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpLCAnaHR0cHM6Ly9hcHBzdG9yZWNvbm5lY3QuYXBwbGUuY29tL2FjY2Vzcy9hcGknKSkgfVxuICAgICAgICA8L3A+XG5cbiAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cImZvcm0tdGFibGVcIj5cbiAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGg+XG4gICAgICAgICAgICAgICAgICAgIHsgX3goJ0FQSSBLZXknLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH1cbiAgICAgICAgICAgICAgICA8L3RoPlxuICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJmaWxlXCIgYWNjZXB0PXtcIi5wOFwifSBvbkNoYW5nZT17KCBldmVudCApID0+IHsgc2V0U2VsZWN0ZWRBcGlLZXkoZXZlbnQudGFyZ2V0LmZpbGVzWzBdKSB9IH0gLz5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGg+XG4gICAgICAgICAgICAgICAgICAgIHsgX3goJ0tleSBJRCcsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiB2YWx1ZT17a2V5SUR9IG9uQ2hhbmdlPXsoIGV2ZW50ICkgPT4geyBzZXRLZXlJRCggZXZlbnQudGFyZ2V0LnZhbHVlICkgfX0gLz5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGg+XG4gICAgICAgICAgICAgICAgICAgIHsgX3goJ0lzc3VlciBJRCcsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgc3R5bGU9e3sgbWluV2lkdGg6IDMyMCB9fSB0eXBlPVwidGV4dFwiIHZhbHVlPXtpc3N1ZXJJRH0gb25DaGFuZ2U9eyggZXZlbnQgKSA9PiB7IHNldElzc3VlcklEKCBldmVudC50YXJnZXQudmFsdWUgKSB9fSAvPlxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgPC90YWJsZT5cblxuICAgICAgICA8cCBjbGFzc05hbWU9XCJzdWJtaXRcIj5cbiAgICAgICAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIG9uQ2xpY2s9e2Nvbm5lY3R9IGNsYXNzTmFtZT17YnV0dG9uQ2xhc3N9PnsgX3goJ0Nvbm5lY3QnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L2J1dHRvbj5cbiAgICAgICAgPC9wPlxuICAgICAgICA8Lz4gfVxuXG4gICAgICAgIHsgaXNDb25uZWN0ZWQgJiYgPGRpdiBjbGFzc05hbWU9XCJiZXR0ZXItbWVzc2FnZXMtYmFubmVyIGJldHRlci1tZXNzYWdlcy1iYW5uZXItZ3JlZW5cIj5cbiAgICAgICAgICAgIENvbm5lY3RlZFxuICAgICAgICA8L2Rpdj4gfVxuICAgIDwvU2V0dGluZ1NlY3Rpb24+ICk7XG59XG4iLCJpbXBvcnQge2FwaX0gZnJvbSBcIi4uLy4uLy4uL2FwaVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFByb2ZpbGV7XG4gICAgaWQ6IHN0cmluZyxcbiAgICBwcm9maWxlU3RhdGU6IHN0cmluZyxcbiAgICBjcmVhdGVkRGF0ZTogc3RyaW5nLFxuICAgIHByb2ZpbGVUeXBlOiBzdHJpbmcsXG4gICAgbmFtZTogc3RyaW5nLFxuICAgIHByb2ZpbGVDb250ZW50OiBzdHJpbmcsXG4gICAgdXVpZDogc3RyaW5nLFxuICAgIHBsYXRmb3JtOiBzdHJpbmcsXG4gICAgZXhwaXJhdGlvbkRhdGU6IHN0cmluZyxcbn1cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2ZpbGVzKCkgOiBQcm9taXNlPFByb2ZpbGVbXT57XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkuZ2V0KCdhcHAvaW9zL2dldFByb2ZpbGVzJyk7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn1cbiIsImltcG9ydCB7YXBpfSBmcm9tIFwiLi4vLi4vLi4vYXBpXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNlcnRpZmljYXRlKCB0eXBlIDogJ0RFVkVMT1BNRU5UJyApe1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLnBvc3QoJ2FwcC9pb3MvY3JlYXRlQ2VydGlmaWNhdGUnKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxufVxuIiwiaW1wb3J0IHthcGl9IGZyb20gXCIuLi8uLi8uLi9hcGlcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlUHJvZmlsZSgga2V5IDogc3RyaW5nLCB0eXBlIDogJ0lPU19BUFBfREVWRUxPUE1FTlQnLCBidW5kbGVJZDogc3RyaW5nLCBjZXJ0aWZpY2F0ZUlkOiBzdHJpbmcgKXtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaS5wb3N0KCdhcHAvaW9zL2NyZWF0ZVByb2ZpbGUnLCB7XG4gICAgICAgICAgICBrZXkgICAgICAgICAgIDoga2V5LFxuICAgICAgICAgICAgdHlwZSAgICAgICAgICA6IHR5cGUsXG4gICAgICAgICAgICBidW5kbGVJZCAgICAgIDogYnVuZGxlSWQsXG4gICAgICAgICAgICBjZXJ0aWZpY2F0ZUlkIDogY2VydGlmaWNhdGVJZFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59XG4iLCJpbXBvcnQge2FwaX0gZnJvbSBcIi4uLy4uLy4uL2FwaVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIERldmljZXtcbiAgICBpZDogc3RyaW5nLFxuICAgIGFkZGVkRGF0ZTogc3RyaW5nLFxuICAgIG5hbWU6IHN0cmluZyxcbiAgICBkZXZpY2VDbGFzczogc3RyaW5nLFxuICAgIG1vZGVsOiBzdHJpbmcsXG4gICAgdWRpZDogc3RyaW5nLFxuICAgIHBsYXRmb3JtOiBzdHJpbmcsXG4gICAgc3RhdHVzOiBzdHJpbmcsXG59XG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBnZXREZXZpY2VzKCkgOiBQcm9taXNlPERldmljZVtdPntcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaS5nZXQoJ2FwcC9pb3MvZ2V0RGV2aWNlcycpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59XG4iLCJpbXBvcnQge2FwaX0gZnJvbSBcIi4uLy4uLy4uL2FwaVwiO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBhZGREZXZpY2UoIGRldmljZUlkOiBzdHJpbmcgKXtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaS5wb3N0KCdhcHAvaW9zL2FkZERldmljZScsIHtcbiAgICAgICAgICAgIGRldmljZUlkOiBkZXZpY2VJZFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG59XG4iLCJpbXBvcnQge19fLCBfeCwgc3ByaW50Zn0gZnJvbSBcIi4uLy4uL2dsb2JhbHNcIjtcbmltcG9ydCBwYXJzZSBmcm9tIFwiaHRtbC1yZWFjdC1wYXJzZXJcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7U2V0dGluZ3NDb250ZXh0fSBmcm9tIFwiLi9jb250ZXh0XCI7XG5pbXBvcnQge2FwaX0gZnJvbSBcIi4uLy4uL2FwaVwiO1xuaW1wb3J0IFNldHRpbmdTZWN0aW9uIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL3NldHRpbmctc2VjdGlvblwiO1xuaW1wb3J0IEltYWdlVXBsb2FkIGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2ltYWdlLXVwbG9hZFwiO1xuaW1wb3J0IEZpbGVVcGxvYWQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvZmlsZS11cGxvYWRcIjtcbmltcG9ydCBnZXRQcm9maWxlcywge1Byb2ZpbGV9IGZyb20gXCIuLi9hcGkvaW9zL2dldC1wcm9maWxlc1wiO1xuaW1wb3J0IGdldE1hdGNoZWRQcm9maWxlcyBmcm9tIFwiLi4vYXBpL2lvcy9nZXQtbWF0Y2hlZC1wcm9maWxlc1wiO1xuaW1wb3J0IGNyZWF0ZUNlcnRpZmljYXRlIGZyb20gXCIuLi9hcGkvaW9zL2NyZWF0ZS1jZXJ0aWZpY2F0ZVwiO1xuaW1wb3J0IGNyZWF0ZVByb2ZpbGUgZnJvbSBcIi4uL2FwaS9pb3MvY3JlYXRlLXByb2ZpbGVcIjtcbmltcG9ydCBnZXREZXZpY2VzLCB7RGV2aWNlfSBmcm9tIFwiLi4vYXBpL2lvcy9nZXQtZGV2aWNlc1wiO1xuaW1wb3J0IGFkZERldmljZSBmcm9tIFwiLi4vYXBpL2lvcy9hZGQtZGV2aWNlXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHBsZURldigpe1xuICAgIGNvbnN0IHsgc2V0dGluZ3MsIGlvc0J1bmRsZXMsIHNhdmVTZXR0aW5ncywgZGlzcGF0Y2hTZXR0aW5nIH0gPSB1c2VDb250ZXh0KFNldHRpbmdzQ29udGV4dCk7XG5cbiAgICBjb25zdCBbYXBwUHJvZmlsZXMsIHNldEFwcFByb2ZpbGVzXSA9IHVzZVN0YXRlPFByb2ZpbGVbXT4oKTtcbiAgICBjb25zdCBbZGV2aWNlcywgc2V0RGV2aWNlc10gPSB1c2VTdGF0ZTxEZXZpY2VbXT4oKTtcbiAgICBjb25zdCBbYWRkRGV2aWNlU2VsZWN0LCBzZXRBZGREZXZpY2VTZWxlY3RdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGdldERldmljZXMoICkudGhlbiggKCByZXMgKSA9PiB7XG4gICAgICAgICAgICBzZXREZXZpY2VzKCByZXMgKTtcbiAgICAgICAgfSlcbiAgICB9LCBbXSlcblxuICAgIHVzZUVmZmVjdCggKCkgPT4ge1xuICAgICAgICBnZXRQcm9maWxlcygpLnRoZW4oKCByZXMgKSA9PiB7XG4gICAgICAgICAgICBzZXRBcHBQcm9maWxlcyhyZXMpO1xuICAgICAgICB9KVxuICAgIH0sIFsgc2V0dGluZ3MuaW9zQnVuZGxlRGV2LCBzZXR0aW5ncy5pb3NDZXJ0aWZpY2F0ZURldiBdIClcblxuICAgIHJldHVybiAoIDxTZXR0aW5nU2VjdGlvbiB0aXRsZT1cIkRldmVsb3BtZW50IFZlcnNpb25cIj5cbiAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cImZvcm0tdGFibGVcIj5cbiAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGg+XG4gICAgICAgICAgICAgICAgICAgIHsgX3goJ0FwcGxpY2F0aW9uIFNpZ25pbmcgQ2VydGlmaWNhdGUnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH1cbiAgICAgICAgICAgICAgICA8L3RoPlxuICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgeyBzZXR0aW5ncy5pb3NDZXJ0aWZpY2F0ZURldiAmJiA8dGFibGUgY2xhc3NOYW1lPVwiYm0taW5mby10YWJsZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD57IF94KCdDZXJ0aWZpY2F0ZSBJRCcsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxhIGhyZWY9e1wiaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2FjY291bnQvcmVzb3VyY2VzL2NlcnRpZmljYXRlcy9kb3dubG9hZC9cIiArIHNldHRpbmdzLmlvc0NlcnRpZmljYXRlRGV2IH0gdGFyZ2V0PVwiX2JsYW5rXCI+eyBzZXR0aW5ncy5pb3NDZXJ0aWZpY2F0ZURldiB9PC9hPjwvdGQ+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4gfVxuICAgICAgICAgICAgICAgICAgICB7ICEgc2V0dGluZ3MuaW9zQ2VydGlmaWNhdGVEZXYgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImJ1dHRvblwiIG9uQ2xpY2s9eyggZXZlbnQgKSA9PiB7IGV2ZW50LnByZXZlbnREZWZhdWx0KCk7IGNyZWF0ZUNlcnRpZmljYXRlKCAnREVWRUxPUE1FTlQnICkgfX0+eyBfeCgnR2VuZXJhdGUgQ2VydGlmaWNhdGUnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PiB9XG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRoPlxuICAgICAgICAgICAgICAgICAgICB7IF94KCdEZXZpY2VzJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9XG4gICAgICAgICAgICAgICAgPC90aD5cbiAgICAgICAgICAgICAgICA8dGQ+XG5cbiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cImJtLWluZm8tdGFibGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc2V0dGluZ3MuaW9zRGV2aWNlcy5sZW5ndGggPT09IDAgJiYgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjb2xTcGFuPXsyfT57IF94KCdObyBkZXZpY2VzIGFkZGVkIHlldCcsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfTwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3RyPiB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgc2V0dGluZ3MuaW9zRGV2aWNlcy5sZW5ndGggPiAwICYmIHNldHRpbmdzLmlvc0RldmljZXMubWFwKCAoIGRldmljZUlkIDogc3RyaW5nICkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkZXZpY2UgPSBkZXZpY2VzICYmIGRldmljZXMuZmluZCggKGRldmljZSkgPT4gZGV2aWNlLmlkID09PSBkZXZpY2VJZCApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoIGRldmljZSApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKDx0ciBrZXk9eydkZXZpY2VfJyArIGRldmljZUlkfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aD57IGRldmljZS5uYW1lIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPntkZXZpY2UudWRpZH08L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSApIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICAgICAgICAgIDwvdGFibGU+XG5cbiAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgZGlzYWJsZWQ9eyEgZGV2aWNlc30gdmFsdWU9e2FkZERldmljZVNlbGVjdH0gb25DaGFuZ2U9eyhldmVudCkgPT4geyBzZXRBZGREZXZpY2VTZWxlY3QoIGV2ZW50LnRhcmdldC52YWx1ZSApIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgISBkZXZpY2VzICYmIDxvcHRpb24gdmFsdWU9XCJcIj57IF9fKCdMb2FkaW5nJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L29wdGlvbj4gfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgZGV2aWNlcyAmJiA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCI+eyBfeCgnU2VsZWN0IGRldmljZSB0byBhZGQnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBkZXZpY2VzLmZpbHRlcigoIGl0ZW0gPT4gISBzZXR0aW5ncy5pb3NEZXZpY2VzLmluY2x1ZGVzKCBpdGVtLmlkICkgKSkubWFwKCAoIGl0ZW0gKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIGtleT17XCJkZXZpY2VfXCIgKyBpdGVtLmlkfSB2YWx1ZT17aXRlbS5pZH0+e2l0ZW0ubmFtZX0gKHtpdGVtLnVkaWR9KTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvPiB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cblxuICAgICAgICAgICAgICAgICAgICAgICAgeyBhZGREZXZpY2VTZWxlY3QgJiYgPGRpdiBzdHlsZT17e21hcmdpblRvcDogMTB9fT48YnV0dG9uIGNsYXNzTmFtZT1cImJ1dHRvblwiIG9uQ2xpY2s9eyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkRGV2aWNlKCBhZGREZXZpY2VTZWxlY3QgKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSB9PnsgX3goJ0FkZCBEZXZpY2UnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L2J1dHRvbj48L2Rpdj4gfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGg+XG4gICAgICAgICAgICAgICAgICAgIHsgX3goJ0FwcGxpY2F0aW9uIEJ1bmRsZScsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICB7IGlvc0J1bmRsZXMgPT09IHVuZGVmaW5lZCAmJiBfXygnTG9hZGluZycsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9XG4gICAgICAgICAgICAgICAgICAgIHsgaW9zQnVuZGxlcyAmJiA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBvbkNoYW5nZT17IChldmVudCkgPT4geyBkaXNwYXRjaFNldHRpbmcoIHsga2V5OiAnaW9zQnVuZGxlRGV2JywgdmFsdWU6IGV2ZW50LnRhcmdldC52YWx1ZSB9ICkgfSB9IGRlZmF1bHRWYWx1ZT17c2V0dGluZ3MuaW9zQnVuZGxlRGV2fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCI+eyBfeCgnTm90IHNlbGVjdGVkJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBpb3NCdW5kbGVzLm1hcCggKCBpdGVtICkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIGtleT17XCJidW5kbGVfXCIgKyBpdGVtLmlkfSB2YWx1ZT17aXRlbS5pZH0+e2l0ZW0uaWRlbnRpZmllcn0gKHtpdGVtLm5hbWV9KTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICA8dGg+XG4gICAgICAgICAgICAgICAgICAgIHsgX3goJ0FwcGxpY2F0aW9uIFByb2ZpbGUnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH1cbiAgICAgICAgICAgICAgICA8L3RoPlxuICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgeyBhcHBQcm9maWxlcyA9PT0gdW5kZWZpbmVkICYmIF9fKCdMb2FkaW5nJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH1cbiAgICAgICAgICAgICAgICAgICAgeyBhcHBQcm9maWxlcyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPXt7IG1hcmdpbkJvdHRvbTogMTAgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHthcHBQcm9maWxlcy5sZW5ndGggPT09IDAgJiYgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgX3goJ05vIHByb2ZpbGVzIGNvbXBhdGlibGUgd2l0aCBzZWxlY3RlZCBidW5kbGUgYW5kIGNlcnRpZmljYXRlJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhcHBQcm9maWxlcy5sZW5ndGggPiAwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3QgZGlzYWJsZWQ9eyggISBzZXR0aW5ncy5pb3NDZXJ0aWZpY2F0ZURldiApfSBvbkNoYW5nZT17IChldmVudCkgPT4geyBkaXNwYXRjaFNldHRpbmcoIHsga2V5OiAnaW9zUHJvZmlsZURldicsIHZhbHVlOiBldmVudC50YXJnZXQudmFsdWUgfSApIH0gfSBkZWZhdWx0VmFsdWU9e3NldHRpbmdzLmlvc1Byb2ZpbGVEZXZ9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cIlwiPnsgX3goJ05vdCBzZWxlY3RlZCcsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhcHBQcm9maWxlcy5tYXAoICggaXRlbSApID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIGtleT17XCJjZXJ0aWZpY2F0ZV9cIiArIGl0ZW0uaWR9IHZhbHVlPXtpdGVtLmlkfT57aXRlbS5uYW1lfSAoe2l0ZW0uaWR9KTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSApIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJidXR0b25cIiBvbkNsaWNrPXsoIGV2ZW50ICkgPT4geyBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyBjcmVhdGVQcm9maWxlKCAnaW9zUHJvZmlsZURldicsICdJT1NfQVBQX0RFVkVMT1BNRU5UJywgc2V0dGluZ3MuaW9zQnVuZGxlRGV2LCBzZXR0aW5ncy5pb3NDZXJ0aWZpY2F0ZURldiApIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBfeCgnR2VuZXJhdGUgUHJvZmlsZScsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuXG4gICAgICAgICAgICA8dHI+XG4gICAgICAgICAgICAgICAgPHRoPlxuICAgICAgICAgICAgICAgICAgICB7IF94KCdOb3RpZmljYXRpb24gU2VydmljZSBCdW5kbGUnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH1cbiAgICAgICAgICAgICAgICA8L3RoPlxuICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgeyBpb3NCdW5kbGVzID09PSB1bmRlZmluZWQgJiYgX18oJ0xvYWRpbmcnLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgICAgICB7IGlvc0J1bmRsZXMgJiYgPD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWxlY3Qgb25DaGFuZ2U9eyAoZXZlbnQpID0+IHsgZGlzcGF0Y2hTZXR0aW5nKCB7IGtleTogJ2lvc0J1bmRsZVNlcnZpY2VEZXYnLCB2YWx1ZTogZXZlbnQudGFyZ2V0LnZhbHVlIH0gKSB9IH0gZGVmYXVsdFZhbHVlPXtzZXR0aW5ncy5pb3NCdW5kbGVTZXJ2aWNlRGV2fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCI+eyBfeCgnTm90IHNlbGVjdGVkJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBpb3NCdW5kbGVzLm1hcCggKCBpdGVtICkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIGtleT17XCJidW5kbGVfXCIgKyBpdGVtLmlkfSB2YWx1ZT17aXRlbS5pZH0+e2l0ZW0uaWRlbnRpZmllcn0gKHtpdGVtLm5hbWV9KTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPC90cj5cblxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgIDx0aD5cbiAgICAgICAgICAgICAgICAgICAgeyBfeCgnTm90aWZpY2F0aW9uIFNlcnZpY2UgUHJvZmlsZScsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICB7IGFwcFByb2ZpbGVzID09PSB1bmRlZmluZWQgJiYgX18oJ0xvYWRpbmcnLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgICAgICB7IGFwcFByb2ZpbGVzICYmXG4gICAgICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9eyB7IG1hcmdpbkJvdHRvbTogMTAgfSB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7YXBwUHJvZmlsZXMubGVuZ3RoID09PSAwICYmIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF94KCdObyBwcm9maWxlcyBjb21wYXRpYmxlIHdpdGggc2VsZWN0ZWQgYnVuZGxlIGFuZCBjZXJ0aWZpY2F0ZScsICdXUCBBZG1pbiAoTW9iaWxlIEFwcCknLCAnYnAtYmV0dGVyLW1lc3NhZ2VzJykgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXBwUHJvZmlsZXMubGVuZ3RoID4gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBkaXNhYmxlZD17KCAhIHNldHRpbmdzLmlvc0NlcnRpZmljYXRlRGV2ICl9IG9uQ2hhbmdlPXsgKGV2ZW50KSA9PiB7IGRpc3BhdGNoU2V0dGluZyggeyBrZXk6ICdpb3NQcm9maWxlU2VydmljZURldicsIHZhbHVlOiBldmVudC50YXJnZXQudmFsdWUgfSApIH0gfSBkZWZhdWx0VmFsdWU9e3NldHRpbmdzLmlvc1Byb2ZpbGVTZXJ2aWNlRGV2fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiXCI+eyBfeCgnTm90IHNlbGVjdGVkJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9PC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhcHBQcm9maWxlcy5tYXAoICggaXRlbSApID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiBrZXk9e1wiY2VydGlmaWNhdGVfXCIgKyBpdGVtLmlkfSB2YWx1ZT17aXRlbS5pZH0+e2l0ZW0ubmFtZX0gKHtpdGVtLmlkfSk8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApICkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWxlY3Q+IH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJidXR0b25cIiBvbkNsaWNrPXsoIGV2ZW50ICkgPT4geyBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyBjcmVhdGVQcm9maWxlKCAnaW9zUHJvZmlsZVNlcnZpY2VEZXYnLCAnSU9TX0FQUF9ERVZFTE9QTUVOVCcsIHNldHRpbmdzLmlvc0J1bmRsZVNlcnZpY2VEZXYsIHNldHRpbmdzLmlvc0NlcnRpZmljYXRlRGV2ICkgfX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IF94KCdHZW5lcmF0ZSBQcm9maWxlJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuXG4gICAgICAgIDxwIGNsYXNzTmFtZT1cInN1Ym1pdFwiPlxuICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwic3VibWl0XCIgb25DbGljaz17KCkgPT4geyBzYXZlU2V0dGluZ3MoKSB9fSBjbGFzc05hbWU9XCJidXR0b24gYnV0dG9uLXByaW1hcnlcIj57IF94KCdTYXZlIENoYW5nZXMnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L2J1dHRvbj5cbiAgICAgICAgPC9wPlxuICAgIDwvU2V0dGluZ1NlY3Rpb24+ICk7XG59XG4iLCJpbXBvcnQge2FwaX0gZnJvbSBcIi4uLy4uLy4uL2FwaVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJ1bmRsZXtcbiAgICBpZDogc3RyaW5nLFxuICAgIGlkZW50aWZpZXI6IHN0cmluZyxcbiAgICBuYW1lOiBzdHJpbmdcbn1cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGdldEJ1bmRsZXMoKSA6IFByb21pc2U8QnVuZGxlW10+e1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmdldCgnYXBwL2lvcy9nZXRCdW5kbGVzJyk7XG4gICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbn1cbiIsImltcG9ydCBSZWFjdCwge3VzZUVmZmVjdCwgdXNlUmVkdWNlciwgdXNlU3RhdGV9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFNldHRpbmdTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL3NldHRpbmctc2VjdGlvblwiO1xuaW1wb3J0IE5hdlRhYnMsIHtUYWJ9IGZyb20gXCIuLi9jb21wb25lbnRzL25hdi10YWJzXCI7XG5pbXBvcnQge194LCBzcHJpbnRmfSBmcm9tIFwiLi4vZ2xvYmFsc1wiO1xuaW1wb3J0IEltYWdlVXBsb2FkIGZyb20gXCIuLi9jb21wb25lbnRzL2ltYWdlLXVwbG9hZFwiO1xuaW1wb3J0IHthcGl9IGZyb20gXCIuLi9hcGlcIjtcbmltcG9ydCB7TW9iaWxlU2V0dGluZ3MsIFNldHRpbmdzQ29udGV4dH0gZnJvbSBcIi4vc2V0dGluZ3MvY29udGV4dFwiO1xuaW1wb3J0IEFwcGxlQ29ubmVjdCBmcm9tIFwiLi9zZXR0aW5ncy9hcHBsZS1jb25uZWN0XCI7XG5pbXBvcnQgQXBwbGVEZXYgZnJvbSBcIi4vc2V0dGluZ3MvYXBwbGUtZGV2XCI7XG5pbXBvcnQgQXBwbGVQcm9kIGZyb20gXCIuL3NldHRpbmdzL2FwcGxlLXByb2RcIjtcbmltcG9ydCBnZXRCdW5kbGVzLCB7QnVuZGxlfSBmcm9tIFwiLi9hcGkvaW9zL2dldC1idW5kbGVzXCI7XG5cblxubGV0IGNoYW5nZWRTZXR0aW5ncyA9IHt9XG5cbmZ1bmN0aW9uIHJlZHVjZXIoc3RhdGUgOiBNb2JpbGVTZXR0aW5ncywgYWN0aW9uIDogYW55KSB7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIHN0YXRlW2FjdGlvbi5rZXldID0gYWN0aW9uLnZhbHVlO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBjaGFuZ2VkU2V0dGluZ3NbYWN0aW9uLmtleV0gPSBhY3Rpb24udmFsdWU7XG5cbiAgICByZXR1cm4geyAuLi4gc3RhdGUgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTW9iaWxlQXBwV3JhcHBlcigpe1xuICAgIGNvbnN0IFtzZXR0aW5ncywgc2V0U2V0dGluZ3NdID0gdXNlU3RhdGUoKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGFwaS5nZXQoJ2FwcC9nZXRNb2JpbGVTZXR0aW5ncycpLnRoZW4oICggcmVzcG9uc2UgKSA9PiB7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgICAgICBzZXRTZXR0aW5ncyggZGF0YSApXG4gICAgICAgIH0gKVxuXG4gICAgfSwgW10pXG5cbiAgICBpZiggISBzZXR0aW5ncyApIHtcbiAgICAgICAgcmV0dXJuICg8PkxvYWRpbmc8Lz4pO1xuICAgIH1cblxuICAgIHJldHVybiAoPE1vYmlsZUFwcCBzZXR0aW5ncz17IHNldHRpbmdzIH0gLz4pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBNb2JpbGVBcHAoIHByb3BzIDogeyBzZXR0aW5ncyA6IE1vYmlsZVNldHRpbmdzIH0pe1xuICAgIGxldCBkZWZhdWx0VGFiID0gJ2dlbmVyYWwnO1xuXG4gICAgaWYoIGxvY2F0aW9uLmhhc2ggKSB7XG4gICAgICAgIGRlZmF1bHRUYWIgPSBsb2NhdGlvbi5oYXNoLnJlcGxhY2UoJyMnLCAnJyk7XG4gICAgfVxuXG4gICAgY29uc3QgW2FjdGl2ZVRhYiwgc2V0QWN0aXZlVGFiXSA9IHVzZVN0YXRlKGRlZmF1bHRUYWIpO1xuXG4gICAgY29uc3QgW3NldHRpbmdzLCBkaXNwYXRjaFNldHRpbmddIDogWyBNb2JpbGVTZXR0aW5ncywgYW55IF0gPSB1c2VSZWR1Y2VyKHJlZHVjZXIsIHByb3BzLnNldHRpbmdzKTtcbiAgICBjb25zdCBbaW9zQnVuZGxlcywgc2V0SW9zQnVuZGxlc10gPSB1c2VTdGF0ZTxCdW5kbGVbXT4oKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGdldEJ1bmRsZXMoKS50aGVuKCAocmVzKSA9PiB7XG4gICAgICAgICAgICBzZXRJb3NCdW5kbGVzKCByZXMgKTtcbiAgICAgICAgfSk7XG4gICAgfSwgW10pXG5cblxuICAgIGNvbnN0IHRhYnMgOiBUYWJbXSA9IFt7XG4gICAgICAgIHNsdWcgICAgOiAnZ2VuZXJhbCcsXG4gICAgICAgIGxhYmVsICAgOiAnR2VuZXJhbCdcbiAgICB9LCB7XG4gICAgICAgIHNsdWcgICAgOiAnaW9zJyxcbiAgICAgICAgbGFiZWwgICA6ICdpT1MgU2V0dGluZ3MnXG4gICAgfV07XG5cbiAgICBjb25zdCBzYXZlU2V0dGluZ3MgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIGxldCBzZXR0aW5nc1RvU2F2ZSA9IHsuLi4gY2hhbmdlZFNldHRpbmdzfTtcblxuICAgICAgICBpZiggT2JqZWN0LmtleXMoIHNldHRpbmdzVG9TYXZlICkubGVuZ3RoID09PSAwICkgcmV0dXJuO1xuICAgICAgICAvL2NoYW5nZWRTZXR0aW5ncyA9IHt9O1xuXG4gICAgICAgIGF3YWl0IGFwaS5wb3N0KCAnYXBwL3NhdmVNb2JpbGVTZXR0aW5ncycsIHtcbiAgICAgICAgICAgIHNldHRpbmdzIDogc2V0dGluZ3NUb1NhdmVcbiAgICAgICAgfSApO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxTZXR0aW5nc0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3tcbiAgICAgICAgICAgIHNldHRpbmdzOiBzZXR0aW5ncyxcbiAgICAgICAgICAgIGlvc0J1bmRsZXM6IGlvc0J1bmRsZXMsXG4gICAgICAgICAgICBzYXZlU2V0dGluZ3M6IHNhdmVTZXR0aW5ncyxcbiAgICAgICAgICAgIGRpc3BhdGNoU2V0dGluZzogZGlzcGF0Y2hTZXR0aW5nXG4gICAgICAgIH19PlxuICAgICAgICA8ZGl2IGlkPVwiYm0tbW9iaWxlLWFwcFwiPlxuICAgICAgICA8TmF2VGFicyBhY3RpdmVUYWI9e2FjdGl2ZVRhYn0gc2V0QWN0aXZlVGFiPXtzZXRBY3RpdmVUYWJ9IHRhYnM9e3RhYnN9IC8+XG5cbiAgICAgICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAoIGFjdGl2ZVRhYiA9PT0gJ2dlbmVyYWwnID8gJ2Jsb2NrJyA6ICdub25lJyApIH19PlxuICAgICAgICAgICAgPFNldHRpbmdTZWN0aW9uIHRpdGxlPVwiR2VuZXJhbFwiPlxuICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJmb3JtLXRhYmxlXCI+XG4gICAgICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoPnsgX3goJ0FwcGxpY2F0aW9uIE5hbWUnLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIHZhbHVlPXtzZXR0aW5ncy5hcHBsaWNhdGlvbk5hbWV9IG9uQ2hhbmdlPXsoIGV2ZW50ICkgPT4geyBkaXNwYXRjaFNldHRpbmcoIHsga2V5OiAnYXBwbGljYXRpb25OYW1lJywgdmFsdWU6IGV2ZW50LnRhcmdldC52YWx1ZSB9ICkgfX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD57IF94KCdBcHBsaWNhdGlvbiBJY29uJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9PC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VVcGxvYWQgd2lkdGg9ezEwMH0gaGVpZ2h0PXsxMDB9IG9wdGlvbj17J2FwcEljb24nfSB1cGxvYWRlZEltYWdlPXtzZXR0aW5ncy5hcHBJY29ufSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRoPnsgX3goJ0FwcGxpY2F0aW9uIFNwbGFzaCBTY3JlZW4nLCAnV1AgQWRtaW4gKE1vYmlsZSBBcHApJywgJ2JwLWJldHRlci1tZXNzYWdlcycpIH08L3RoPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJbWFnZVVwbG9hZCB3aWR0aD17MjAwfSBoZWlnaHQ9ezIwMH0gb3B0aW9uPXsnYXBwU3BsYXNoJ30gdXBsb2FkZWRJbWFnZT17c2V0dGluZ3MuYXBwU3BsYXNofSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICAgICA8L3RhYmxlPlxuXG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwic3VibWl0XCI+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIG9uQ2xpY2s9eygpID0+IHsgc2F2ZVNldHRpbmdzKCkgfX0gY2xhc3NOYW1lPVwiYnV0dG9uIGJ1dHRvbi1wcmltYXJ5XCI+eyBfeCgnU2F2ZSBDaGFuZ2VzJywgJ1dQIEFkbWluIChNb2JpbGUgQXBwKScsICdicC1iZXR0ZXItbWVzc2FnZXMnKSB9PC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgPC9TZXR0aW5nU2VjdGlvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgc3R5bGU9e3tkaXNwbGF5OiAoIGFjdGl2ZVRhYiA9PT0gJ2lvcycgPyAnYmxvY2snIDogJ25vbmUnICkgfX0+XG4gICAgICAgICAgICA8QXBwbGVDb25uZWN0IC8+XG4gICAgICAgICAgICA8QXBwbGVEZXYgLz5cbiAgICAgICAgICAgIHsgLyo8QXBwbGVQcm9kIC8+ICovIH1cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgICAgIDwvU2V0dGluZ3NDb250ZXh0LlByb3ZpZGVyPilcbn1cblxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNZXNzYWdlc1ZpZXdlcigpe1xuXG4gICAgcmV0dXJuICg8PjwvPilcbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBSZWFjdERPTUNsaWVudCBmcm9tIFwicmVhY3QtZG9tL2NsaWVudFwiO1xuaW1wb3J0IE1vYmlsZUFwcFdyYXBwZXIgZnJvbSBcIi4vYWRtaW4vbW9iaWxlLWFwcC9tb2JpbGUtYXBwXCI7XG5pbXBvcnQgTWVzc2FnZXNWaWV3ZXIgZnJvbSBcIi4vYWRtaW4vdmlld2VyXCI7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XG4gICAgbGV0IG1vZGVyYXRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGF5b3V0LW1vZGVyYXRpb24nKTtcbiAgICBpZiggISEgbW9kZXJhdGlvbiApe1xuICAgICAgICAvL1JlYWN0RE9NQ2xpZW50LmNyZWF0ZVJvb3QoIG1vZGVyYXRpb24gKS5yZW5kZXIoPE1vZGVyYXRpb25QYW5lbCAvPik7XG4gICAgfVxuXG4gICAgbGV0IG1lc3NhZ2VzVmlld2VyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lc3NhZ2VzLXZpZXdlcicpO1xuXG4gICAgaWYoICEhIG1lc3NhZ2VzVmlld2VyICl7XG4gICAgICAgIFJlYWN0RE9NQ2xpZW50LmNyZWF0ZVJvb3QoIG1lc3NhZ2VzVmlld2VyICkucmVuZGVyKDxNZXNzYWdlc1ZpZXdlciAvPik7XG4gICAgfVxuXG4gICAgbGV0IGRiTWlncmF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtaWdyYXRlLWRiJyk7XG4gICAgaWYoICEhIGRiTWlncmF0ZSApe1xuICAgICAgICAvL1JlYWN0RE9NQ2xpZW50LmNyZWF0ZVJvb3QoIGRiTWlncmF0ZSApLnJlbmRlcig8REJNaWdyYXRlIC8+KTtcbiAgICB9XG5cbiAgICBsZXQgTW9iaWxlQXBwU2V0dGluZ3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm0tbW9iaWxlLWFwcC1zZXR0aW5ncycpO1xuICAgIGlmKCAhISBNb2JpbGVBcHBTZXR0aW5ncyApe1xuICAgICAgICBpZiggISBNb2JpbGVBcHBTZXR0aW5ncy5jbGFzc0xpc3QuY29udGFpbnMoJ2JtLWluaXRpYWxpemVkJykgKSB7XG4gICAgICAgICAgICBNb2JpbGVBcHBTZXR0aW5ncy5jbGFzc0xpc3QuYWRkKCdibS1pbml0aWFsaXplZCcpO1xuICAgICAgICAgICAgUmVhY3RET01DbGllbnQuY3JlYXRlUm9vdChNb2JpbGVBcHBTZXR0aW5ncykucmVuZGVyKDxNb2JpbGVBcHBXcmFwcGVyLz4pO1xuICAgICAgICB9XG4gICAgfVxufSlcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwidXRpbHMiLCJyZXF1aXJlIiwic2V0dGxlIiwiY29va2llcyIsImJ1aWxkVVJMIiwiYnVpbGRGdWxsUGF0aCIsInBhcnNlSGVhZGVycyIsImlzVVJMU2FtZU9yaWdpbiIsInRyYW5zaXRpb25hbERlZmF1bHRzIiwiQXhpb3NFcnJvciIsIkNhbmNlbGVkRXJyb3IiLCJwYXJzZVByb3RvY29sIiwiY29uZmlnIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJvbkNhbmNlbGVkIiwicmVxdWVzdERhdGEiLCJkYXRhIiwicmVxdWVzdEhlYWRlcnMiLCJoZWFkZXJzIiwicmVzcG9uc2VUeXBlIiwiZG9uZSIsImNhbmNlbFRva2VuIiwidW5zdWJzY3JpYmUiLCJzaWduYWwiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaXNGb3JtRGF0YSIsImlzU3RhbmRhcmRCcm93c2VyRW52IiwicmVxdWVzdCIsIlhNTEh0dHBSZXF1ZXN0IiwiYXV0aCIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkF1dGhvcml6YXRpb24iLCJidG9hIiwiZnVsbFBhdGgiLCJiYXNlVVJMIiwidXJsIiwib25sb2FkZW5kIiwicmVzcG9uc2VIZWFkZXJzIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwicmVzcG9uc2UiLCJyZXNwb25zZVRleHQiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwidmFsdWUiLCJlcnIiLCJvcGVuIiwibWV0aG9kIiwidG9VcHBlckNhc2UiLCJwYXJhbXMiLCJwYXJhbXNTZXJpYWxpemVyIiwidGltZW91dCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJyZXNwb25zZVVSTCIsImluZGV4T2YiLCJzZXRUaW1lb3V0Iiwib25hYm9ydCIsIkVDT05OQUJPUlRFRCIsIm9uZXJyb3IiLCJFUlJfTkVUV09SSyIsIm9udGltZW91dCIsInRpbWVvdXRFcnJvck1lc3NhZ2UiLCJ0cmFuc2l0aW9uYWwiLCJjbGFyaWZ5VGltZW91dEVycm9yIiwiRVRJTUVET1VUIiwieHNyZlZhbHVlIiwid2l0aENyZWRlbnRpYWxzIiwieHNyZkNvb2tpZU5hbWUiLCJyZWFkIiwidW5kZWZpbmVkIiwieHNyZkhlYWRlck5hbWUiLCJmb3JFYWNoIiwidmFsIiwia2V5IiwidG9Mb3dlckNhc2UiLCJzZXRSZXF1ZXN0SGVhZGVyIiwiaXNVbmRlZmluZWQiLCJvbkRvd25sb2FkUHJvZ3Jlc3MiLCJhZGRFdmVudExpc3RlbmVyIiwib25VcGxvYWRQcm9ncmVzcyIsInVwbG9hZCIsImNhbmNlbCIsInR5cGUiLCJhYm9ydCIsInN1YnNjcmliZSIsImFib3J0ZWQiLCJwcm90b2NvbCIsIkVSUl9CQURfUkVRVUVTVCIsInNlbmQiLCJiaW5kIiwiQXhpb3MiLCJtZXJnZUNvbmZpZyIsImF4aW9zIiwiY3JlYXRlSW5zdGFuY2UiLCJkZWZhdWx0Q29uZmlnIiwiY29udGV4dCIsImluc3RhbmNlIiwicHJvdG90eXBlIiwiZXh0ZW5kIiwiY3JlYXRlIiwiaW5zdGFuY2VDb25maWciLCJDYW5jZWxUb2tlbiIsImlzQ2FuY2VsIiwiVkVSU0lPTiIsInRvRm9ybURhdGEiLCJDYW5jZWwiLCJhbGwiLCJwcm9taXNlcyIsInNwcmVhZCIsImlzQXhpb3NFcnJvciIsImV4ZWN1dG9yIiwiVHlwZUVycm9yIiwicmVzb2x2ZVByb21pc2UiLCJ0aGlzIiwicHJvbWlzZSIsInRva2VuIiwidGhlbiIsIl9saXN0ZW5lcnMiLCJpIiwibCIsImxlbmd0aCIsIm9uZnVsZmlsbGVkIiwiX3Jlc29sdmUiLCJtZXNzYWdlIiwicmVhc29uIiwidGhyb3dJZlJlcXVlc3RlZCIsImxpc3RlbmVyIiwicHVzaCIsImluZGV4Iiwic3BsaWNlIiwic291cmNlIiwiYyIsImNhbGwiLCJFUlJfQ0FOQ0VMRUQiLCJuYW1lIiwiaW5oZXJpdHMiLCJfX0NBTkNFTF9fIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiZGlzcGF0Y2hSZXF1ZXN0IiwidmFsaWRhdG9yIiwidmFsaWRhdG9ycyIsImRlZmF1bHRzIiwiaW50ZXJjZXB0b3JzIiwiY29uZmlnT3JVcmwiLCJhc3NlcnRPcHRpb25zIiwic2lsZW50SlNPTlBhcnNpbmciLCJib29sZWFuIiwiZm9yY2VkSlNPTlBhcnNpbmciLCJyZXF1ZXN0SW50ZXJjZXB0b3JDaGFpbiIsInN5bmNocm9ub3VzUmVxdWVzdEludGVyY2VwdG9ycyIsImludGVyY2VwdG9yIiwicnVuV2hlbiIsInN5bmNocm9ub3VzIiwidW5zaGlmdCIsImZ1bGZpbGxlZCIsInJlamVjdGVkIiwicmVzcG9uc2VJbnRlcmNlcHRvckNoYWluIiwiY2hhaW4iLCJBcnJheSIsImFwcGx5IiwiY29uY2F0Iiwic2hpZnQiLCJuZXdDb25maWciLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJlcnJvciIsImdldFVyaSIsImdlbmVyYXRlSFRUUE1ldGhvZCIsImlzRm9ybSIsImNvZGUiLCJFcnJvciIsInRvSlNPTiIsImRlc2NyaXB0aW9uIiwibnVtYmVyIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwiY29sdW1uTnVtYmVyIiwic3RhY2siLCJkZXNjcmlwdG9ycyIsIk9iamVjdCIsImRlZmluZVByb3BlcnRpZXMiLCJkZWZpbmVQcm9wZXJ0eSIsImZyb20iLCJjdXN0b21Qcm9wcyIsImF4aW9zRXJyb3IiLCJ0b0ZsYXRPYmplY3QiLCJvYmoiLCJhc3NpZ24iLCJoYW5kbGVycyIsInVzZSIsIm9wdGlvbnMiLCJlamVjdCIsImlkIiwiZm4iLCJoIiwiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwicmVxdWVzdGVkVVJMIiwidHJhbnNmb3JtRGF0YSIsInRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQiLCJ0cmFuc2Zvcm1SZXF1ZXN0IiwibWVyZ2UiLCJjb21tb24iLCJhZGFwdGVyIiwidHJhbnNmb3JtUmVzcG9uc2UiLCJjb25maWcxIiwiY29uZmlnMiIsImdldE1lcmdlZFZhbHVlIiwidGFyZ2V0IiwiaXNQbGFpbk9iamVjdCIsImlzQXJyYXkiLCJzbGljZSIsIm1lcmdlRGVlcFByb3BlcnRpZXMiLCJwcm9wIiwidmFsdWVGcm9tQ29uZmlnMiIsImRlZmF1bHRUb0NvbmZpZzIiLCJtZXJnZURpcmVjdEtleXMiLCJtZXJnZU1hcCIsImtleXMiLCJjb25maWdWYWx1ZSIsInZhbGlkYXRlU3RhdHVzIiwiRVJSX0JBRF9SRVNQT05TRSIsIk1hdGgiLCJmbG9vciIsImZucyIsIm5vcm1hbGl6ZUhlYWRlck5hbWUiLCJERUZBVUxUX0NPTlRFTlRfVFlQRSIsInNldENvbnRlbnRUeXBlSWZVbnNldCIsInByb2Nlc3MiLCJ0b1N0cmluZyIsImlzQXJyYXlCdWZmZXIiLCJpc0J1ZmZlciIsImlzU3RyZWFtIiwiaXNGaWxlIiwiaXNCbG9iIiwiaXNBcnJheUJ1ZmZlclZpZXciLCJidWZmZXIiLCJpc1VSTFNlYXJjaFBhcmFtcyIsImlzRmlsZUxpc3QiLCJpc09iamVjdFBheWxvYWQiLCJpc09iamVjdCIsImNvbnRlbnRUeXBlIiwiX0Zvcm1EYXRhIiwiZW52IiwiRm9ybURhdGEiLCJyYXdWYWx1ZSIsInBhcnNlciIsImVuY29kZXIiLCJpc1N0cmluZyIsIkpTT04iLCJwYXJzZSIsInRyaW0iLCJlIiwic3RyaW5naWZ5Iiwic3RyaW5naWZ5U2FmZWx5Iiwic3RyaWN0SlNPTlBhcnNpbmciLCJtYXhDb250ZW50TGVuZ3RoIiwibWF4Qm9keUxlbmd0aCIsInRoaXNBcmciLCJhcmdzIiwiYXJndW1lbnRzIiwiZW5jb2RlIiwicmVwbGFjZSIsInNlcmlhbGl6ZWRQYXJhbXMiLCJwYXJ0cyIsInYiLCJpc0RhdGUiLCJ0b0lTT1N0cmluZyIsImpvaW4iLCJoYXNobWFya0luZGV4IiwicmVsYXRpdmVVUkwiLCJ3cml0ZSIsImV4cGlyZXMiLCJwYXRoIiwiZG9tYWluIiwic2VjdXJlIiwiY29va2llIiwiaXNOdW1iZXIiLCJEYXRlIiwidG9HTVRTdHJpbmciLCJkb2N1bWVudCIsIm1hdGNoIiwiUmVnRXhwIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVtb3ZlIiwibm93IiwidGVzdCIsInBheWxvYWQiLCJvcmlnaW5VUkwiLCJtc2llIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwidXJsUGFyc2luZ05vZGUiLCJjcmVhdGVFbGVtZW50IiwicmVzb2x2ZVVSTCIsImhyZWYiLCJzZXRBdHRyaWJ1dGUiLCJob3N0Iiwic2VhcmNoIiwiaGFzaCIsImhvc3RuYW1lIiwicG9ydCIsInBhdGhuYW1lIiwiY2hhckF0Iiwid2luZG93IiwibG9jYXRpb24iLCJyZXF1ZXN0VVJMIiwicGFyc2VkIiwibm9ybWFsaXplZE5hbWUiLCJpZ25vcmVEdXBsaWNhdGVPZiIsInNwbGl0IiwibGluZSIsInN1YnN0ciIsImV4ZWMiLCJjYWxsYmFjayIsImFyciIsImZvcm1EYXRhIiwiY29udmVydFZhbHVlIiwiaXNUeXBlZEFycmF5IiwiQmxvYiIsIkJ1ZmZlciIsImJ1aWxkIiwicGFyZW50S2V5IiwiZnVsbEtleSIsImVuZHNXaXRoIiwidG9BcnJheSIsImVsIiwiYXBwZW5kIiwicG9wIiwidGhpbmciLCJkZXByZWNhdGVkV2FybmluZ3MiLCJ2ZXJzaW9uIiwiZm9ybWF0TWVzc2FnZSIsIm9wdCIsImRlc2MiLCJvcHRzIiwiRVJSX0RFUFJFQ0FURUQiLCJjb25zb2xlIiwid2FybiIsInNjaGVtYSIsImFsbG93VW5rbm93biIsIkVSUl9CQURfT1BUSU9OX1ZBTFVFIiwicmVzdWx0IiwiRVJSX0JBRF9PUFRJT04iLCJjYWNoZSIsImtpbmRPZiIsInN0ciIsImtpbmRPZlRlc3QiLCJnZXRQcm90b3R5cGVPZiIsImlzRnVuY3Rpb24iLCJoYXNPd25Qcm9wZXJ0eSIsIlR5cGVkQXJyYXkiLCJVaW50OEFycmF5IiwiY29uc3RydWN0b3IiLCJwYXR0ZXJuIiwiQXJyYXlCdWZmZXIiLCJpc1ZpZXciLCJwaXBlIiwicHJvZHVjdCIsImFzc2lnblZhbHVlIiwiYSIsImIiLCJzdHJpcEJPTSIsImNvbnRlbnQiLCJjaGFyQ29kZUF0Iiwic3VwZXJDb25zdHJ1Y3RvciIsInByb3BzIiwic291cmNlT2JqIiwiZGVzdE9iaiIsImZpbHRlciIsIm1lcmdlZCIsImdldE93blByb3BlcnR5TmFtZXMiLCJzZWFyY2hTdHJpbmciLCJwb3NpdGlvbiIsIlN0cmluZyIsImxhc3RJbmRleCIsIkVsZW1lbnRUeXBlIiwiRG9jdHlwZSIsIkNEQVRBIiwiVGFnIiwiU3R5bGUiLCJTY3JpcHQiLCJDb21tZW50IiwiRGlyZWN0aXZlIiwiVGV4dCIsIlJvb3QiLCJpc1RhZyIsImVsZW0iLCJDQVNFX1NFTlNJVElWRV9UQUdfTkFNRVMiLCJIVE1MIiwiSEVBRCIsIkJPRFkiLCJGSVJTVF9UQUdfUkVHRVgiLCJIRUFEX1RBR19SRUdFWCIsIkJPRFlfVEFHX1JFR0VYIiwicGFyc2VGcm9tRG9jdW1lbnQiLCJwYXJzZUZyb21TdHJpbmciLCJET01QYXJzZXIiLCJkb21QYXJzZXIiLCJodG1sIiwidGFnTmFtZSIsImltcGxlbWVudGF0aW9uIiwiZG9jIiwiY3JlYXRlSFRNTERvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImlubmVySFRNTCIsInBhcnNlRnJvbVRlbXBsYXRlIiwidGVtcGxhdGUiLCJjaGlsZE5vZGVzIiwiZmlyc3RUYWdOYW1lIiwiZWxlbWVudCIsImVsZW1lbnRzIiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicXVlcnlTZWxlY3RvckFsbCIsImRvbXBhcnNlciIsImZvcm1hdERPTSIsIkRJUkVDVElWRV9SRUdFWCIsImRpcmVjdGl2ZSIsImRvbWhhbmRsZXIiLCJFbGVtZW50IiwiUHJvY2Vzc2luZ0luc3RydWN0aW9uIiwiY2FzZVNlbnNpdGl2ZVRhZ05hbWVzTWFwIiwibGVuIiwiZm9ybWF0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGUiLCJmb3JtYXRUYWdOYW1lIiwiZ2V0Q2FzZVNlbnNpdGl2ZVRhZ05hbWUiLCJub2RlcyIsInBhcmVudCIsImN1cnJlbnQiLCJub2RlIiwibm9kZVR5cGUiLCJub2RlTmFtZSIsImNoaWxkcmVuIiwibm9kZVZhbHVlIiwicHJldiIsIm5leHQiLCJzdWJzdHJpbmciLCJfX2NyZWF0ZUJpbmRpbmciLCJvIiwibSIsImsiLCJrMiIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIl9fZXNNb2R1bGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXQiLCJfX2V4cG9ydFN0YXIiLCJwIiwiRG9tSGFuZGxlciIsImRvbWVsZW1lbnR0eXBlXzEiLCJub2RlX2pzXzEiLCJkZWZhdWx0T3B0cyIsIndpdGhTdGFydEluZGljZXMiLCJ3aXRoRW5kSW5kaWNlcyIsInhtbE1vZGUiLCJlbGVtZW50Q0IiLCJkb20iLCJyb290IiwiRG9jdW1lbnQiLCJ0YWdTdGFjayIsImxhc3ROb2RlIiwib25wYXJzZXJpbml0Iiwib25yZXNldCIsIm9uZW5kIiwiaGFuZGxlQ2FsbGJhY2siLCJvbmNsb3NldGFnIiwiZW5kSW5kZXgiLCJvbm9wZW50YWciLCJhdHRyaWJzIiwiYWRkTm9kZSIsIm9udGV4dCIsIm9uY29tbWVudCIsIm9uY29tbWVudGVuZCIsIm9uY2RhdGFzdGFydCIsInRleHQiLCJvbmNkYXRhZW5kIiwib25wcm9jZXNzaW5naW5zdHJ1Y3Rpb24iLCJwcmV2aW91c1NpYmxpbmciLCJzdGFydEluZGV4IiwiZXh0ZW5kU3RhdGljcyIsIl9fZXh0ZW5kcyIsImQiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9fIiwiX19hc3NpZ24iLCJ0IiwicyIsIm4iLCJjbG9uZU5vZGUiLCJoYXNDaGlsZHJlbiIsImlzRG9jdW1lbnQiLCJpc0RpcmVjdGl2ZSIsImlzQ29tbWVudCIsImlzVGV4dCIsImlzQ0RBVEEiLCJOb2RlV2l0aENoaWxkcmVuIiwiRGF0YU5vZGUiLCJOb2RlIiwic2V0IiwicmVjdXJzaXZlIiwiX3N1cGVyIiwiX3RoaXMiLCJfYSIsIm1hcCIsIl9iIiwibmFtZXNwYWNlIiwicHJlZml4IiwiY2xvbmVDaGlsZHJlbiIsImNsb25lXzEiLCJjaGlsZCIsImNsb25lXzIiLCJjbG9uZV8zIiwiaW5zdHJ1Y3Rpb24iLCJzb3VyY2VDb2RlTG9jYXRpb24iLCJjaGlsZHMiLCJodG1sVG9ET00iLCJhdHRyaWJ1dGVzVG9Qcm9wcyIsImRvbVRvUmVhY3QiLCJkZWZhdWx0IiwiZG9tUGFyc2VyT3B0aW9ucyIsImxvd2VyQ2FzZUF0dHJpYnV0ZU5hbWVzIiwiSFRNTFJlYWN0UGFyc2VyIiwiaHRtbHBhcnNlcjIiLCJyZWFjdFByb3BlcnR5IiwidXRpbGl0aWVzIiwiVU5DT05UUk9MTEVEX0NPTVBPTkVOVF9BVFRSSUJVVEVTIiwiVU5DT05UUk9MTEVEX0NPTVBPTkVOVF9OQU1FUyIsIlZBTFVFX09OTFlfSU5QVVRTIiwicmVzZXQiLCJzdWJtaXQiLCJnZXRQcm9wTmFtZSIsImF0dHJpYnV0ZU5hbWUiLCJwb3NzaWJsZVN0YW5kYXJkTmFtZXMiLCJhdHRyaWJ1dGVOYW1lTG93ZXJDYXNlZCIsImF0dHJpYnV0ZVZhbHVlIiwicHJvcE5hbWUiLCJwcm9wZXJ0eUluZm8iLCJpbnB1dElzVmFsdWVPbmx5IiwiaXNDdXN0b21BdHRyaWJ1dGUiLCJnZXRQcm9wZXJ0eUluZm8iLCJCT09MRUFOIiwiT1ZFUkxPQURFRF9CT09MRUFOIiwiUFJFU0VSVkVfQ1VTVE9NX0FUVFJJQlVURVMiLCJzZXRTdHlsZVByb3AiLCJzdHlsZSIsIlJlYWN0IiwiY2FuVGV4dEJlQ2hpbGRPZk5vZGUiLCJza2lwQXR0cmlidXRlc1RvUHJvcHMiLCJpc0N1c3RvbUNvbXBvbmVudCIsImlzV2hpdGVzcGFjZSIsInJlcGxhY2VFbGVtZW50IiwibGlicmFyeSIsImNsb25lRWxlbWVudCIsImlzVmFsaWRFbGVtZW50IiwiaGFzUmVwbGFjZSIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiX19odG1sIiwiZGVmYXVsdFZhbHVlIiwic3R5bGVUb0pTIiwic3R5bGVUb0pTT3B0aW9ucyIsInJlYWN0Q29tcGF0IiwiZWxlbWVudHNXaXRoTm9UZXh0Q2hpbGRyZW4iLCJTZXQiLCJpbnZlcnRPYmplY3QiLCJvdmVycmlkZSIsImlzT3ZlcnJpZGVQcmVzZW50Iiwib3ZlcnJpZGVzIiwiaXMiLCJoYXMiLCJDT01NRU5UX1JFR0VYIiwiTkVXTElORV9SRUdFWCIsIldISVRFU1BBQ0VfUkVHRVgiLCJQUk9QRVJUWV9SRUdFWCIsIkNPTE9OX1JFR0VYIiwiVkFMVUVfUkVHRVgiLCJTRU1JQ09MT05fUkVHRVgiLCJUUklNX1JFR0VYIiwiRU1QVFlfU1RSSU5HIiwibGluZW5vIiwiY29sdW1uIiwidXBkYXRlUG9zaXRpb24iLCJsaW5lcyIsImxhc3RJbmRleE9mIiwic3RhcnQiLCJQb3NpdGlvbiIsIndoaXRlc3BhY2UiLCJlbmQiLCJlcnJvcnNMaXN0IiwibXNnIiwiZmlsZW5hbWUiLCJzaWxlbnQiLCJyZSIsImNvbW1lbnRzIiwicnVsZXMiLCJjb21tZW50IiwicG9zIiwiZGVjbGFyYXRpb24iLCJyZXQiLCJwcm9wZXJ0eSIsImRlY2wiLCJkZWNscyIsImRlY2xhcmF0aW9ucyIsImFhIiwiY2EiLCJkYSIsImVhIiwiZmEiLCJoYSIsImFkZCIsImlhIiwiamEiLCJrYSIsImxhIiwibWEiLCJmIiwiZyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwicmVtb3ZlRW1wdHlTdHJpbmciLCJ6IiwicmEiLCJzYSIsInRhIiwicGEiLCJpc05hTiIsInFhIiwib2EiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInhsaW5rSHJlZiIsInVhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJ2YSIsIlN5bWJvbCIsImZvciIsIndhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiaXRlcmF0b3IiLCJLYSIsIkxhIiwiQSIsIk1hIiwiTmEiLCJPYSIsInByZXBhcmVTdGFja1RyYWNlIiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImRpc3BsYXlOYW1lIiwiaW5jbHVkZXMiLCJQYSIsInRhZyIsInJlbmRlciIsIlFhIiwiJCR0eXBlb2YiLCJfY29udGV4dCIsIl9wYXlsb2FkIiwiX2luaXQiLCJSYSIsIlNhIiwiVGEiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsImFiIiwiYmIiLCJjYiIsImRiIiwib3duZXJEb2N1bWVudCIsImViIiwiZmIiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZ2IiLCJoYiIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwibmFtZXNwYWNlVVJJIiwidmFsdWVPZiIsImZpcnN0Q2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJvYiIsImxhc3RDaGlsZCIsInBiIiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJhc3BlY3RSYXRpbyIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInFiIiwicmIiLCJzYiIsInNldFByb3BlcnR5IiwidGIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ1YiIsInZiIiwid2IiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsIk5iIiwib25FcnJvciIsIk9iIiwiUGIiLCJRYiIsIlJiIiwiU2IiLCJUYiIsIlZiIiwiYWx0ZXJuYXRlIiwicmV0dXJuIiwiZmxhZ3MiLCJXYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiWGIiLCJaYiIsInNpYmxpbmciLCJZYiIsIiRiIiwiYWMiLCJ1bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrIiwiYmMiLCJ1bnN0YWJsZV9jYW5jZWxDYWxsYmFjayIsImNjIiwidW5zdGFibGVfc2hvdWxkWWllbGQiLCJkYyIsInVuc3RhYmxlX3JlcXVlc3RQYWludCIsIkIiLCJ1bnN0YWJsZV9ub3ciLCJlYyIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiZmMiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsImdjIiwidW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHkiLCJoYyIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiaWMiLCJ1bnN0YWJsZV9Mb3dQcmlvcml0eSIsImpjIiwidW5zdGFibGVfSWRsZVByaW9yaXR5Iiwia2MiLCJsYyIsIm9jIiwiY2x6MzIiLCJwYyIsInFjIiwibG9nIiwiTE4yIiwicmMiLCJzYyIsInRjIiwidWMiLCJwZW5kaW5nTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwidmMiLCJ4YyIsInljIiwiemMiLCJBYyIsImV2ZW50VGltZXMiLCJDYyIsIkMiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJNYXAiLCJQYyIsIlFjIiwiUmMiLCJTYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIlRjIiwibmF0aXZlRXZlbnQiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwidGFyZ2V0Q29udGFpbmVycyIsIlZjIiwiV2MiLCJwcmlvcml0eSIsImlzRGVoeWRyYXRlZCIsImNvbnRhaW5lckluZm8iLCJYYyIsIlljIiwiZGlzcGF0Y2hFdmVudCIsIlpjIiwiJGMiLCJhZCIsImJkIiwiY2QiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImRkIiwiZWQiLCJ0cmFuc2l0aW9uIiwiZmQiLCJnZCIsImhkIiwiVWMiLCJzdG9wUHJvcGFnYXRpb24iLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsInRkIiwidWQiLCJ2aWV3IiwiZGV0YWlsIiwidmQiLCJBZCIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwiY3RybEtleSIsInNoaWZ0S2V5IiwiYWx0S2V5IiwibWV0YUtleSIsImdldE1vZGlmaWVyU3RhdGUiLCJ6ZCIsImJ1dHRvbiIsImJ1dHRvbnMiLCJyZWxhdGVkVGFyZ2V0IiwiZnJvbUVsZW1lbnQiLCJ0b0VsZW1lbnQiLCJtb3ZlbWVudFgiLCJtb3ZlbWVudFkiLCJCZCIsIkRkIiwiZGF0YVRyYW5zZmVyIiwiRmQiLCJIZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJJZCIsImNsaXBib2FyZERhdGEiLCJKZCIsIkxkIiwiTWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiTmQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlFkIiwiZnJvbUNoYXJDb2RlIiwicmVwZWF0IiwibG9jYWxlIiwid2hpY2giLCJSZCIsIlRkIiwid2lkdGgiLCJoZWlnaHQiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiVmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwiWGQiLCJZZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwiWmQiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicmFuZ2UiLCJ0ZWwiLCJ0aW1lIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInNlIiwidGUiLCJ1ZSIsInZlIiwid2UiLCJ4ZSIsInllIiwiemUiLCJvbmlucHV0IiwiQWUiLCJkZXRhY2hFdmVudCIsIkJlIiwiQ2UiLCJhdHRhY2hFdmVudCIsIkRlIiwiRWUiLCJGZSIsIkhlIiwiSWUiLCJKZSIsIktlIiwib2Zmc2V0IiwibmV4dFNpYmxpbmciLCJMZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJNZSIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudFdpbmRvdyIsIk5lIiwiY29udGVudEVkaXRhYmxlIiwiT2UiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwic2VsZWN0aW9uU3RhcnQiLCJzZWxlY3Rpb25FbmQiLCJtaW4iLCJkZWZhdWx0VmlldyIsImdldFNlbGVjdGlvbiIsInJhbmdlQ291bnQiLCJhbmNob3JOb2RlIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsImZvY3VzIiwiUGUiLCJRZSIsIlJlIiwiU2UiLCJUZSIsIlVlIiwiVmUiLCJXZSIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlhlIiwiWWUiLCJaZSIsImFuaW1hdGlvbiIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsImZmIiwiZ2YiLCJoZiIsImxmIiwibWYiLCJuZiIsIlViIiwiRCIsIm9mIiwicGYiLCJxZiIsInJmIiwicmFuZG9tIiwic2YiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIkoiLCJ4IiwidSIsInciLCJGIiwidGYiLCJ1ZiIsInBhcmVudFdpbmRvdyIsInZmIiwid2YiLCJuYSIsInhhIiwiJGEiLCJiYSIsImplIiwiY2hhciIsImtlIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIkZmIiwiR2YiLCJjbGVhclRpbWVvdXQiLCJIZiIsIkpmIiwicXVldWVNaWNyb3Rhc2siLCJjYXRjaCIsIklmIiwiS2YiLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIkUiLCJHIiwiVmYiLCJIIiwiV2YiLCJYZiIsIllmIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiWmYiLCJjaGlsZENvbnRleHRUeXBlcyIsIiRmIiwiYWciLCJiZyIsImdldENoaWxkQ29udGV4dCIsImNnIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInhnIiwieWciLCJJIiwiemciLCJBZyIsIkJnIiwiZWxlbWVudFR5cGUiLCJkZWxldGlvbnMiLCJDZyIsInBlbmRpbmdQcm9wcyIsIm92ZXJmbG93IiwidHJlZUNvbnRleHQiLCJyZXRyeUxhbmUiLCJEZyIsIm1vZGUiLCJFZyIsIkZnIiwiR2ciLCJtZW1vaXplZFByb3BzIiwiSGciLCJJZyIsIkpnIiwiS2ciLCJMZyIsImRlZmF1bHRQcm9wcyIsIk1nIiwiTmciLCJPZyIsIlBnIiwiUWciLCJSZyIsIl9jdXJyZW50VmFsdWUiLCJTZyIsImNoaWxkTGFuZXMiLCJUZyIsImRlcGVuZGVuY2llcyIsImZpcnN0Q29udGV4dCIsImxhbmVzIiwiVWciLCJWZyIsIm1lbW9pemVkVmFsdWUiLCJXZyIsIlhnIiwiWWciLCJpbnRlcmxlYXZlZCIsIlpnIiwiJGciLCJhaCIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsImJoIiwiY2giLCJldmVudFRpbWUiLCJsYW5lIiwiZGgiLCJLIiwiZWgiLCJmaCIsImdoIiwicSIsInIiLCJ5IiwiaGgiLCJpaCIsImpoIiwiQ29tcG9uZW50IiwicmVmcyIsImtoIiwibmgiLCJpc01vdW50ZWQiLCJfcmVhY3RJbnRlcm5hbHMiLCJlbnF1ZXVlU2V0U3RhdGUiLCJMIiwibGgiLCJtaCIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJvaCIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwicGgiLCJjb250ZXh0VHlwZSIsInN0YXRlIiwidXBkYXRlciIsInFoIiwiY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwicmgiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsInNoIiwicmVmIiwiX293bmVyIiwiX3N0cmluZ1JlZiIsInRoIiwidWgiLCJ2aCIsIndoIiwieGgiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsIkloIiwiSmgiLCJLaCIsIkxoIiwiTSIsIk1oIiwicmV2ZWFsT3JkZXIiLCJOaCIsIk9oIiwiX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnkiLCJQaCIsIlJlYWN0Q3VycmVudERpc3BhdGNoZXIiLCJRaCIsIlJoIiwiTiIsIk8iLCJQIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJRIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImJhc2VRdWV1ZSIsInF1ZXVlIiwiZGkiLCJlaSIsImZpIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImhhc0VhZ2VyU3RhdGUiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJnZXRTbmFwc2hvdCIsImxpIiwibWkiLCJSIiwibmkiLCJsYXN0RWZmZWN0Iiwic3RvcmVzIiwib2kiLCJwaSIsInFpIiwicmkiLCJkZXN0cm95IiwiZGVwcyIsInNpIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsIkJpIiwiQ2kiLCJEaSIsIkVpIiwiRmkiLCJHaSIsIkhpIiwiSWkiLCJKaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUluc2VydGlvbkVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlU3luY0V4dGVybmFsU3RvcmUiLCJ1c2VJZCIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsImlkZW50aWZpZXJQcmVmaXgiLCJLaSIsImRpZ2VzdCIsIkxpIiwiTWkiLCJOaSIsIldlYWtNYXAiLCJPaSIsIlBpIiwiUWkiLCJSaSIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImNvbXBvbmVudERpZENhdGNoIiwiU2kiLCJjb21wb25lbnRTdGFjayIsIlRpIiwicGluZ0NhY2hlIiwiVWkiLCJWaSIsIldpIiwiWGkiLCJSZWFjdEN1cnJlbnRPd25lciIsIllpIiwiWmkiLCIkaSIsImFqIiwiYmoiLCJjb21wYXJlIiwiY2oiLCJkaiIsImVqIiwiYmFzZUxhbmVzIiwiY2FjaGVQb29sIiwidHJhbnNpdGlvbnMiLCJmaiIsImdqIiwiaGoiLCJpaiIsImpqIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwia2oiLCJsaiIsInBlbmRpbmdDb250ZXh0IiwibWoiLCJBaiIsIkNqIiwiRGoiLCJuaiIsIm9qIiwicGoiLCJmYWxsYmFjayIsInFqIiwicmoiLCJ0aiIsImRhdGFzZXQiLCJkZ3N0IiwidWoiLCJ2aiIsIl9yZWFjdFJldHJ5Iiwic2oiLCJzdWJ0cmVlRmxhZ3MiLCJ3aiIsInhqIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwieWoiLCJFaiIsIlMiLCJGaiIsIkdqIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsInN1cHByZXNzSHlkcmF0aW9uV2FybmluZyIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsImF1dG9Gb2N1cyIsImNyZWF0ZVRleHROb2RlIiwiVCIsIkhqIiwiSWoiLCJKaiIsIktqIiwiVSIsIkxqIiwiV2Vha1NldCIsIlYiLCJNaiIsIlciLCJOaiIsIk9qIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJVaiIsIlZqIiwiV2oiLCJpbnNlcnRCZWZvcmUiLCJfcmVhY3RSb290Q29udGFpbmVyIiwiWGoiLCJYIiwiWWoiLCJaaiIsImFrIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImJrIiwiY2siLCJkayIsImVrIiwiZmsiLCJpc0hpZGRlbiIsImdrIiwiaGsiLCJkaXNwbGF5IiwiaWsiLCJqayIsImtrIiwibGsiLCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsInNyYyIsIldrIiwibWsiLCJjZWlsIiwibmsiLCJvayIsInBrIiwiWSIsIloiLCJxayIsInJrIiwic2siLCJ0ayIsInVrIiwiSW5maW5pdHkiLCJ2ayIsIndrIiwieGsiLCJ5ayIsInprIiwiQWsiLCJCayIsIkNrIiwiRGsiLCJFayIsImNhbGxiYWNrTm9kZSIsImV4cGlyYXRpb25UaW1lcyIsImV4cGlyZWRMYW5lcyIsIndjIiwiY2FsbGJhY2tQcmlvcml0eSIsImlnIiwiRmsiLCJHayIsIkhrIiwiSWsiLCJKayIsIktrIiwiTGsiLCJNayIsIk5rIiwiT2siLCJQayIsImZpbmlzaGVkV29yayIsImZpbmlzaGVkTGFuZXMiLCJRayIsInRpbWVvdXRIYW5kbGUiLCJSayIsIlNrIiwiVGsiLCJVayIsIlZrIiwibXV0YWJsZVJlYWRMYW5lcyIsIkJjIiwiUGoiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm1jIiwib25SZWNvdmVyYWJsZUVycm9yIiwiWGsiLCJvblBvc3RDb21taXRGaWJlclJvb3QiLCJZayIsIlprIiwiYWwiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiYmwiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwiY2wiLCJwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzIiwiZGwiLCJmbCIsImdsIiwiaGwiLCJpbCIsImpsIiwiemoiLCIkayIsImxsIiwicmVwb3J0RXJyb3IiLCJtbCIsIl9pbnRlcm5hbFJvb3QiLCJubCIsIm9sIiwicGwiLCJxbCIsInNsIiwicmwiLCJ1bm1vdW50IiwidW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb24iLCJmb3JtIiwidGwiLCJ1c2luZ0NsaWVudEVudHJ5UG9pbnQiLCJFdmVudHMiLCJ1bCIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ2bCIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldEVycm9ySGFuZGxlciIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwicmVjb25jaWxlclZlcnNpb24iLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ3bCIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiY3JlYXRlUG9ydGFsIiwiY3JlYXRlUm9vdCIsInVuc3RhYmxlX3N0cmljdE1vZGUiLCJmaW5kRE9NTm9kZSIsImZsdXNoU3luYyIsImh5ZHJhdGUiLCJoeWRyYXRlUm9vdCIsImh5ZHJhdGVkU291cmNlcyIsIl9nZXRWZXJzaW9uIiwiX3NvdXJjZSIsInVubW91bnRDb21wb25lbnRBdE5vZGUiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsInVuc3RhYmxlX3JlbmRlclN1YnRyZWVJbnRvQ29udGFpbmVyIiwiY2hlY2tEQ0UiLCJfYXJyYXlMaWtlVG9BcnJheSIsImFycjIiLCJQcm9wZXJ0eUluZm9SZWNvcmQiLCJwcm9wZXJ0aWVzIiwiX3JlZiIsIl9yZWYyIiwiX2FycmF5V2l0aEhvbGVzIiwiX2kiLCJfcyIsIl9lIiwiX2FyciIsIl9uIiwiX2QiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJtaW5MZW4iLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiQ0FNRUxJWkUiLCJjYXBpdGFsaXplIiwiX3JlcXVpcmUiLCJDQU1FTENBU0UiLCJTQU1FIiwicG9zc2libGVTdGFuZGFyZE5hbWVzT3B0aW1pemVkIiwicmVkdWNlIiwiYWNjdW11bGF0b3IiLCJzdGFuZGFyZE5hbWUiLCJCT09MRUFOSVNIX1NUUklORyIsIk5VTUVSSUMiLCJQT1NJVElWRV9OVU1FUklDIiwiUkVTRVJWRUQiLCJTVFJJTkciLCJhY2NlcHQiLCJhY2NlcHRDaGFyc2V0IiwiYWNjZXNzS2V5IiwiYWxsb3dGdWxsU2NyZWVuIiwiYWx0IiwiYXMiLCJhc3luYyIsImF1dG9DYXBpdGFsaXplIiwiYXV0b0NvbXBsZXRlIiwiYXV0b0NvcnJlY3QiLCJhdXRvUGxheSIsImF1dG9TYXZlIiwiY2VsbFBhZGRpbmciLCJjZWxsU3BhY2luZyIsImNoYWxsZW5nZSIsImNoYXJTZXQiLCJjaXRlIiwiY2xhc3MiLCJjbGFzc0lEIiwiY2xhc3NOYW1lIiwiY29scyIsImNvbFNwYW4iLCJjb250ZXh0TWVudSIsImNvbnRyb2xzIiwiY29udHJvbHNMaXN0IiwiY29vcmRzIiwiY3Jvc3NPcmlnaW4iLCJkYXRlVGltZSIsImRlZmVyIiwiZGlyIiwiZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUiLCJkaXNhYmxlUmVtb3RlUGxheWJhY2siLCJkb3dubG9hZCIsImRyYWdnYWJsZSIsImVuY1R5cGUiLCJlbnRlcktleUhpbnQiLCJmb3JtTWV0aG9kIiwiZm9ybUFjdGlvbiIsImZvcm1FbmNUeXBlIiwiZm9ybU5vVmFsaWRhdGUiLCJmb3JtVGFyZ2V0IiwiZnJhbWVCb3JkZXIiLCJoaWRkZW4iLCJoaWdoIiwiaHJlZkxhbmciLCJodG1sRm9yIiwiaHR0cEVxdWl2IiwiaWNvbiIsImlucHV0TW9kZSIsImludGVncml0eSIsIml0ZW1JRCIsIml0ZW1Qcm9wIiwiaXRlbVJlZiIsIml0ZW1TY29wZSIsIml0ZW1UeXBlIiwia2V5UGFyYW1zIiwia2V5VHlwZSIsImtpbmQiLCJsYWJlbCIsImxhbmciLCJsaXN0IiwibG9vcCIsImxvdyIsIm1hbmlmZXN0IiwibWFyZ2luV2lkdGgiLCJtYXJnaW5IZWlnaHQiLCJtYXgiLCJtYXhMZW5ndGgiLCJtZWRpYSIsIm1lZGlhR3JvdXAiLCJtaW5MZW5ndGgiLCJtdXRlZCIsIm5vTW9kdWxlIiwibm9uY2UiLCJub1ZhbGlkYXRlIiwib3B0aW11bSIsInBsYWNlaG9sZGVyIiwicGxheXNJbmxpbmUiLCJwb3N0ZXIiLCJwcmVsb2FkIiwicHJvZmlsZSIsInJhZGlvR3JvdXAiLCJyZWFkT25seSIsInJlZmVycmVyUG9saWN5IiwicmVsIiwicmVxdWlyZWQiLCJyZXZlcnNlZCIsInJvbGUiLCJyb3dzIiwicm93U3BhbiIsInNhbmRib3giLCJzY29wZSIsInNjb3BlZCIsInNjcm9sbGluZyIsInNlYW1sZXNzIiwic2hhcGUiLCJzaXplcyIsInNwYW4iLCJzcGVsbENoZWNrIiwic3JjRG9jIiwic3JjTGFuZyIsInNyY1NldCIsInN0ZXAiLCJzdW1tYXJ5IiwidGFiSW5kZXgiLCJ0aXRsZSIsInVzZU1hcCIsIndtb2RlIiwid3JhcCIsImFib3V0IiwiYWNjZW50SGVpZ2h0IiwiYWNjdW11bGF0ZSIsImFkZGl0aXZlIiwiYWxpZ25tZW50QmFzZWxpbmUiLCJhbGxvd1Jlb3JkZXIiLCJhbHBoYWJldGljIiwiYW1wbGl0dWRlIiwiYXJhYmljRm9ybSIsImFzY2VudCIsImF0dHJpYnV0ZVR5cGUiLCJhdXRvUmV2ZXJzZSIsImF6aW11dGgiLCJiYXNlRnJlcXVlbmN5IiwiYmFzZWxpbmVTaGlmdCIsImJhc2VQcm9maWxlIiwiYmJveCIsImJlZ2luIiwiYmlhcyIsImJ5IiwiY2FsY01vZGUiLCJjYXBIZWlnaHQiLCJjbGlwIiwiY2xpcFBhdGgiLCJjbGlwUGF0aFVuaXRzIiwiY2xpcFJ1bGUiLCJjb2xvckludGVycG9sYXRpb24iLCJjb2xvckludGVycG9sYXRpb25GaWx0ZXJzIiwiY29sb3JQcm9maWxlIiwiY29sb3JSZW5kZXJpbmciLCJjb250ZW50U2NyaXB0VHlwZSIsImNvbnRlbnRTdHlsZVR5cGUiLCJjdXJzb3IiLCJjeCIsImN5IiwiZGF0YXR5cGUiLCJkZWNlbGVyYXRlIiwiZGVzY2VudCIsImRpZmZ1c2VDb25zdGFudCIsImRpcmVjdGlvbiIsImRpdmlzb3IiLCJkb21pbmFudEJhc2VsaW5lIiwiZHVyIiwiZHgiLCJkeSIsImVkZ2VNb2RlIiwiZWxldmF0aW9uIiwiZW5hYmxlQmFja2dyb3VuZCIsImV4cG9uZW50IiwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZCIsImZpbGwiLCJmaWxsUnVsZSIsImZpbHRlclJlcyIsImZpbHRlclVuaXRzIiwiZmxvb2RDb2xvciIsImZvY3VzYWJsZSIsImZvbnRGYW1pbHkiLCJmb250U2l6ZSIsImZvbnRTaXplQWRqdXN0IiwiZm9udFN0cmV0Y2giLCJmb250U3R5bGUiLCJmb250VmFyaWFudCIsImZvcm1hdCIsImZ4IiwiZnkiLCJnMSIsImcyIiwiZ2x5cGhOYW1lIiwiZ2x5cGhPcmllbnRhdGlvbkhvcml6b250YWwiLCJnbHlwaE9yaWVudGF0aW9uVmVydGljYWwiLCJnbHlwaFJlZiIsImdyYWRpZW50VHJhbnNmb3JtIiwiZ3JhZGllbnRVbml0cyIsImhhbmdpbmciLCJob3JpekFkdlgiLCJob3Jpek9yaWdpblgiLCJpZGVvZ3JhcGhpYyIsImltYWdlUmVuZGVyaW5nIiwiaW4yIiwiaW4iLCJpbmxpc3QiLCJpbnRlcmNlcHQiLCJrMSIsImszIiwiazQiLCJrZXJuZWxNYXRyaXgiLCJrZXJuZWxVbml0TGVuZ3RoIiwia2VybmluZyIsImtleVBvaW50cyIsImtleVNwbGluZXMiLCJrZXlUaW1lcyIsImxlbmd0aEFkanVzdCIsImxldHRlclNwYWNpbmciLCJsaWdodGluZ0NvbG9yIiwibGltaXRpbmdDb25lQW5nbGUiLCJsb2NhbCIsIm1hcmtlckVuZCIsIm1hcmtlckhlaWdodCIsIm1hcmtlck1pZCIsIm1hcmtlclN0YXJ0IiwibWFya2VyVW5pdHMiLCJtYXJrZXJXaWR0aCIsIm1hc2siLCJtYXNrQ29udGVudFVuaXRzIiwibWFza1VuaXRzIiwibWF0aGVtYXRpY2FsIiwibnVtT2N0YXZlcyIsIm9wZXJhdG9yIiwib3JpZW50Iiwib3JpZW50YXRpb24iLCJvcmlnaW4iLCJvdmVybGluZVBvc2l0aW9uIiwib3ZlcmxpbmVUaGlja25lc3MiLCJwYWludE9yZGVyIiwicGFub3NlMSIsInBhdGhMZW5ndGgiLCJwYXR0ZXJuQ29udGVudFVuaXRzIiwicGF0dGVyblRyYW5zZm9ybSIsInBhdHRlcm5Vbml0cyIsInBvaW50ZXJFdmVudHMiLCJwb2ludHMiLCJwb2ludHNBdFgiLCJwb2ludHNBdFkiLCJwb2ludHNBdFoiLCJwcmVzZXJ2ZUFscGhhIiwicHJlc2VydmVBc3BlY3RSYXRpbyIsInByaW1pdGl2ZVVuaXRzIiwicmFkaXVzIiwicmVmWCIsInJlZlkiLCJyZW5kZXJpbmdJbnRlbnQiLCJyZXBlYXRDb3VudCIsInJlcGVhdER1ciIsInJlcXVpcmVkRXh0ZW5zaW9ucyIsInJlcXVpcmVkRmVhdHVyZXMiLCJyZXNvdXJjZSIsInJlc3RhcnQiLCJyZXN1bHRzIiwicm90YXRlIiwicngiLCJyeSIsInNjYWxlIiwic2VjdXJpdHkiLCJzZWVkIiwic2hhcGVSZW5kZXJpbmciLCJzbG9wZSIsInNwYWNpbmciLCJzcGVjdWxhckNvbnN0YW50Iiwic3BlY3VsYXJFeHBvbmVudCIsInNwZWVkIiwic3ByZWFkTWV0aG9kIiwic3RhcnRPZmZzZXQiLCJzdGREZXZpYXRpb24iLCJzdGVtaCIsInN0ZW12Iiwic3RpdGNoVGlsZXMiLCJzdG9wQ29sb3IiLCJzdHJpa2V0aHJvdWdoUG9zaXRpb24iLCJzdHJpa2V0aHJvdWdoVGhpY2tuZXNzIiwic3RyaW5nIiwic3Ryb2tlIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIiwic3VyZmFjZVNjYWxlIiwic3lzdGVtTGFuZ3VhZ2UiLCJ0YWJsZVZhbHVlcyIsInRhcmdldFgiLCJ0YXJnZXRZIiwidGV4dEFuY2hvciIsInRleHREZWNvcmF0aW9uIiwidGV4dExlbmd0aCIsInRleHRSZW5kZXJpbmciLCJ0byIsInRyYW5zZm9ybSIsInR5cGVvZiIsInUxIiwidTIiLCJ1bmRlcmxpbmVQb3NpdGlvbiIsInVuZGVybGluZVRoaWNrbmVzcyIsInVuaWNvZGUiLCJ1bmljb2RlQmlkaSIsInVuaWNvZGVSYW5nZSIsInVuaXRzUGVyRW0iLCJ1bnNlbGVjdGFibGUiLCJ2QWxwaGFiZXRpYyIsInZhbHVlcyIsInZlY3RvckVmZmVjdCIsInZlcnRBZHZZIiwidmVydE9yaWdpblgiLCJ2ZXJ0T3JpZ2luWSIsInZIYW5naW5nIiwidklkZW9ncmFwaGljIiwidmlld0JveCIsInZpZXdUYXJnZXQiLCJ2aXNpYmlsaXR5Iiwidk1hdGhlbWF0aWNhbCIsInZvY2FiIiwid2lkdGhzIiwid29yZFNwYWNpbmciLCJ3cml0aW5nTW9kZSIsIngxIiwieDIiLCJ4Q2hhbm5lbFNlbGVjdG9yIiwieEhlaWdodCIsInhsaW5rQWN0dWF0ZSIsInhsaW5rQXJjcm9sZSIsInhsaW5rUm9sZSIsInhsaW5rU2hvdyIsInhsaW5rVGl0bGUiLCJ4bGlua1R5cGUiLCJ4bWxCYXNlIiwieG1sTGFuZyIsInhtbG5zIiwieG1sbnNYbGluayIsInhtbFNwYWNlIiwieTEiLCJ5MiIsInlDaGFubmVsU2VsZWN0b3IiLCJ6b29tQW5kUGFuIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZXNjYXBlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJDaGlsZHJlbiIsImNvdW50Iiwib25seSIsIkZyYWdtZW50IiwiUHJvZmlsZXIiLCJQdXJlQ29tcG9uZW50IiwiU3RyaWN0TW9kZSIsIlN1c3BlbnNlIiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsIl9kZWZhdWx0VmFsdWUiLCJfZ2xvYmFsTmFtZSIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwibGF6eSIsIm1lbW8iLCJzdGFydFRyYW5zaXRpb24iLCJ1bnN0YWJsZV9hY3QiLCJzb3J0SW5kZXgiLCJwZXJmb3JtYW5jZSIsInNldEltbWVkaWF0ZSIsInN0YXJ0VGltZSIsImV4cGlyYXRpb25UaW1lIiwicHJpb3JpdHlMZXZlbCIsInNjaGVkdWxpbmciLCJpc0lucHV0UGVuZGluZyIsIk1lc3NhZ2VDaGFubmVsIiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwidW5zdGFibGVfUHJvZmlsaW5nIiwidW5zdGFibGVfY29udGludWVFeGVjdXRpb24iLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJzdHlsZV90b19vYmplY3RfMSIsInV0aWxpdGllc18xIiwib3V0cHV0IiwiY2FtZWxDYXNlIiwiQ1VTVE9NX1BST1BFUlRZX1JFR0VYIiwiSFlQSEVOX1JFR0VYIiwiTk9fSFlQSEVOX1JFR0VYIiwiVkVORE9SX1BSRUZJWF9SRUdFWCIsIk1TX1ZFTkRPUl9QUkVGSVhfUkVHRVgiLCJjaGFyYWN0ZXIiLCJ0cmltSHlwaGVuIiwic2tpcENhbWVsQ2FzZSIsIlN0eWxlVG9PYmplY3QiLCJoYXNJdGVyYXRvciIsIl90eXBlb2YiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiT3AiLCJoYXNPd24iLCIkU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnU3ltYm9sIiwidG9TdHJpbmdUYWciLCJkZWZpbmUiLCJpbm5lckZuIiwib3V0ZXJGbiIsInNlbGYiLCJ0cnlMb2NzTGlzdCIsInByb3RvR2VuZXJhdG9yIiwiR2VuZXJhdG9yIiwiZ2VuZXJhdG9yIiwiQ29udGV4dCIsIm1ha2VJbnZva2VNZXRob2QiLCJ0cnlDYXRjaCIsImFyZyIsIkNvbnRpbnVlU2VudGluZWwiLCJHZW5lcmF0b3JGdW5jdGlvbiIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJnZXRQcm90byIsIk5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlIiwiR3AiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJfaW52b2tlIiwiQXN5bmNJdGVyYXRvciIsIlByb21pc2VJbXBsIiwiaW52b2tlIiwicmVjb3JkIiwiX19hd2FpdCIsInVud3JhcHBlZCIsInByZXZpb3VzUHJvbWlzZSIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwiZGVsZWdhdGUiLCJkZWxlZ2F0ZVJlc3VsdCIsIm1heWJlSW52b2tlRGVsZWdhdGUiLCJzZW50IiwiX3NlbnQiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImFicnVwdCIsIm1ldGhvZE5hbWUiLCJpbmZvIiwicmVzdWx0TmFtZSIsIm5leHRMb2MiLCJwdXNoVHJ5RW50cnkiLCJsb2NzIiwiZW50cnkiLCJ0cnlMb2MiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhZnRlckxvYyIsInRyeUVudHJpZXMiLCJyZXNldFRyeUVudHJ5IiwiY29tcGxldGlvbiIsIml0ZXJhYmxlIiwiaXRlcmF0b3JNZXRob2QiLCJkb25lUmVzdWx0IiwiaXNHZW5lcmF0b3JGdW5jdGlvbiIsImdlbkZ1biIsImN0b3IiLCJtYXJrIiwiYXdyYXAiLCJpdGVyIiwib2JqZWN0IiwicmV2ZXJzZSIsInNraXBUZW1wUmVzZXQiLCJzdG9wIiwicm9vdFJlY29yZCIsInJ2YWwiLCJleGNlcHRpb24iLCJoYW5kbGUiLCJsb2MiLCJjYXVnaHQiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJmaW5hbGx5RW50cnkiLCJjb21wbGV0ZSIsImZpbmlzaCIsInRocm93biIsImRlbGVnYXRlWWllbGQiLCJydW50aW1lIiwicmVnZW5lcmF0b3JSdW50aW1lIiwiYWNjaWRlbnRhbFN0cmljdE1vZGUiLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiZGVmaW5pdGlvbiIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsIl9uZXh0IiwiX3Rocm93IiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJfc2xpY2VkVG9BcnJheSIsImFycmF5V2l0aEhvbGVzIiwiX3giLCJfciIsIml0ZXJhYmxlVG9BcnJheUxpbWl0IiwiYXJyYXlMaWtlVG9BcnJheSIsInVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5Iiwibm9uSXRlcmFibGVSZXN0IiwiX2RlZmluZVByb3BlcnR5IiwiaGludCIsInByaW0iLCJ0b1ByaW1pdGl2ZSIsInJlcyIsInRvUHJvcGVydHlLZXkiLCJTZXR0aW5nU2VjdGlvbiIsIk5hdlRhYnMiLCJ0YWJzIiwiYWN0aXZlVGFiIiwic2V0QWN0aXZlVGFiIiwidGFiIiwic2x1ZyIsImFwaSIsIndwIiwiaTE4biIsIl9ueCIsInNwcmludGYiLCJJbWFnZVVwbG9hZCIsInNlbGVjdGVkRmlsZSIsInNldFNlbGVjdGVkRmlsZSIsInVwbG9hZEZpbGUiLCJvcHRpb24iLCJhbGVydCIsInVwbG9hZGVkSW1hZ2UiLCJvbkNoYW5nZSIsImZpbGVzIiwiQmV0dGVyX01lc3NhZ2VzX0FkbWluIiwiU2V0dGluZ3NDb250ZXh0Iiwic2V0dGluZ3MiLCJzYXZlU2V0dGluZ3MiLCJkaXNwYXRjaFNldHRpbmciLCJpb3NCdW5kbGVzIiwiQXBwbGVDb25uZWN0IiwiaW9zQXBpIiwia2V5SUQiLCJpc3N1ZXJJRCIsImFwaUtleSIsImlzQ29ubmVjdGVkIiwic2VsZWN0ZWRBcGlLZXkiLCJzZXRTZWxlY3RlZEFwaUtleSIsInNldEtleUlEIiwic2V0SXNzdWVySUQiLCJidXR0b25DbGFzcyIsImNvbm5lY3QiLCJtaW5XaWR0aCIsInBvc3QiLCJjcmVhdGVQcm9maWxlIiwiYnVuZGxlSWQiLCJjZXJ0aWZpY2F0ZUlkIiwiZGV2aWNlSWQiLCJBcHBsZURldiIsImFwcFByb2ZpbGVzIiwic2V0QXBwUHJvZmlsZXMiLCJkZXZpY2VzIiwic2V0RGV2aWNlcyIsImFkZERldmljZVNlbGVjdCIsInNldEFkZERldmljZVNlbGVjdCIsImdldERldmljZXMiLCJnZXRQcm9maWxlcyIsImlvc0J1bmRsZURldiIsImlvc0NlcnRpZmljYXRlRGV2IiwiY3JlYXRlQ2VydGlmaWNhdGUiLCJpb3NEZXZpY2VzIiwiZGV2aWNlIiwiZmluZCIsInVkaWQiLCJpdGVtIiwibWFyZ2luVG9wIiwiYWRkRGV2aWNlIiwiaWRlbnRpZmllciIsIm1hcmdpbkJvdHRvbSIsImlvc1Byb2ZpbGVEZXYiLCJpb3NCdW5kbGVTZXJ2aWNlRGV2IiwiaW9zUHJvZmlsZVNlcnZpY2VEZXYiLCJjaGFuZ2VkU2V0dGluZ3MiLCJyZWR1Y2VyIiwiTW9iaWxlQXBwV3JhcHBlciIsInNldFNldHRpbmdzIiwiTW9iaWxlQXBwIiwiZGVmYXVsdFRhYiIsInNldElvc0J1bmRsZXMiLCJnZXRCdW5kbGVzIiwic2V0dGluZ3NUb1NhdmUiLCJhcHBsaWNhdGlvbk5hbWUiLCJhcHBJY29uIiwiYXBwU3BsYXNoIiwiTWVzc2FnZXNWaWV3ZXIiLCJnZXRFbGVtZW50QnlJZCIsIm1lc3NhZ2VzVmlld2VyIiwiUmVhY3RET01DbGllbnQiLCJNb2JpbGVBcHBTZXR0aW5ncyIsImNsYXNzTGlzdCJdLCJzb3VyY2VSb290IjoiIn0=